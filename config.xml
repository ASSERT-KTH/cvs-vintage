<!-- ====================================================================== -->
<!--                                                                        -->
<!--  JBoss, the OpenSource EJB server                                      -->
<!--                                                                        -->
<!--  Distributable under LGPL license.                                     -->
<!--  See terms of license at http://www.gnu.org.                           -->
<!--                                                                        -->
<!-- ====================================================================== -->

<!-- $Id: config.xml,v 1.2 2001/08/11 05:20:20 user57 Exp $ -->

  <!-- ================================================================== -->
  <!-- Module Setup                                                       -->
  <!-- ================================================================== -->

  <!-- Module name(s) & version -->
  <property name="module.name" value="server"/>
  <property name="module.Name" value="JBoss Server"/>
  <property name="module.version" value="2.5alpha"/>


  <!-- ================================================================== -->
  <!-- Tool Setup                                                         -->
  <!-- ================================================================== -->

  <!-- Apache Ant and Optional Tasks -->
  <property name="apache.ant.root" value="${tools.root}/apache/ant"/>
  <property name="apache.ant.lib" value="${apache.ant.root}/lib"/>
  <property name="apache.ant.lib.ext" value="${apache.ant.lib}/ext"/>
  <path id="apache.ant.classpath">
    <fileset dir="${apache.ant.lib}">
      <include name="**/*.jar"/>
    </fileset>
  </path>
  <path id="apache.ant.ext.classpath">
    <fileset dir="${apache.ant.lib.ext}">
      <include name="**/*.jar"/>
    </fileset>
  </path>


  <!-- ================================================================== -->
  <!-- Library Setup                                                      -->
  <!-- ================================================================== -->

  <!-- Java Naming and Directory Interface (JNDI) -->
  <property name="sun.jndi.root" value="${thirdparty.root}/sun/jndi"/>
  <property name="sun.jndi.lib" value="${sun.jndi.root}/lib"/>
  <path id="sun.jndi.classpath">
    <pathelement path="${sun.jndi.lib}/jndi.jar"/>
  </path>

  <!-- Java Management Extensions (JMX) -->
  <property name="sun.jmx.root" value="${thirdparty.root}/sun/jmx"/>
  <property name="sun.jmx.lib" value="${sun.jmx.root}/lib"/>
  <path id="sun.jmx.classpath">
    <pathelement path="${sun.jmx.lib}/jmxri.jar"/>
  </path>

  <!-- Java API for XML Processing (JAXP) -->
  <property name="sun.jaxp.root" value="${thirdparty.root}/sun/jaxp"/>
  <property name="sun.jaxp.lib" value="${sun.jaxp.root}/lib"/>
  <path id="sun.jaxp.classpath">
    <fileset dir="${sun.jaxp.lib}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <!-- Java Authentication and Authorization Service (JAAS) -->
  <property name="sun.jaas.root" value="${thirdparty.root}/sun/jaas"/>
  <property name="sun.jaas.lib" value="${sun.jaas.root}/lib"/>
  <path id="sun.jaas.classpath">
    <pathelement path="${sun.jaas.lib}/jaas.jar"/>
  </path>

  <!-- JavaBeans Activation Framework (JAF) -->
  <property name="sun.jaf.root" value="${thirdparty.root}/sun/jaf"/>
  <property name="sun.jaf.lib" value="${sun.jaf.root}/lib"/>
  <path id="sun.jaf.classpath">
    <pathelement path="${sun.jaf.lib}/activation.jar"/>
  </path>

  <!-- JavaMail -->
  <property name="sun.javamail.root" value="${thirdparty.root}/sun/javamail"/>
  <property name="sun.javamail.lib" value="${sun.javamail.root}/lib"/>
  <path id="sun.javamail.classpath">
    <pathelement path="${sun.javamail.lib}/mail.jar"/>
  </path>

  <!-- Java Transaction Service (JTS) -->
  <property name="sun.jts.root" value="${thirdparty.root}/sun/jts"/>
  <property name="sun.jts.lib" value="${sun.jts.root}/lib"/>
  <path id="sun.jts.classpath">
    <pathelement path="${sun.jts.lib}/jts.jar"/>
  </path>

  <!-- Log4j -->
  <property name="apache.log4j.root" value="${thirdparty.root}/apache/log4j"/>
  <property name="apache.log4j.lib" value="${apache.log4j.root}/lib"/>
  <path id="apache.log4j.classpath">
    <pathelement path="${apache.log4j.lib}/log4j.jar"/>
  </path>

  <!-- EDU.oswego.cs.dl.util.concurrent -->
  <property name="oswego.concurrent.root" value="${thirdparty.root}/oswego/concurrent"/>
  <property name="oswego.concurrent.lib" value="${oswego.concurrent.root}/lib"/>
  <path id="oswego.concurrent.classpath">
    <pathelement path="${oswego.concurrent.lib}/concurrent.jar"/>
  </path>

  <!-- JPL-Util -->
  <property name="gjt.jpl-util.root" value="${thirdparty.root}/gjt/jpl-util"/>
  <property name="gjt.jpl-util.lib" value="${gjt.jpl-util.root}/lib"/>
  <path id="gjt.jpl-util.classpath">
    <fileset dir="${gjt.jpl-util.lib}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <!-- JUnit -->
  <property name="junit.junit.root" value="${thirdparty.root}/junit/junit"/>
  <property name="junit.junit.lib" value="${junit.junit.root}/lib"/>
  <path id="junit.junit.classpath">
    <pathelement path="${junit.junit.lib}/junit.jar"/>
  </path>

  <!-- *HACK* jsr77.jar -->
  <property name="hack.jsr77.root" value="${module.source}"/>
  <property name="hack.jsr77.lib" value="${hack.jsr77.root}/lib"/>
  <path id="hack.jsr77.classpath">
    <pathelement path="${hack.jsr77.lib}/jsr77.jar"/>
  </path>

  <!-- The combined library classpath -->
  <path id="library.classpath">
    <path refid="sun.jndi.classpath"/>
    <path refid="sun.jmx.classpath"/>
    <path refid="sun.jaxp.classpath"/>
    <path refid="sun.jaas.classpath"/>
    <path refid="sun.jaf.classpath"/>
    <path refid="sun.javamail.classpath"/>
    <path refid="sun.jts.classpath"/>
    <path refid="apache.log4j.classpath"/>
    <path refid="gjt.jpl-util.classpath"/>
    <path refid="oswego.concurrent.classpath"/>
    <path refid="junit.junit.classpath"/>
    <path refid="hack.jsr77.classpath"/>
  </path>


  <!-- ================================================================== -->
  <!-- Dependent Module Setup                                             -->
  <!-- ================================================================== -->
 
  <!-- 
     |  Dependent module paths should not use fileset expansion as that 
     |  will throw an exception if the directory does not exist.  Use
     |  a require task from the init-hook target to notify users when
     |  a library from a dependent module does not exist.
    -->

  <!-- J2EE -->
  <property name="jboss.j2ee.root" value="${project.root}/j2ee/output"/>
  <property name="jboss.j2ee.lib" value="${jboss.j2ee.root}/lib"/>
  <path id="jboss.j2ee.classpath">
    <pathelement path="${jboss.j2ee.lib}/jboss-j2ee.jar"/>
    <pathelement path="${jboss.j2ee.lib}/jboss-jdbc_ext.jar"/>
  </path>

  <!-- Naming -->
  <property name="jboss.naming.root" value="${project.root}/naming/output"/>
  <property name="jboss.naming.lib" value="${jboss.naming.root}/lib"/>
  <path id="jboss.naming.classpath">
    <pathelement path="${jboss.naming.lib}/jnpserver.jar"/>
  </path>

  <!-- The combined depedant module classpath -->
  <path id="dependentmodule.classpath">
    <path refid="jboss.j2ee.classpath"/>
    <path refid="jboss.naming.classpath"/>
  </path>


  <!-- ================================================================== -->
  <!-- Task Setup                                                         -->
  <!-- ================================================================== -->

  <!-- The combined thirdparty classpath -->
  <path id="thirdparty.classpath">
    <path refid="library.classpath"/>
    <path refid="dependentmodule.classpath"/>
  </path>

  <!-- This module is based on Java 1.2 -->
  <property name="javac.target" value="1.2"/>

  <!-- classpath and local.classpath must have a value using with a path -->
  <property name="classpath" value=""/>
  <property name="local.classpath" value=""/>

  <!-- The classpath required to build classes. -->
  <path id="javac.classpath">
    <pathelement path="${classpath}"/>
    <pathelement path="${local.classpath}"/>
    <path refid="thirdparty.classpath"/>
  </path>

  <!-- Packages to include when generating api documentation -->
  <property name="javadoc.packages" value="org.jboss.*"/>

  <!-- The classpath required to build javadocs. -->
  <path id="javadoc.classpath">
    <path refid="javac.classpath"/>
  </path>

  <!-- Override JUnit defaults -->
  <property name="junit.timeout" value="240000"/> <!-- 4 minutes -->
  <property name="junit.batchtest.todir" value="${build.reports}"/>
  <property name="junit.jvm.options" value="-client"/>
  <path id="junit.task.classpath">
    <path refid="apache.ant.ext.classpath"/>
    <path refid="junit.junit.classpath"/>
  </path>

  <!-- RMIC should generate stubs compatible with Java 1.2+ -->
  <property name="rmic.stubVersion" value="1.2"/>

  <!-- Where source files live -->
  <property name="source.java" value="${module.source}/main"/>
  <property name="source.etc" value="${module.source}/etc"/>
  <property name="source.bin" value="${module.source}/bin"/>
  <property name="source.docs" value="${module.source}/docs"/>
  <property name="source.resources" value="${module.source}/resources"/>

  <!-- Where build generated files will go -->
  <property name="build.classes" value="${module.build}/classes"/>
  <property name="build.jars" value="${module.build}/lib"/>
  <property name="build.api" value="${module.build}/api"/>
  <property name="build.etc" value="${module.build}/etc"/>
  <property name="build.bin" value="${module.build}/bin"/>
  <property name="build.docs" value="${module.build}/docs"/>
  <property name="build.resources" value="${module.build}/resources"/>
  <property name="build.reports" value="${module.build}/reports"/>

  <!-- Where release generated files will go -->
  <property name="release.id" value="${module.name}-${module.version}-${build.id}"/>
  <property name="release.root" value="${module.release}/${release.id}"/>

  <property name="release.bin" value="${release.root}/bin"/>
  <property name="release.client" value="${release.root}/client"/>
  <property name="release.conf" value="${release.root}/conf"/>
  <property name="release.conf.default" value="${release.conf}/default"/>
  <property name="release.db" value="${release.root}/db"/>
  <property name="release.deploy" value="${release.root}/deploy"/>
  <property name="release.deploy.lib" value="${release.deploy}/lib"/>
  <property name="release.lib" value="${release.root}/lib"/>
  <property name="release.lib.ext" value="${release.lib}/ext"/>
  <property name="release.log" value="${release.root}/log"/>
  <property name="release.tmp" value="${release.root}/tmp"/>

  <!-- Documentation and examples -->
  <property name="release.docs" value="${release.root}/docs"/>
  <property name="release.examples" value="${release.docs}/examples"/>
  <property name="release.api" value="${release.docs}/api"/>
  <property name="release.module.docs" value="${release.docs}/${module.name}"/>
  <property name="release.module.api" value="${release.api}/${module.name}"/>


  <!-- ================================================================== -->
  <!-- Initialization & Configure Hooks                                   --> 
  <!-- ================================================================== -->

  <!-- Executed at the end of the 'configure' target -->
  <target name="configure-hook">
    <!-- Execute custom configuration tasks here. -->
  </target>

  <!-- Executed at the end of the 'init' target -->
  <target name="init-hook">
    <!-- Execute custom initialization tasks here. -->
    <taskdef name="junit" classpathref="junit.task.classpath"
	     classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"/>
  </target>
