<?xml version="1.0"?>
<!DOCTYPE project SYSTEM "./ant.dtd">

<project name="columba" default="build" basedir=".">

	<property name="src" value="."/>
	<property name="build" value="build"/>
	<property name="user.name" value="The columba Team"/>
	<!-- here we should use the cvs-verion info for automatic replace the version -->
	<property name="version" value="0.9.11-cvs"/>
	<property name="dest" value="../columba-${version}"/>
  <property name="ownclasspath" value="${classpath}:${src}/ext/log4j.jar:${src}/ext/jython.jar"/>

	<!-- definition of the task to check the style of the java-code -->
	<taskdef name="checkstyle" classname="com.puppycrawl.tools.checkstyle.CheckStyleTask">
		<classpath>
			<pathelement location="${src}/ext/checkstyle-all-2.1.jar"/>
		</classpath>
	</taskdef>

	<!-- the task that realy checks the style -->
	<target name="verify">
		<checkstyle lcurlyType="nlow" 
								lcurlyMethod="nlow"
								lcurlyOther="nlow"
								maxLineLen="160"
								allowTabs="true"
								ignoreWhitespace="true"
								ignoreCastWhitespace="true"
								failOnViolation="false"> 
     <fileset dir="${src}" includes="**/*.java"/>
    </checkstyle>
	</target>

	<!-- creating the destination directory -->
	<target name="init">
		<echo message="you run java with version ${ant.java.version}"/>
		<mkdir dir="${dest}"/>
	</target>

	<!-- copy required files for later tasks into the dest directory -->
	<target name="copy-required">
		<copy todir="${dest}">
			<fileset dir="${src}"> 
				<include name="**/*.xml"/>
				<include name="**/*.dtd"/>
				<include name="**/*.gif"/>
				<include name="**/*.jpeg"/>
				<include name="**/*.png"/>
				<include name="**/*.wav"/>
				<include name="**/*.properties"/>
				<include name="**/*.jar"/>
				<include name="**/*.py"/>
				<include name="README"/>
				<include name="LICENSE"/>
				<include name="CHANGES"/>
				<include name="AUTHORS"/>
				<include name="RUN"/>
				<include name="run.bat"/>
				<include name="run.sh"/>
				<include name="run_source.bat"/>
				<include name="run_source.sh"/>
				<include name="run_source_jdk13.bat"/>
				<include name="run_source_jdk13.sh"/>
				<include name="ext/Lib/**"/>
				<exclude name="build.xml"/>
				<exclude name="ant.dtd"/>
				<exclude name="ext/checkstyle-all-2.1.jar"/>
			</fileset>
		</copy>
	</target>

	<!-- compile the classes -->
	<target name="compile" depends="init,copy-required">
		<echo message="the classes are going to ${dest} "/> 
		<javac srcdir="${src}" destdir="${dest}"	classpath="${ownclasspath}" encoding="ISO-8859-1" debug="yes"/>
	</target>

	<!-- pack the files into one jar file with automatic manifest file -->
	<target name="jar" depends="compile">
		<delete file="${dest}/columba.jar"/>
		<echo message="the jar file are going to ${dest}/columba.jar "/> 
		<jar basedir="${dest}" jarfile="${dest}/columba.jar">
			<include name="**"/>
			<exclude name="columba.jar"/>
			<exclude name="README"/>
			<exclude name="CHANGES"/>
			<exclude name="LICENSE"/>
			<exclude name="AUTHORS"/>
			<exclude name="RUN"/>
			<exclude name="run.bat"/>
			<exclude name="run.sh"/>
			<exclude name="run_source.bat"/>
			<exclude name="run_source.sh"/>
			<exclude name="run_source_jdk13.bat"/>
			<exclude name="run_source_jdk13.sh"/>
      <exclude name="**/*.zip"/>
			<manifest>
				<attribute name="Main-Class" value="org.columba.main.Main"/>
				<attribute name="Class-Path" value="ext/xalan.jar ext/jaxp.jar ext/crimson.jar ext/log4j.jar ext/jython.jar"/>
				<attribute name="Sealed" value="true"/>
			</manifest>
		</jar>
	</target>

	<target name="run-script" depends="init">
		<!-- echo file="${dest}/run.sh" >#!/bin/sh
echo "starting columba ..."
echo "from path: `pwd`"
if test -f "`pwd`/columba.jar" ; then java -jar `pwd`/columba.jar ; 
else echo "cannot find columba.jar in `pwd`"; fi
		</echo -->
		<echo message="at the moment there are no dynamic runscripts required"/>
	</target>


	<!-- create an release zip file, contains the jar file and README, LICENSE, CHANGES, AUTHORS -->
	<!-- this task is for an binary release -->
	<target name="zip-bin" depends="jar,run-script">
		<echo message="the zipfile are going to ${dest}/columba-${version}-bin.zip "/> 
		<zip zipfile="${dest}/columba-${version}-bin.zip" update="true">
			<zipfileset dir="${dest}" prefix="columba-${version}-bin">
				<include name="README"/>
				<include name="AUTHORS"/>
				<include name="LICENSE"/>
				<include name="CHANGES"/>
				<include name="RUN"/>
				<include name="run.bat"/>
				<include name="run.sh"/>
				<include name="columba.jar"/>
				<include name="**/*.jar"/>
				<!-- include name="ext/csWillySpell.jar" -->
			</zipfileset>
		</zip>
	</target>
	<!-- create an source zip file, contain all sources and README, LICENSE, CHANGES, AUTHORS -->
	<!-- this task is for an source release -->
	<target name="zip-source" depends="init,run-script">
		<echo message="the zipfile are going to ${dest}/columba-${version}-src.zip "/> 
		<zip zipfile="${dest}/columba-${version}-src.zip" update="true">
			<zipfileset dir="${src}" prefix="columba-${version}-src">
				<include name="**/*.java"/>
				<include name="**/*.jar"/>
				<include name="**/*.xml"/>
				<include name="**/*.dtd"/>
				<include name="**/*.gif"/>
				<include name="**/*.jpeg"/>
				<include name="**/*.png"/>
				<include name="**/*.wav"/>
				<include name="**/*.properties"/>
				<include name="README"/>
				<include name="LICENSE"/>
				<include name="CHANGES"/>
				<include name="AUTHORS"/>
				<include name="run_source.bat"/>
				<include name="run_source.sh"/>
				<include name="run_source_jdk13.bat"/>
				<include name="run_source_jdk13.sh"/>
			</zipfileset>
			<!--zipfileset dir="${dest}" prefix="columba-${version}-src" -->
				<!-- include name="run.sh"/-->
			<!-- /zipfileset-->
		</zip>
	</target>

	<!-- this target creates two zip-files, one for binary release and one for the source stuff -->
	<target name="zip" depends="zip-bin,zip-source"/>

	<!-- this target creates two zip-files, one for binary release and one for the source stuff -->
	<!-- this is also the release target ;-0 -->
	<target name="release" depends="zip-bin,zip-source"/>


	<!-- only for build the class-files -->
	<target name="build" depends="compile"/>

	<!-- to build an javadoc documentation -->
	<target name="doc" depends="init">
		<echo message="the documentation will go to ${dest}/javadoc"/>
		<echo message="sopurcepath: ${src}/org/columba"/>
		<javadoc sourcepath="${src}" 
						 destdir="${dest}/javadoc" 
						 packagenames="org.columba.*"
						 author="true"
						 version="true"
						 use="true"
						 package="true"
						 windowtitle="columba API documentation">
    <doctitle><![CDATA[<h1>columba API documentation</h1>]]></doctitle>
		</javadoc>
	</target>
	
	<!-- to run the application via ant, this is good for testing and coding in xemacs -->
	<target name="run" depends="jar">
		<java jar="${dest}/columba.jar" fork="yes">
			<arg value="--debug"/>
		</java>
	</target>

	<!-- to clean up the dest-directory -->
	<target name="clean">
		<delete dir="${dest}"/>
	</target>
		
</project>
