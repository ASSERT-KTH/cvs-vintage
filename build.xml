<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
  <!ENTITY buildmagic SYSTEM "../tools/etc/buildfragments/buildmagic.ent">
  <!ENTITY tools      SYSTEM "../tools/etc/buildfragments/tools.ent">
  <!ENTITY libraries  SYSTEM "../tools/etc/buildfragments/libraries.ent">
  <!ENTITY modules    SYSTEM "../tools/etc/buildfragments/modules.ent">
  <!ENTITY defaults   SYSTEM "../tools/etc/buildfragments/defaults.ent">
  <!ENTITY targets    SYSTEM "../tools/etc/buildfragments/targets.ent">
]>

<!-- $Id: build.xml,v 1.130 2002/12/14 06:28:41 stormy_sky Exp $ -->

<!--+======================================================================+-->
<!--| JBoss (The OpenSource J2EE WebOS) Build File                         |-->
<!--|                                                                      |-->
<!--| Distributable under LGPL license.                                    |-->
<!--| See terms of license at http://www.gnu.org.                          |-->
<!--|                                                                      |-->
<!--| This file has been designed to work with the 'tools' module and      |-->
<!--| Buildmagic extentions.                                               |-->
<!--+======================================================================+-->

<project default="main" name="JBoss/Server">

  <!--+====================================================================+-->
  <!--| Setup                                                              |-->
  <!--|                                                                    |-->
  <!--| Include the common build elements.                                 |-->
  <!--|                                                                    |-->
  <!--| This defines several different targets, properties and paths.      |-->
  <!--| It also sets up the basic extention tasks amoung other things.     |-->
  <!--+====================================================================+-->

  &buildmagic;
  &libraries;
  &modules;
  &defaults;
  &tools;
  &targets;


  <!--+====================================================================+-->
  <!--| Initialization                                                     |-->
  <!--|                                                                    |-->
  <!--| Initialize the build system.  Other targets should depend on       |-->
  <!--| 'init'.                                                            |-->
  <!--+====================================================================+-->

  <target name="init" depends="_default:init">
    <!-- Add module specific elements here. -->
  </target>


  <!--+====================================================================+-->
  <!--| Configuration                                                      |-->
  <!--|                                                                    |-->
  <!--| This target is invoked by the Buildmagic initialization logic      |-->
  <!--| and should contain module specific configuration elements.         |-->
  <!--+====================================================================+-->

  <target name="configure" unless="configure.disable">

    <!-- Module name(s) & version -->
    <property name="module.name" value="server"/>
    <property name="module.Name" value="JBoss Server"/>

    <!-- Configure thirdparty libraries -->
    <call target="configure-libraries"/>
    <path id="library.classpath">
      <path refid="sun.jaas.classpath"/>
      <path refid="sun.jsse.classpath"/>
      <path refid="sun.jts.classpath"/>
      <path refid="apache.xalan.classpath"/>
      <path refid="apache.log4j.classpath"/>
      <path refid="apache.bcel.classpath"/>
      <path refid="dom4j.dom4j.classpath"/>
      <path refid="gjt.jpl-util.classpath"/>
      <path refid="gnu.getopt.classpath"/>
      <path refid="oswego.concurrent.classpath"/>
      <path refid="junit.junit.classpath"/>
      <path refid="mysql.mysql.classpath"/>
      <path refid="gnu.regexp.classpath"/>
    </path>

    <!-- Configure modules -->
    <call target="configure-modules"/>
    <path id="dependentmodule.classpath">
      <path refid="jboss.j2ee.classpath"/>
      <path refid="jboss.common.classpath"/>
      <path refid="jboss.system.classpath"/>
      <path refid="jboss.jmx.classpath"/>
      <path refid="jboss.naming.classpath"/>
      <path refid="jboss.management.classpath"/>
      <path refid="jboss.transaction.classpath"/>
      <path refid="jboss.connector.classpath"/>
    </path>

    <!--+=======================================+-->
    <!--| Override any default properties here. |-->
    <!--+=======================================+-->

    <!-- Configure defaults & build tools --> 
    <call target="configure-defaults"/>
    <call target="configure-tools"/>

    <!--+=======================================+-->
    <!--| Define module specific elements here. |-->
    <!--+=======================================+-->

    <!-- Users should override by defining a property in build/local.properties -->

    <!-- default.type.mapping is used in standardjaws.xml and standardjbosscmp-jdbc.xml-->
    <property name="default.type.mapping" value="Hypersonic SQL"/>

    <!-- cmp1 persistence manager for standardjboss.xml -->
    <!--JAWS-->
    <property name="cmp1.persistencemanager" value="org.jboss.ejb.plugins.jaws.JAWSPersistenceManager"/>
    <!--cmp2 manager used for cmp1 as well -->
    <!--property name="cmp1.persistencemanager" value="org.jboss.ejb.plugins.cmp.jdbc.JDBCStoreManager"/-->

    <!--Choice of with or without new connection caching scheme -->
    <!--without-->
    <!--property name="jca.connection.interceptor" value=""/-->
    <!--with-->
    <property name="jca.connection.interceptor" value="&lt;interceptor&gt;org.jboss.resource.connectionmanager.CachedConnectionInterceptor&lt;/interceptor&gt;"/>

    <property name="jboss.server.log.console.threshold" value="INFO"/>

  </target>


  <!--+====================================================================+-->
  <!--| Compile                                                            |-->
  <!--|                                                                    |-->
  <!--| This target should depend on other compile-* targets for each      |-->
  <!--| different type of compile that needs to be performed, short of     |-->
  <!--| documentation compiles.                                            |-->
  <!--+====================================================================+-->

  <target name="compile" 
	  description="Compile all source files."
	  depends="generate-parsers,
                   compile-bean-sources, 
                   compile-mbean-sources,
                   compile-classes,
                   compile-rmi, 
                   _default:compile-etc,
                   _default:compile-resources,
                   _default:compile-bin">
    <!-- Add module specific elements here. -->
  </target>

  <!-- Generate parsers -->
  <target name="generate-parsers" depends="init">
    <mkdir dir="${build.gen-src}/org/jboss/ejb/plugins/cmp/ejbql"/>

    <!--
       | make sure to generate the JBoss-QL parser first so the node
       | interface is keyed to JBossQLParserVisitor.
      -->

    <!-- JBoss-QL parser -->
    <jjtree
      target="${source.java}/org/jboss/ejb/plugins/cmp/ejbql/JBossQLParser.jjt" 
	   outputdirectory="${build.gen-src}/org/jboss/ejb/plugins/cmp/ejbql"
	   javacchome="${sun.javacc.lib}"/>

    <javacc
      target="${build.gen-src}/org/jboss/ejb/plugins/cmp/ejbql/JBossQLParser.jj"
	   javacchome="${sun.javacc.lib}"/>

    <!-- EJB-QL parser -->
    <jjtree
      target="${source.java}/org/jboss/ejb/plugins/cmp/ejbql/EJBQLParser.jjt" 
	   outputdirectory="${build.gen-src}/org/jboss/ejb/plugins/cmp/ejbql"
	   javacchome="${sun.javacc.lib}"/>

    <javacc
      target="${build.gen-src}/org/jboss/ejb/plugins/cmp/ejbql/EJBQLParser.jj" 
	   javacchome="${sun.javacc.lib}"/>

  </target>

  <!-- Compile mbeans with XDoclet -->
  <target name="compile-mbean-sources" depends="init">

    <mkdir dir="${build.gen-src}"/>
    <jmxdoclet destdir="${build.gen-src}"
	     excludedtags="@version,@author">
      <fileset dir="${source.java}">
        <include name="org/jboss/aspect/jmx/*.java"/>
        <include name="org/jboss/deployment/EARDeployer.java"/>
        <include name="org/jboss/ejb/EjbModule.java"/>
        <include name="org/jboss/ejb/EJBDeployer.java"/>
        <include name="org/jboss/ejb/plugins/StatefulSessionFilePersistenceManager.java"/>
        <include name="org/jboss/ejb/timer/*TimerSource.java"/>
        <include name="org/jboss/ejb/timer/*PersistenceManager.java"/>
        <include name="org/jboss/invocation/**/*.java"/>
        <include name="org/jboss/proxy/**/*.java"/>
        <include name="org/jboss/jms/**/*.java"/>
        <include name="org/jboss/jmx/**/*.java"/>
        <include name="org/jboss/logging/**/*.java"/>
        <include name="org/jboss/naming/**/*.java"/>
        <include name="org/jboss/web/**/*.java"/>
        <include name="org/jboss/tm/**/*.java"/>
      </fileset>
      <mbeaninterface mergedir="${project.tools}/etc/xdoclet/templates"/>
    </jmxdoclet>
  </target>

  <!-- Compile EJB beans with XDoclet -->
  <target name="compile-bean-sources" depends="init">

    <mkdir dir="${build.gen-src}"/>
    <mkdir dir="${build.resources}/ejbadaptor/META-INF"/>
    <ejbdoclet destdir="${build.gen-src}"
	     ejbspec="1.1"
	     excludedtags="@version,@author">
      <fileset dir="${source.java}">
        <include name="org/jboss/jmx/adaptor/ejb/*Bean.java"/>
        <exclude name="org/jboss/jmx/adaptor/ejb/*MBean.java"/>
      </fileset>
      <packageSubstitution packages="ejb" substituteWith="interfaces"/>
      <remoteinterface/>
      <homeinterface/>
      <session/>
      <deploymentdescriptor xmlencoding="UTF-8" destdir="${build.resources}/ejbadaptor/META-INF"/>
      <jboss xmlencoding="UTF-8" version="3.0" destdir="${build.resources}/ejbadaptor/META-INF"/>
    </ejbdoclet>

  </target>

  <!-- Generate sources for jdbc2 -->
  <target name="gen-src-jdbc2" depends="init" unless="HAVE_JDK_1.4">
    <echo message="generating sources for JDBC2"/>
    <mkdir dir="${build.gen-src}"/>
    <copy todir="${build.gen-src}" filtering="yes">
      <fileset dir="${source.java}">
         <include name="org/jboss/ejb/plugins/cmp/jdbc/**/*.jpp"/>
      </fileset>
      <mapper type="glob" from="*.jpp" to="*.java"/>
      <filterset>
        <filter token="JDK1.4START" value="/*"/>
        <filter token="JDK1.4END" value="*/"/>
        <filter token="JDK1.3START" value=""/>
        <filter token="JDK1.3END" value=""/>
      </filterset>
    </copy>
  </target>

  <!-- Generate sources for jdbc3 -->
  <target name="gen-src-jdbc3" depends="init" if="HAVE_JDK_1.4">
    <echo message="generating sources for JDBC3"/>
    <mkdir dir="${build.gen-src}"/>
    <copy todir="${build.gen-src}" filtering="yes">
      <fileset dir="${source.java}">
         <include name="org/jboss/ejb/plugins/cmp/jdbc/**/*.jpp"/>
      </fileset>
      <mapper type="glob" from="*.jpp" to="*.java"/>
      <filterset>
        <filter token="JDK1.4START" value=""/>
        <filter token="JDK1.4END" value=""/>
        <filter token="JDK1.3START" value="/*"/>
        <filter token="JDK1.3END" value="*/"/>
      </filterset>
    </copy>
  </target>

  <!-- Compile all class files -->
  <target name="compile-classes" depends="init,gen-src-jdbc2,gen-src-jdbc3">
    <mkdir dir="${build.classes}"/>
    
    <javac destdir="${build.classes}"
           optimize="${javac.optimize}"
	   target="${javac.target}"
           debug="${javac.debug}"
	   depend="${javac.depend}"
	   verbose="${javac.verbose}"
	   deprecation="${javac.deprecation}"
	   includeAntRuntime="${javac.include.ant.runtime}"
	   includeJavaRuntime="${javac.include.java.runtime}"
	   failonerror="${javac.fail.onerror}">
       <classpath refid="javac.classpath"/>

       <src path="${source.java}"/>
       <src path="${build.gen-src}"/>

       <include name="${javac.includes}"/>
       <exclude name="${javac.excludes}"/>

       <exclude name="org/jboss/invocation/trunk/client/nbio/*.java" unless="HAVE_JDK_1.4"/>
       <exclude name="org/jboss/invocation/trunk/server/nbio/*.java" unless="HAVE_JDK_1.4"/>

       <exclude name="org/jboss/ejb/plugins/cmp/jdbc/jdbc3/*.java" unless="HAVE_JDK_1.4"/>
    </javac>
  </target>

  <!-- Compile RMI stubs -->
  <target name="compile-rmi" depends="compile-classes">
    <rmic base="${build.classes}"
     sourcebase="${build.classes}"
	  verify="${rmic.verify}"
	  iiop="${rmic.iiop}"
	  iiopopts="${rmic.iiopops}"
	  idl="${rmic.idl}"
	  idlopts="${rmic.idlops}"
	  debug="${rmic.debug}"
          stubVersion="${rmic.stubVersion}">
      <classpath refid="javac.classpath"/>
      <include name="${rmic.includes}"/>
      <exclude name="${rmic.excludes}"/>

      <include name="org/jboss/tm/usertx/server/UserTransactionSessionFactoryImpl.class"/>
      <include name="org/jboss/tm/usertx/server/UserTransactionSessionImpl.class"/>
      <include name="org/jboss/jmx/adaptor/rmi/RMIAdaptorImpl.class"/>
      <include name="org/jboss/jmx/connector/notification/RMIClientNotificationListener.class"/>
      <include name="org/jboss/invocation/jrmp/server/JRMPInvoker.class"/>
    </rmic>
  </target>


  <!--+====================================================================+-->
  <!--| Generate Output                                                    |-->
  <!--|                                                                    |-->
  <!--| Generates the target output for this module. Target output is      |-->
  <!--| the output which is ment to be released or used by external        |-->
  <!--| modules.                                                           |-->
  <!--+====================================================================+-->

  <target name="output"
	  description="Generate all target output."
	  depends="compile">

    <mkdir dir="${build.lib}"/>

    <!-- jboss.jar -->
    <jar jarfile="${build.lib}/jboss.jar" manifest="${build.etc}/default.mf">
      <fileset dir="${build.classes}">
        <include name="org/jboss/**"/>
        
        <!-- Exclude command line utilities -->
        <exclude name="org/jboss/*"/>

        <!-- Exclude JMX Connector stuff we will use the connector SAR for that -->
        <exclude name="org/jboss/jmx/**"/>

        <!-- Exclude key factory stuff -->
        <exclude name="org/jboss/ejb/plugins/keygenerator/uuid/**"/>
      </fileset>
      
      <!-- HACK -->
      <fileset dir="${build.classes}">
        <!-- But include this interface because the Farm needs it -->
        <include name="org/jboss/jmx/connector/RemoteMBeanServer.class"/>
        <include name="org/jboss/jmx/adaptor/rmi/RMIAdaptorImpl.class"/>
        <include name="org/jboss/jmx/adaptor/interfaces/Adaptor*.class"/>
      </fileset>

      <fileset dir="${build.resources}">
        <include name="org/jboss/**"/>
        <exclude name="org/jboss/ejb/deployment/**"/>
        <exclude name="org/jboss/ejb/plugins/**"/>
      </fileset>
    </jar>

    <!-- jboss-minimal.jar -->
    <jar jarfile="${build.lib}/jboss-minimal.jar"
         manifest="${build.etc}/default.mf">
      <fileset dir="${build.classes}">
        <include name="org/jboss/logging/**"/>
        <include name="org/jboss/naming/**"/>
        <include name="org/jboss/invocation/**"/>
      </fileset>
    </jar>

    <!-- jboss-client.jar -->
    <jar jarfile="${build.lib}/jboss-client.jar"
         manifest="${build.etc}/default.mf">
      <fileset dir="${build.classes}">
        <include name="org/jboss/proxy/**"/>
        <include name="org/jboss/invocation/*.class"/>
	<include name="org/jboss/invocation/trunk/client/**/*.class"/>
        <include name="org/jboss/invocation/jrmp/interfaces/JRMPInvokerProxy.class"/>
        <include name="org/jboss/invocation/jrmp/server/*Stub.class"/>
        <include name="org/jboss/invocation/pooled/interfaces/*"/>
        <include name="org/jboss/ejb/CacheKey.class"/>
        <include name="org/jboss/ejb/ListCacheKey.class"/>
        <include name="org/jboss/ejb/plugins/lock/ApplicationDeadlockException.class"/>
        <include name="org/jboss/monitor/client/*.class"/>
        <include name="org/jboss/tm/TransactionPropagationContextFactory.class"/>
        <include name="org/jboss/tm/GlobalId.class"/>
        <include name="org/jboss/tm/usertx/client/*.class"/>
        <include name="org/jboss/tm/usertx/interfaces/*.class"/>
        <include name="org/jboss/tm/usertx/server/*Stub.class"/>
      </fileset>
    </jar>

    <!-- verifier.jar -->
    <jar jarfile="${build.lib}/verifier.jar"
         manifest="${build.etc}/manifest/verifier.mf">
      <fileset dir="${build.classes}">
        <include name="org/jboss/verifier/**"/>
      </fileset>
      <fileset dir="${build.resources}/org/jboss/verifier"/>
    </jar>

    <!-- jmx-rmi-adaptor.sar --> 
    <jar jarfile="${build.lib}/jmx-rmi-adaptor.sar"
         manifest="${build.etc}/default.mf">
      <fileset dir="${build.classes}">
        <include name="org/jboss/jmx/adaptor/rmi/**"/>
        <include name="org/jboss/jmx/connector/notification/**"/>
        <include name="org/jboss/jmx/connector/rmi/**"/>
      </fileset>
      <fileset dir="${build.resources}/jmx-rmi-adapter">
        <include name="**/*"/>
      </fileset>
    </jar>

    <!-- jmx-ejb-adaptor.jar --> 
    <jar jarfile="${build.lib}/jmx-ejb-adaptor.jar"
         manifest="${build.etc}/default.mf">
      <fileset dir="${build.classes}">
        <include name="org/jboss/jmx/ObjectHandler**"/>
        <include name="org/jboss/jmx/adaptor/ejb/**"/>
        <include name="org/jboss/jmx/adaptor/interfaces/**"/>
        <include name="org/jboss/jmx/connector/RemoteMBeanServer.class"/>
      </fileset>
      <fileset dir="${build.resources}/ejbadaptor">
        <include name="META-INF/**"/>
      </fileset>
    </jar>

    <!-- jmx-ejb-connector-client.jar -->
    <jar jarfile="${build.lib}/jmx-ejb-connector-client.jar"
         manifest="${build.etc}/default.mf">
      <fileset dir="${build.classes}">
        <include name="org/jboss/jmx/ObjectHandler**"/>
        <include name="org/jboss/jmx/connector/notification/**"/>
        <include name="org/jboss/jmx/connector/ejb/**"/>
        <include name="org/jboss/jmx/adaptor/ejb/*Exception.class"/>
        <include name="org/jboss/jmx/adaptor/ejb/AdaptorSession.class"/>
        <include name="org/jboss/jmx/adaptor/interfaces/**"/>
      </fileset>
    </jar>

    <!-- jmx-ejb-connector-server.sar --> 
    <jar jarfile="${build.lib}/jmx-ejb-connector-server.sar"
         manifest="${build.etc}/default.mf">
      <fileset dir="${build.classes}">
        <include name="org/jboss/jmx/connector/notification/**"/>
        <include name="org/jboss/jmx/connector/ejb/**Stub.class"/>
      </fileset>
      <fileset dir="${build.resources}/jmx-ejb-connector-server">
        <include name="**/*"/>
      </fileset>
    </jar>

    <!-- jmx-html-adaptor.sar -->
    <!-- (should try to use jlink for this) -->  
<!-- AS It seems that the HTML-Adaptor is gone therefore not need to create
     this SAR file anymore
    <unjar src="${sun.jmx.lib}/jmxtools.jar" dest="${build.classes}"/>
    <jar jarfile="${build.lib}/jmx-html-adaptor.sar">
         <!- - manifest="${build.etc}/manifest/rmiconnector.mf"> - ->
      <fileset dir="${build.classes}">
        <include name="org/jboss/jmx/interfaces/**"/>
        <include name="org/jboss/jmx/server/**"/>
        <include name="org/jboss/jmx/client**"/>
      </fileset>
      <fileset dir="${build.resources}/jmx-html-adaptor">
        <include name="**/*"/>
      </fileset>
    </jar>
-->
   
    <!-- jmx-rmi-adaptor.jar -->
    <jar jarfile="${build.lib}/jmx-rmi-adaptor.jar"
         manifest="${build.etc}/manifest/rmi-adaptor.mf">
      <fileset dir="${build.classes}">
        <include name="org/jboss/jmx/adaptor/rmi/**"/>
        <include name="org/jboss/jmx/connector/RemoteMBeanServer**"/>
        <include name="org/jboss/jmx/connector/notification/**"/>
        <include name="org/jboss/jmx/connector/rmi/**"/>
        <include name="org/jboss/system/Service**"/>
        <include name="org/jboss/naming/**"/>

        <!-- why ? AS Because it allows the user to test the JAR file by "java -jar" -->
        <include name="org/jboss/jmx/connector/rmi/TestServer**"/>
      </fileset>
    </jar>

    <!-- jmx-rmi-connector-client.jar -->
    <jar jarfile="${build.lib}/jmx-rmi-connector-client.jar"
         manifest="${build.etc}/default.mf">
      <fileset dir="${build.classes}">
        <include name="org/jboss/jmx/adaptor/rmi/*Stub.class"/>
        <include name="org/jboss/jmx/adaptor/rmi/RMIAdaptor*.class"/>
        <include name="org/jboss/jmx/connector/RemoteMBeanServer.class"/>
        <include name="org/jboss/jmx/connector/notification/*"/>
        <include name="org/jboss/jmx/connector/rmi/**"/>
      </fileset>
    </jar>

    <!-- jmx-connector-client-factory.jar -->
    <jar jarfile="${build.lib}/jmx-connector-client-factory.jar"
         manifest="${build.etc}/manifest/connector-client-factory.mf">
      <fileset dir="${build.classes}">
        <include name="org/jboss/jmx/connector/ConnectorFactory*.class"/>
        <include name="org/jboss/jmx/connector/TestClient*.class"/>
      </fileset>
    </jar>

    <!-- Unjar getopt better packaging (but slower builds) -->
    <mkdir dir="${build.gen}/getopt"/>
    <unjar src="${gnu.getopt.lib}/getopt.jar" dest="${build.gen}/getopt"/>

    <!-- Build deployer.jar -->
    <jar jarfile="${build.lib}/deployer.jar" manifest="${build.etc}/manifest/deployer.mf">
      <fileset dir="${build.classes}">
        <include name="org/jboss/jmx/service/RemoteDeployer*.class"/>
      </fileset>
      <fileset dir="${build.resources}">
        <include name="log4j.properties"/>
        <include name="jndi.properties"/>
      </fileset>

      <!-- Include getopt -->
      <fileset dir="${build.gen}/getopt">
        <include name="**"/>
      </fileset>
    </jar>

    <!-- Build shutdown.jar -->
    <jar jarfile="${build.lib}/shutdown.jar" manifest="${build.etc}/manifest/shutdown.mf">
      <fileset dir="${build.classes}">
        <include name="org/jboss/Shutdown*.class"/>
      </fileset>
      <fileset dir="${build.resources}">
        <include name="log4j.properties"/>
        <include name="jndi.properties"/>
      </fileset>

      <!-- Include getopt -->
      <fileset dir="${build.gen}/getopt">
        <include name="**"/>
      </fileset>
    </jar>

    <!-- HACK jboss-security.jar -->
    <jar jarfile="${build.lib}/jboss-security.jar">
      <fileset dir="${build.classes}">
        <include name="org/jboss/security/**"/>
      </fileset>
    </jar>

    <!--
       | JBoss/Testsuite Support
     -->

    <!-- testsuite-support.jar -->
    <jar jarfile="${build.lib}/testsuite-support.jar"
         manifest="${build.etc}/manifest/testsuite-support.mf">
      <fileset dir="${build.classes}">
         <include name="org/jboss/jmx/service/RemoteDeployer*.class"/>
         <include name="org/jboss/jmx/connector/RemoteMBeanServer**"/>
         <include name="org/jboss/jmx/connector/notification/RMI**"/>
         <include name="org/jboss/jmx/connector/rmi/RMIConnector.class"/>
         <include name="org/jboss/jmx/connector/rmi/RMINotificationListener.class"/>
         <include name="org/jboss/jmx/connector/rmi/RMIClientConnectorImpl*.class"/>
         <include name="org/jboss/jmx/connector/rmi/RMIConnectorImpl_Stub.class"/>
         <include name="org/jboss/jmx/connector/ConnectorFactory*.class"/>
         <include name="org/jboss/ejb/CacheKey.class"/>
      </fileset>
    </jar>

    <!-- uuid-key-generator.sar -->
    <jar jarfile="${build.lib}/uuid-key-generator.sar"
         manifest="${build.etc}/default.mf">
      <fileset dir="${build.classes}">
        <include name="org/jboss/ejb/plugins/keygenerator/uuid/**"/>
      </fileset>
      <fileset dir="${build.resources}/uuid-key-generator">
        <include name="**/*"/>
      </fileset>
    </jar>
  </target>


  <!--+====================================================================+-->
  <!--| Documents                                                          |-->
  <!--|                                                                    |-->
  <!--| Generate all documentation for this module.                        |-->
  <!--+====================================================================+-->

  <target name="docs" depends="_default:docs">
    <mkdir dir="${build.docs}"/>
    <copy todir="${build.docs}" filtering="yes">
      <fileset dir="${source.docs}">
         <include name="**/*"/>
      </fileset>
    </copy>
  </target>


  <!--+====================================================================+-->
  <!--| Misc.                                                              |-->
  <!--|                                                                    |-->
  <!--| Standard targets and psuedo-targets.                               |-->
  <!--+====================================================================+-->

  <target name="clean" depends="_default:clean">
    <!-- Add module specific elements here. -->
  </target>

  <target name="clobber" depends="_default:clobber">
    <!-- Add module specific elements here. -->
  </target>

  <!-- main, all, most and help are primary psuedo-targets -->
  <target name="main" depends="most"/>
  <target name="all" depends="_default:all"/>
  <target name="most" depends="_default:most"/>
  <target name="help" depends="_default:help"/>

</project>
