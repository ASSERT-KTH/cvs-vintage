<?xml version="1.0" encoding="UTF-8"?>
<project name="Tomcat" default="main" basedir=".">

  <!-- Compilation properties -->

  <property name="optimize" value="false"/>
  <property name="debug" value="on"/>

  <!-- Directories -->
  <!-- Where source packages are located -->
  <property name="ws" value=".." /> 

  <!-- work.dir is the place where build places the work
       files created in the build process, including the
       build/ and dist/ dirs. 
       Set it to ".." ( -D work.dir=.. ) to get the 
       previous behavior. 
    -->
  <property name="work.dir" value="." /> 

  <property name="tomcat.build" value="${work.dir}/build/tomcat"/>
  <property name="tomcat.dist" value="${work.dir}/dist/tomcat"/>

  <!-- Location where various binaries are installed.
       It can be "c:\Program Files" or /usr/share/java or 
       /opt/java. The default is .. ( assuming jakarta-tomcat
       is installed in the same directory ) ( backward compat ).
       
       Note that this assumes binary packages ( i.e. dists )
   -->
  <property name="install.dir" value=".." /> 


  <!-- External packages we depend on -->
  <!-- Tomcat depends on:
       - Ant ( latest binary install in jakarta-ant-1.3 )
       - Jaxp ( optional, the jar files from ant can be used instead )
       - Jsse ( optional )
    -->

  <!-- set by default if "ant" command is used -->
  <property name="ant.home" value="${install.dir}/jakarta-ant-1.3"/>
  <property name="jsse.home" value="${install.dir}/jsse1.0.2"/>
  <property name="jaxp.home" value="${install.dir}/jaxp1.0.1"/>

  <!-- Binaries checked in ( servlet.jar is not likely to change, 
      the 2.2 spec is final -->
  <property name="servlet22.jar" value="bin/servlet22.jar"/>

  <!-- We can assume tomcat.build will hold a working tomcat -->
  <property name="tomcat.home" value="${tomcat.build}"/>
 
  <!-- ==================== Initialization - guessing config ========== -->
  <target name="detect">
    <available property="jsse.present.runtime" 
	       classname="javax.net.ssl.SSLServerSocket"/>
    <available property="jsse.present" 
	       file="${jsse.home}/lib/jsse.jar"/>
    <available property="jdk12.present" 
	       classname="java.security.PrivilegedAction"/>
  </target>

  <target name="msg.jdk12" if="jdk12.present" >
    <echo message="Detected JDK1.2" />
  </target>

  <target name="msg.jsse" if="jsse.present" >
    <echo message="Detected JSSE"/>
  </target>

  <target name="init" depends="detect,msg.jdk12,msg.jsse" >
  </target>

  <!-- ==================== Copy static files ==================== -->
  <!-- IF YOU CHANGE, sync dist.prepare !!! -->

  <target name="prepare" depends="init">
    <mkdir dir="src/doc"/> <!-- Temp change until dir is not empty -->
    <mkdir dir="${tomcat.build}"/>
    <mkdir dir="${tomcat.build}/classes"/>
    <mkdir dir="${tomcat.build}/conf"/>
    <mkdir dir="${tomcat.build}/src"/>
    <mkdir dir="${tomcat.build}/lib"/>
    <mkdir dir="${tomcat.build}/lib/apps"/>
    <mkdir dir="${tomcat.build}/lib/container"/>
    <mkdir dir="${tomcat.build}/lib/common"/>
    <mkdir dir="${tomcat.build}/logs"/>
    <mkdir dir="${tomcat.build}/bin"/>
    <mkdir dir="${tomcat.build}/doc"/>
    <mkdir dir="${tomcat.build}/webapps"/>
    <mkdir dir="${tomcat.build}/native"/>

    <copy todir="${tomcat.build}/bin">
            <fileset dir="src/shell"/>
        </copy>
    <copy todir="${tomcat.build}/conf">
            <fileset dir="src/etc"/>
        </copy>
    <copy todir="${tomcat.build}/doc">
            <fileset dir="src/doc"/>
        </copy>
    <copy todir="${tomcat.build}/native">
            <fileset dir="src/native"/>
        </copy>
    <copy tofile="${tomcat.build}/LICENSE" file="LICENSE"/>

    <!-- include ant, it is used for testing and will be used for
    configuration and few other tasks -->
    <copy todir="${tomcat.build}/bin">
            <fileset dir="${ant.home}/bin"/>
        </copy>

    <copy tofile="${tomcat.build}/lib/container/jaxp.jar" 
	  file="${ant.home}/lib/jaxp.jar"/>
    <copy tofile="${tomcat.build}/lib/container/parser.jar" 
	  file="${ant.home}/lib/parser.jar"/>
    <copy tofile="${tomcat.build}/lib/container/jaxp.jar" 
	  file="${jaxp.home}/jaxp.jar"/>
    <copy tofile="${tomcat.build}/lib/container/parser.jar" 
	  file="${jaxp.home}/parser.jar"/>
    <copy tofile="${tomcat.build}/lib/container/jaxp.jar" 
	  file="${jaxp.home}/jaxp.jar"/>
    <copy file ="src/build/readme/readme.container"
	  tofile="${tomcat.build}/lib/container/README" />

    <copy file ="src/build/readme/readme.shared"
	  tofile="${tomcat.build}/lib/apps/README" />

    <copy file ="src/build/readme/readme.common"
	  tofile="${tomcat.build}/lib/common/README" />

    
    <!-- This act as a "default", Tomcat3.3 will not load it in
         classpath, just a hack to ease the transition
     -->
    <copy tofile="${tomcat.build}/lib/common/servlet.jar" 
	  file="${servlet22.jar}"/>

    <fixcrlf srcdir="${tomcat.build}/bin" includes="**/*.sh" cr="remove"/>
    <fixcrlf srcdir="${tomcat.build}/bin" includes="**/*.bat" cr="add"/>

    <chmod perm="+x" file="${tomcat.build}/bin/ant"/>
    <chmod perm="+x" file="${tomcat.build}/bin/antRun"/>
    <chmod perm="+x" file="${tomcat.build}/bin/tomcat.sh"/>
    <chmod perm="+x" file="${tomcat.build}/bin/jspc.sh"/>
    <chmod perm="+x" file="${tomcat.build}/bin/startup.sh"/>
    <chmod perm="+x" file="${tomcat.build}/bin/shutdown.sh"/>
  </target>

  <!-- ==================== Tomcat util ==================== -->
  <!-- Independent ( stand alone ) utilities -->

  <target name="tomcat_util" depends="init">
    <javac destdir="${tomcat.build}/classes" 
	   debug="${debug}" 
	   optimize="${optimize}" 
	   deprecation="off" 
	   srcdir="src/share">
      <classpath>
	<pathelement location="${jsse.home}/lib/jsse.jar"/>
	<pathelement location="${jsse.home}/lib/jnet.jar"/>
	<pathelement location="${jsse.home}/lib/jcert.jar"/>
      </classpath>
      <include name="org/apache/tomcat/util/**"/>    
      <exclude name="**/util/net/SSLSocketFactory.java" unless="jsse.present"/>
      <exclude name="**/util/compat/Jdk12Support.java" unless="jdk12.present"/>
    </javac>

    <jar jarfile="${tomcat.build}/lib/common/core_util.jar" 
	 basedir="${tomcat.build}/classes"> 
      <include name="org/apache/tomcat/util/log/**"/>    
      <include name="org/apache/tomcat/util/collections/**"/>    
      <include name="org/apache/tomcat/util/hooks/**"/>    
      <include name="org/apache/tomcat/util/http/**"/>    
      <include name="org/apache/tomcat/util/res/**"/>    
      <include name="org/apache/tomcat/util/buf/**"/>    
    </jar>

    <jar jarfile="${tomcat.build}/lib/container/tomcat_util.jar" 
	 basedir="${tomcat.build}/classes"> 
      <include name="org/apache/tomcat/util/**"/>    
    </jar>
  </target>

  <!-- ==================== Tomcat.jar ( starter )  ==================== -->

  <target name="tomcat.jar" depends="init">
    <javac destdir="${tomcat.build}/classes" 
	   debug="${debug}" 
	   optimize="${optimize}" 
	   deprecation="off" 
	   srcdir="src/share">
      <!-- no dependencies -->
      <include name="org/apache/tomcat/startup/Main.java"/>    
      <include name="org/apache/tomcat/util/compat/**"/>    
      <exclude name="**/util/compat/Jdk12Support.java" unless="jdk12.present"/>
      <include name="org/apache/tomcat/util/IntrospectionUtils.java"/>    
    </javac>
    <jar jarfile="${tomcat.build}/lib/tomcat.jar" 
	 basedir="${tomcat.build}/classes" 
	 manifest="src/build/manifests/manifest"> 
      <include name="org/apache/tomcat/startup/Main.class"/> 
      <include name="org/apache/tomcat/startup/Main$*.class"/> 
      <include name="org/apache/tomcat/util/compat/**"/> 
      <include name="org/apache/tomcat/util/IntrospectionUtils**"/> 
    </jar>
  </target>

  <target name="stop-tomcat.jar" depends="init">
    <javac destdir="${tomcat.build}/classes" 
	   debug="${debug}" 
	   optimize="${optimize}" 
	   deprecation="off" 
	   srcdir="src/share">
      <!-- no dependencies -->
      <include name="org/apache/tomcat/startup/StopTomcat.java"/>    
      <include name="org/apache/tomcat/util/IntrospectionUtils.java"/>    
    </javac>
    <copy todir="${tomcat.build}/classes/org/apache/tomcat/resources">
            <fileset dir="src/share/org/apache/tomcat/resources">
                <include name="**/*.properties"/>
                <include name="**/*.dtd"/>
            </fileset>
    </copy>

    <jar jarfile="${tomcat.build}/lib/stop-tomcat.jar" 
	 basedir="${tomcat.build}/classes" 
	 manifest="src/build/manifests/manifest.stop-tomcat"> 
      <include name="org/apache/tomcat/startup/StopTomcat.class"/> 
      <include name="org/apache/tomcat/util/res/StringManager.class"/> 
      <include name="org/apache/tomcat/resources/LocalStrings*"/> 
      <include name="org/apache/tomcat/util/IntrospectionUtils**"/> 
    </jar>
  </target>

  <!-- ==================== Tomcat core ==================== -->

  <target name="tomcat_core" depends="init">
    <javac destdir="${tomcat.build}/classes" 
	   debug="${debug}" 
	   optimize="${optimize}" 
	   deprecation="off" 
	   srcdir="src/share">
      <classpath>
	<pathelement location="${tomcat.build}/lib/tomcat_util.jar"/>
      </classpath>
      <include name="org/apache/tomcat/core/**"/>    
    </javac>
    <copy todir="${tomcat.build}/classes/org/apache/tomcat">
            <fileset dir="src/share/org/apache/tomcat">
                <include name="**/*.properties"/>
                <include name="**/*.dtd"/>
            </fileset>
        </copy>
    <jar jarfile="${tomcat.build}/lib/common/tomcat_core.jar" 
	 basedir="${tomcat.build}/classes"> 
      <include name="org/apache/tomcat/core/**"/>    
      <include name="org/apache/tomcat/resources/**"/>    
    </jar>
  </target>

  <!-- ==================== Tomcat config ==================== -->

  <target name="tomcat-startup" depends="init">
    <javac destdir="${tomcat.build}/classes" 
	   debug="${debug}" 
	   optimize="${optimize}" 
	   deprecation="off" 
	   srcdir="src/share">
      <classpath>
	<pathelement location="${tomcat.build}/lib/tomcat_util.jar"/>
	<pathelement location="${tomcat.build}/lib/tomcat_core.jar"/>
      </classpath>
      <include name="org/apache/tomcat/startup/**"/>    
      <exclude name="**/EmbededTomcat.java" unless="jdk12.present"/>
    </javac>
    <jar jarfile="${tomcat.build}/lib/container/tomcat-startup.jar" 
	 basedir="${tomcat.build}/classes"
	 manifest="src/build/manifests/manifest.startup"> 
      <include name="org/apache/tomcat/startup/**"/>    
    </jar>
  </target>

  <!-- ==================== Servlet 22 (default) implementation ========== -->
  <target name="facade22" depends="init">
    <javac 
	   destdir="${tomcat.build}/classes" 
	   debug="${debug}" 
	   optimize="${optimize}" 
	   deprecation="off" 
	   srcdir="src/facade22">
      <classpath>
	<pathelement location="${servlet22.jar}"/>
	<pathelement location="${tomcat.build}/lib/tomcat_util.jar"/>
	<pathelement location="${tomcat.build}/lib/tomcat_core.jar"/>
      </classpath>
      <include name="org/apache/tomcat/facade/**"/>    
    </javac>
    <jar jarfile="${tomcat.build}/lib/container/facade22.jar" 
	 basedir="${tomcat.build}/classes"
	 manifest="src/build/manifests/manifest.facade22"> 
      <include name="org/apache/tomcat/facade/**"/> 
    </jar>
  </target>

  <!-- ====================  "Standard" interceptors  ========== -->
  <target name="tomcat_modules" depends="init">
    <javac destdir="${tomcat.build}/classes" 
	   srcdir="src/share" 
	   debug="${debug}" 
	   optimize="${optimize}" 
	   deprecation="off">
      <classpath>
	<pathelement location="${tomcat.build}/lib/tomcat_util.jar"/>
	<pathelement location="${tomcat.build}/lib/tomcat_core.jar"/>
      </classpath>
      <include name="org/apache/tomcat/modules/**"/>    
      <!-- <exclude 
          name="org/apache/tomcat/modules/generators/Jdk12Interceptor.java" 
	  unless="jdk12.present"/>
       -->
      <exclude 
	  name="org/apache/tomcat/modules/config/LoaderInterceptor12.java" 
          unless="jdk12.present"/>
      <exclude 
	  name="org/apache/tomcat/modules/config/PolicyInterceptor.java" 
	  unless="jdk12.present"/>
    </javac>

    <jar 
        jarfile="${tomcat.build}/lib/container/tomcat_modules.jar" 
        basedir="${tomcat.build}/classes"> 
      <include name="org/apache/tomcat/modules/**"/> 
    </jar>
  </target>

  <!-- ====================  Jasper ( 1.0 )  ========== -->
  <target name="jasper" depends="init">
    <javac 
	   destdir="${tomcat.build}/classes" 
	   srcdir="src/share" 
	   debug="${debug}" 
	   optimize="${optimize}" 
	   deprecation="off">
      <classpath>
	<pathelement location="${servlet22.jar}"/>
      </classpath>
      <include name="org/apache/jasper/**"/>    
      <exclude name="org/apache/jasper/servlet/JasperLoader12.java" 
	unless="jdk12.present"/>
    </javac>
    <copy todir="${tomcat.build}/classes/org/apache/jasper">
            <fileset dir="src/share/org/apache/jasper">
                <include name="**/*.properties"/>
                <include name="**/*.dtd"/>
            </fileset>
        </copy>
    <jar jarfile="${tomcat.build}/lib/common/jasper-runtime.jar" 
	 basedir="${tomcat.build}/classes" >
      <include name="org/apache/jasper/Constants.class"/> 
      <include name="org/apache/jasper/JasperException.class"/> 
      <include name="org/apache/jasper/Options.class"/> 
      <include name="org/apache/jasper/runtime/**"/> 
      <include name="org/apache/jasper/resources/**"/> 
    </jar>

    <jar jarfile="${tomcat.build}/lib/container/jasper.jar" 
	 basedir="${tomcat.build}/classes" >
      <include name="org/apache/jasper/**"/> 
      <!-- 
      <exclude name="org/apache/jasper/Constants.class"/> 
      <exclude name="org/apache/jasper/JasperException.class"/> 
      <exclude name="org/apache/jasper/Options.class"/> 
      <exclude name="org/apache/jasper/runtime/**"/> 
      <exclude name="org/apache/jasper/resources/**"/> 
       -->
    </jar>
  </target>

  <target name="tomcat-jars-new" depends="tomcat_util,tomcat.jar,stop-tomcat.jar,tomcat_core,jasper,tomcat_modules,facade22,tomcat-startup">
  </target>

  <!-- ==================== J2EE integration ========== -->
  <target name="j2ee">
    <ant antfile="src/j2ee/build.xml" target="tomcat-j2ee.jar"/>
  </target>

  <!-- ==================== Build all web applications ==================== -->

  <target name="webapps" depends="prepare">
    <!-- Examples -->
    <mkdir dir="${tomcat.build}/webapps/examples"/>
    <copy todir="${tomcat.build}/webapps/examples">
      <fileset dir="src/examples"/>
    </copy>
    <javac srcdir="src/examples/WEB-INF/classes" 
	   optimize="${optimize}" 
	   destdir="${tomcat.build}/webapps/examples/WEB-INF/classes" 
	   classpath="${tomcat.build}/classes;${servlet22.jar}"/>
    <javac srcdir="src/examples/jsp/plugin/applet" 
	   optimize="${optimize}" 
	   destdir="${tomcat.build}/webapps/examples/jsp/plugin/applet"/>


      <!-- Root context -->
    <mkdir dir="${tomcat.build}/webapps/ROOT"/>
    <copy todir="${tomcat.build}/webapps/ROOT">
      <fileset dir="src/webpages"/>
    </copy>
    <copy todir="${tomcat.build}/webapps/ROOT/doc">
      <fileset dir="src/doc"/>
    </copy>
    <javac srcdir="src/webpages/WEB-INF/classes" 
	   optimize="${optimize}" 
	   destdir="${tomcat.build}/webapps/ROOT/WEB-INF/classes" 
	   classpath="${tomcat.build}/classes;${servlet22.jar}"/>
      
      <!-- admin context -->
    <mkdir dir="${tomcat.build}/webapps/admin"/>
    <copy todir="${tomcat.build}/webapps/admin">
      <fileset dir="src/admin"/>
    </copy>
    <copy tofile="${tomcat.build}/webapps/admin/WEB-INF/lib/ant.jar" 
	  file="${ant.home}/lib/ant.jar"/>
    <javac srcdir="src/admin/WEB-INF/classes" 
	   optimize="${optimize}" 
	   destdir="${tomcat.build}/webapps/admin/WEB-INF/classes" 
	   classpath="${tomcat.build}/classes;${servlet22.jar}"/>
      
  </target>

  <!-- ==================== Build the internal test app =================== -->

  <target name="sanity-test">
    <ant antfile="src/tests/build.xml" />
  </target>

  <target name="watchdog-web-based">
    <ant antfile="src/tests/build.xml" target="watchdog" />
  </target>

  <target name="tests" depends="main,sanity-test,watchdog-web-based" />
  
  <target name="tests.dist" depends="tests" >
    <jar jarfile="${tomcat.dist}/webapps/test.war" 
	 basedir="${tomcat.build}/webapps/test" 
	 includes="**"/>
    <jar jarfile="${tomcat.dist}/webapps/jsp-tests.war"
	 basedir="${tomcat.build}/webapps/jsp-tests" 
	 includes="**"/>
    <jar jarfile="${tomcat.dist}/webapps/servlet-tests.war"
	 basedir="${tomcat.build}/webapps/servlet-tests" 
	 includes="**"/>
  </target>

  <!-- ==================== Copy the files to distribution format ======== -->
  <target name="dist" depends="dist.prepare,javadoc,dist.war">
  </target> 

  <target name="dist.prepare" depends="main,webapps,tomcat-jars-new">

    <mkdir dir="${tomcat.dist}"/>
    <mkdir dir="${tomcat.dist}/webapps"/>
    <copy todir="${tomcat.dist}">
      <fileset dir="${tomcat.build}" >
	<exclude name="classes/**"/>
        <exclude name="webapps/**"/>
      </fileset>
    </copy>

    <!-- Change permissions for unix -->
    <chmod perm="+x" file="${tomcat.dist}/bin/tomcat.sh"/>
    <chmod perm="+x" file="${tomcat.dist}/bin/jspc.sh"/>
    <chmod perm="+x" file="${tomcat.dist}/bin/startup.sh"/>
    <chmod perm="+x" file="${tomcat.dist}/bin/shutdown.sh"/>
  </target>

  <target name="javadoc" depends="main,webapps,tomcat-jars-new">
    <!-- Add Tomcat internal javadoc -->
    <mkdir dir="${tomcat.build}/webapps/ROOT/javadoc"/>
    <javadoc packagenames="org.apache.tomcat.core" 
	     sourcepath="src/share;src/facade22" 
	     destdir="${tomcat.build}/webapps/ROOT/javadoc" 
	     author="true" 
	     version="true" 
	     use="true" 
	     windowtitle="Tomcat internal API" 
	     doctitle="Tomcat internal" 
	     bottom="Copyright © 2000 Apache Software Foundation. All Rights Reserved."/>

    <javadoc packagenames="org.apache.tomcat.modules.*" 
	     sourcepath="src/share;src/facade22" 
	     destdir="${tomcat.build}/webapps/ROOT/javadoc" 
	     author="true" 
	     version="true" 
	     use="true" 
	     windowtitle="Tomcat modules" 
	     doctitle="Tomcat modules" 
	     bottom="Copyright © 2000 Apache Software Foundation. All Rights Reserved."/>
  
  </target>

  <target name="dist.war" depends="dist.prepare" >
    <delete dir="${tomcat.dist}/webapps/examples" />
    <delete dir="${tomcat.dist}/webapps/admin" />
    <delete dir="${tomcat.dist}/webapps/ROOT" />
    <!-- create webapp WARS -->
    <jar jarfile="${tomcat.dist}/webapps/examples.war" 
	 basedir="${tomcat.build}/webapps/examples" 
	 excludes="jsp/snp/snoop.jsp" 
	 includes="**"/> 

    <jar jarfile="${tomcat.dist}/webapps/admin.war"
	 basedir="${tomcat.build}/webapps/admin" 
	 includes="**"/> 

    <jar jarfile="${tomcat.dist}/webapps/ROOT.war" 
	 basedir="${tomcat.build}/webapps/ROOT" 
	 includes="**"/>
  </target>

  <!-- =================================================================== -->
  <!-- Packages the distribution with ZIP                                  -->
  <!-- =================================================================== -->
  <target name="dist-zip" depends="dist">
    <zip zipfile="${Name}-${version}.zip" basedir="${tomcat.dist}" includes="**"/>
  </target>
  
  <target name="main" depends="tomcat,webapps">
  </target>


  <!-- ==================== Admin & agreagate ==================== -->
   
  <!-- The self-test app should be removed in the release, but it's 
       useful to have it builded by default -->
  <target name="tomcat" depends="prepare,tomcat-jars-new">
  </target>

  <target name="clean-classes" depends="init">
    <delete dir="${tomcat.build}/classes/org"/>
  </target>

  <target name="clean" depends="init">
    <delete dir="${tomcat.build}"/>
    <delete dir="${tomcat.dist}"/>
  </target>

  <target name="all" depends="clean,dist"/>
    
</project>
