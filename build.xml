<project name="Struts" default="compile.library" basedir=".">

  <!-- Initialization properties -->
  <property name="app.name"       value="struts"/>
  <property name="build.home"     value="build"/>
  <property name="catalina.home"  value="../jakarta-tomcat-4.0/build"/>
  <property name="debug"          value="true"/>
  <property name="deprecation"    value="false"/>
  <property name="dist.home"      value="dist"/>
  <property name="optimize"       value="true"/>
  <property name="project.name"   value="jakarta-struts"/>
  <property name="project.version" value="1.0-b1"/>
  <property name="tomcat.home"    value="../build/tomcat"/>

  <!-- BUILD:  Create directories and copy files for library -->
  <target name="prepare.library">
    <mkdir   dir="${build.home}"/>
    <mkdir   dir="${build.home}/library"/>
    <mkdir   dir="${build.home}/library/classes"/>
    <mkdir   dir="${build.home}/library/classes/META-INF"/>
    <mkdir   dir="${build.home}/library/classes/META-INF/tlds"/>
    <copy   file="src/conf/struts.tld"
          tofile="${build.home}/library/classes/META-INF/taglib.tld"/>
    <mkdir   dir="${build.home}/library/classes/org"/>
    <mkdir   dir="${build.home}/library/classes/org/apache"/>
    <mkdir   dir="${build.home}/library/classes/org/apache/struts"/>
    <mkdir   dir="${build.home}/library/classes/org/apache/struts/resources"/>
    <copy  todir="${build.home}/library/classes/org/apache/struts/resources">
      <fileset dir="src/conf" includes="**/*.dtd"/>
    </copy>
  </target>

  <!-- BUILD:  Create directories and copy files for blank application -->
  <target name="prepare.blank">
    <mkdir   dir="${build.home}"/>
    <mkdir   dir="${build.home}/blank"/>
    <mkdir   dir="${build.home}/blank/WEB-INF"/>
    <mkdir   dir="${build.home}/blank/WEB-INF/classes"/>
    <mkdir   dir="${build.home}/blank/WEB-INF/lib"/>
    <copy  todir="${build.home}/blank">
      <fileset dir="web/blank"/>
    </copy>
  </target>

  <!-- BUILD:  Create directories and copy files for documentation app -->
  <target name="prepare.documentation">
    <mkdir   dir="${build.home}"/>
    <mkdir   dir="${build.home}/documentation"/>
    <mkdir   dir="${build.home}/documentation/dtds"/>
    <copy  todir="${build.home}/documentation/dtds">
      <fileset dir="src/conf" includes="**/*.dtd"/>
    </copy>
    <mkdir   dir="${build.home}/documentation/userGuide"/>
    <mkdir   dir="${build.home}/documentation/WEB-INF"/>
    <mkdir   dir="${build.home}/documentation/WEB-INF/classes"/>
    <mkdir   dir="${build.home}/documentation/WEB-INF/lib"/>
    <copy  todir="${build.home}/documentation">
      <fileset dir="web/documentation"/>
    </copy>
  </target>

  <!-- BUILD:  Create directories and copy files for example application -->
  <target name="prepare.example">
    <mkdir   dir="${build.home}"/>
    <mkdir   dir="${build.home}/example"/>
    <mkdir   dir="${build.home}/example/WEB-INF"/>
    <mkdir   dir="${build.home}/example/WEB-INF/classes"/>
    <mkdir   dir="${build.home}/example/WEB-INF/lib"/>
    <copy  todir="${build.home}/example">
      <fileset dir="web/example"/>
    </copy>
    <copy tofile="${build.home}/example/struts-power.gif"
            file="src/doc/images/struts-power.gif"/>
  </target>

  <!-- BUILD:  Create directories and copy files for test application -->
  <target name="prepare.test">
    <mkdir   dir="${build.home}"/>
    <mkdir   dir="${build.home}/test"/>
    <mkdir   dir="${build.home}/test/WEB-INF"/>
    <mkdir   dir="${build.home}/test/WEB-INF/classes"/>
    <mkdir   dir="${build.home}/test/WEB-INF/lib"/>
    <copy  todir="${build.home}/test">
      <fileset dir="web/test"/>
    </copy>
  </target>

  <!-- BUILD:  Create directories and copy files for template example -->
  <target name="prepare.template">
    <mkdir   dir="${build.home}"/>
    <mkdir   dir="${build.home}/template"/>
    <mkdir   dir="${build.home}/template/css"/>
    <mkdir   dir="${build.home}/template/graphics"/>
    <mkdir   dir="${build.home}/template/WEB-INF"/>
    <mkdir   dir="${build.home}/template/WEB-INF/lib"/>
    <mkdir   dir="${build.home}/template/WEB-INF/tlds"/>
    <copy  todir="${build.home}/template">
      <fileset dir="web/template-example"/>
    </copy>
  </target>

  <!-- BUILD: Create directories and copy files for upload example -->
  <target name="prepare.upload">
    <mkdir  dir="${build.home}"/>
    <mkdir  dir="${build.home}/upload"/>
    <mkdir  dir="${build.home}/upload/WEB-INF"/>
    <mkdir  dir="${build.home}/upload/WEB-INF/lib"/>
    <mkdir  dir="${build.home}/upload/WEB-INF/classes"/>
    <copy todir="${build.home}/upload">
        <fileset dir="web/upload" />
    </copy>
  </target>

  <!-- DIST:  Create directories and copy files for distribution -->
  <target name="prepare.dist">
    <mkdir   dir="${dist.home}"/>
    <mkdir   dir="${dist.home}/etc"/>
    <mkdir   dir="${dist.home}/lib"/>
    <mkdir   dir="${dist.home}/src"/>
    <mkdir   dir="${dist.home}/web"/>
    <mkdir   dir="${dist.home}/webapps"/>
  </target>

  <!-- BUILD:  Compile library directory components -->
  <target name="compile.library" depends="prepare.library">
    <javac srcdir="src/share"     destdir="${build.home}/library/classes"
           classpath="${servlet.jar}"
	   debug="${debug}" optimize="${optimize}"
     deprecation="${deprecation}"/>
    <copy   todir="${build.home}/library/classes">
      <fileset dir="src/share" includes="**/*.properties"/>
    </copy>
    <copy   todir="${build.home}/library">
      <fileset dir="src/conf" includes="*.dtd"/>
      <fileset dir="src/conf" includes="*.tld"/>
    </copy>
    <style basedir="src/doc" destdir="${build.home}/library"
         extension=".tld" style="stylesheets/tld.xsl"
          includes="struts-*.xml"/>
    <copy    todir="${build.home}/library/classes/META-INF/tlds">
      <fileset dir="${build.home}/library" includes="struts-*.tld"/>
    </copy>
  </target>

  <!-- BUILD:  Compile blank application components -->
  <target name="compile.blank"
       depends="dist.library,prepare.blank">
<!--
    <javac srcdir="src/blank"
          destdir="${build.home}/blank/WEB-INF/classes"
        classpath="${build.home}/library/classes:${servlet.jar}"
            debug="${debug}" optimize="${optimize}"
      deprecation="${deprecation}"/>
    <copy  todir="${build.home}/blank/WEB-INF/classes">
      <fileset dir="src/blank" includes="**/*.properties"/>
    </copy>
-->
    <copy   todir="${build.home}/blank">
      <fileset dir="web/blank"/>
    </copy>
    <copy    file="${dist.home}/lib/${app.name}.jar"
           tofile="${build.home}/blank/WEB-INF/lib/${app.name}.jar"/>
    <copy   todir="${build.home}/blank/WEB-INF">
      <fileset dir="${dist.home}/lib" includes="*.tld"/>
    </copy>
  </target>

  <!-- BUILD:  Compile documentation application components -->
  <target name="compile.documentation"
       depends="dist.library,prepare.documentation">

    <!-- Compile beans and tags required by the documentation app -->
<!--
    <javac srcdir="src/documentation"
          destdir="${build.home}/documentation/WEB-INF/classes"
        classpath="${build.home}/library/classes:${servlet.jar}"
            debug="${debug}" optimize="${optimize}"
      deprecation="${deprecation}"/>
-->

    <!-- Copy Struts JAR file and TLDs to the documentation app -->
    <copy    file="${dist.home}/lib/${app.name}.jar"
           tofile="${build.home}/documentation/WEB-INF/lib/${app.name}.jar"/>
    <copy   todir="${build.home}/documentation/WEB-INF">
      <fileset dir="${dist.home}/lib" includes="*.tld"/>
    </copy>

    <!-- Copy static documentation content -->
    <copy   todir="${build.home}/documentation">
      <fileset dir="web/documentation"/>
    </copy>

    <!-- Create dynamically generated documentation -->
    <!-- Create the taglib documentation -->
    <style   basedir="src/doc" destdir="${build.home}/documentation"
           extension=".html" style="stylesheets/struts.xsl" includes="*.xml"/>
    <!-- Create the user guide -->
    <style   basedir="src/doc/userGuide"
             destdir="${build.home}/documentation/userGuide"
           extension=".html" style="../stylesheets/userGuide.xsl"
            includes="*.xml"/>
    <copy      todir="${build.home}/documentation">
      <fileset   dir="src/doc">
        <include name="**/*.css"/>
        <include name="**/*.gif"/>
        <include name="**/*.html"/>
        <include name="**/*.jpg"/>
        <include name="**/*.js"/>
      </fileset>
    </copy>
    <copy      todir="${build.home}/documentation/userGuide">
      <fileset   dir="src/doc/userGuide">
        <include name="**/*.css"/>
        <include name="**/*.gif"/>
        <include name="**/*.html"/>
        <include name="**/*.jpg"/>
        <include name="**/*.js"/>
      </fileset>
    </copy>
  </target>

  <!-- BUILD:  Compile example application components -->
  <target name="compile.example"
       depends="dist.library,prepare.example">
    <javac srcdir="src/example"
          destdir="${build.home}/example/WEB-INF/classes"
        classpath="${build.home}/library/classes:${servlet.jar}"
            debug="${debug}" optimize="${optimize}"
      deprecation="${deprecation}"/>
    <copy   todir="${build.home}/example/WEB-INF/classes">
      <fileset dir="src/example" includes="**/*.properties"/>
    </copy>
    <copy   todir="${build.home}/example">
      <fileset dir="web/example"/>
    </copy>
    <copy    file="${dist.home}/lib/${app.name}.jar"
           tofile="${build.home}/example/WEB-INF/lib/${app.name}.jar"/>
    <copy   todir="${build.home}/example/WEB-INF">
      <fileset dir="${dist.home}/lib" includes="*.tld"/>
    </copy>
  </target>

  <!-- BUILD:  Compile template example application components -->
  <target name="compile.template"
       depends="dist.library,prepare.template">
    <copy   todir="${build.home}/template">
      <fileset dir="web/template-example"/>
    </copy>
    <copy    file="${dist.home}/lib/${app.name}.jar"
           tofile="${build.home}/template/WEB-INF/lib/${app.name}.jar"/>
    <copy   todir="${build.home}/template/WEB-INF/tlds">
      <fileset dir="${dist.home}/lib" includes="*.tld"/>
    </copy>
  </target>

  <!-- BUILD: Compile upload example application components -->
  <target name="compile.upload"
          depends="dist.library,prepare.upload">

      <javac srcdir="web/upload"
             destdir="${build.home}/upload/WEB-INF/classes"
             classpath="${build.home}/library/classes:${servlet.jar}"
             debug="${debug}" optimize="${optimize}"
       deprecation="${deprecation}"/>
      <copy todir="${build.home}/upload">
        <fileset dir="web/upload" />
      </copy>
      <copy file="${dist.home}/lib/${app.name}.jar"
            tofile="${build.home}/upload/WEB-INF/lib/${app.name}.jar"/>
      <copy file="${dist.home}/lib/${app.name}-html.tld"
            todir="${build.home}/upload/WEB-INF" />
  </target>

  <!-- BUILD:  Compile test application components -->
  <target name="compile.test"
       depends="dist.library,prepare.test">
    <javac srcdir="src/test"
          destdir="${build.home}/test/WEB-INF/classes"
        classpath="${build.home}/library/classes:${servlet.jar}"
            debug="${debug}" optimize="${optimize}"
      deprecation="${deprecation}"/>
    <copy  todir="${build.home}/test/WEB-INF/classes">
      <fileset dir="src/test" includes="**/*.properties"/>
    </copy>
    <copy   todir="${build.home}/test">
      <fileset dir="web/test"/>
    </copy>
    <copy    file="${dist.home}/lib/${app.name}.jar"
           tofile="${build.home}/test/WEB-INF/lib/${app.name}.jar"/>
    <copy   todir="${build.home}/test/WEB-INF">
      <fileset dir="${dist.home}/lib" includes="*.tld"/>
    </copy>
  </target>

  <!-- BUILD:  Create Javadoc documentation -->
  <target name="compile.javadoc">
    <delete   dir="${build.home}/documentation/api"/>
    <mkdir    dir="${build.home}/documentation/api"/>
    <javadoc sourcepath="src/share"
                destdir="${build.home}/documentation/api"
              classpath="${servlet.jar}:${java.class.path}"
           packagenames="org.apache.struts.*"
	         author="true"
                private="true"
                version="true"
            windowtitle="Apache Struts API Documentation"
               doctitle="&lt;h1&gt;Apache Struts Framework (Version ${project.version})&lt;/h1&gt;"
                 bottom="Copyright &#169; 2000-2001 - Apache Software Foundation"/>
  </target>

  <!-- DIST:  Construct library distributables -->
  <target name="dist.library" depends="prepare.dist,compile.library">
    <copy   todir="${dist.home}/lib">
      <fileset dir="${build.home}/library" includes="*.dtd"/>
      <fileset dir="${build.home}/library" includes="*.tld"/>
    </copy>
    <jar  jarfile="${dist.home}/lib/${app.name}.jar"
         manifest="src/conf/MANIFEST.MF"
          basedir="${build.home}/library/classes" includes="**"/>
  </target>

  <!-- DIST:  Construct blank distributables -->
  <target name="dist.blank" depends="dist.library,compile.blank">
    <jar  jarfile="${dist.home}/webapps/${app.name}-blank.war"
          basedir="${build.home}/blank" includes="**"/>
  </target>

  <!-- DIST:  Construct documentation distributables -->
  <target name="dist.documentation"
       depends="dist.library,compile.documentation,compile.javadoc">
    <jar  jarfile="${dist.home}/webapps/${app.name}-documentation.war"
          basedir="${build.home}/documentation" includes="**"/>
  </target>

  <!-- DIST:  Construct example distributables -->
  <target name="dist.example" depends="dist.library,compile.example">
    <jar  jarfile="${dist.home}/webapps/${app.name}-example.war"
          basedir="${build.home}/example" includes="**"/>
  </target>

  <!-- DIST:  Construct template example distributables -->
  <target name="dist.template" depends="dist.library,compile.template">
    <jar  jarfile="${dist.home}/webapps/${app.name}-template.war"
          basedir="${build.home}/template" includes="**"/>
  </target>

  <!-- DIST:  Construct test distributables -->
  <target name="dist.test" depends="dist.library,compile.test">
    <jar  jarfile="${dist.home}/webapps/${app.name}-test.war"
          basedir="${build.home}/test" includes="**"/>
  </target>

  <!-- DIST:  Construct upload example distributables -->
  <target name="dist.upload" depends="dist.library,compile.upload">
    <jar jarfile="${dist.home}/webapps/${app.name}-upload.war"
         basedir="${build.home}/upload" includes="**"/>
  </target>

  <!-- DIST:  Copy sources -->
  <target name="dist.source" depends="prepare.dist">
    <copy   todir="${dist.home}/etc">
      <fileset dir="." includes="build.*"/>
    </copy>
    <copy    file="INSTALL" tofile="${dist.home}/INSTALL"/>
    <copy    file="LICENSE" tofile="${dist.home}/LICENSE"/>
    <copy    file="README"  tofile="${dist.home}/README"/>
    <copy   todir="${dist.home}/src">
      <fileset dir="src"/>
    </copy>
    <copy   todir="${dist.home}/web">
      <fileset dir="web"/>
    </copy>
  </target>

  <!-- DIST:  Construct complete release distribution -->
  <target name="dist"
       depends="dist.library,dist.blank,dist.documentation,dist.example,dist.template,dist.test,dist.upload,dist.source"/>

  <!-- DEPLOY:  Deploy these applications on Catalina -->
  <target name="deploy.catalina" depends="compile.blank,compile.documentation,compile.example,compile.template,compile.test,compile.upload">
    <mkdir   dir="${catalina.home}/webapps/struts-blank"/>
    <copy  todir="${catalina.home}/webapps/struts-blank">
      <fileset dir="${build.home}/blank"/>
    </copy>
    <copy  todir="${catalina.home}/webapps/struts-blank/WEB-INF/lib">
      <fileset dir="${xerces.home}" includes="xerces.jar"/>
    </copy>
    <mkdir   dir="${catalina.home}/webapps/struts-documentation"/>
    <copy  todir="${catalina.home}/webapps/struts-documentation">
      <fileset dir="${build.home}/documentation"/>
    </copy>
    <copy  todir="${catalina.home}/webapps/struts-documentation/WEB-INF/lib">
      <fileset dir="${xerces.home}" includes="xerces.jar"/>
    </copy>
    <mkdir   dir="${catalina.home}/webapps/struts-example"/>
    <copy  todir="${catalina.home}/webapps/struts-example">
      <fileset dir="${build.home}/example"/>
    </copy>
    <copy  todir="${catalina.home}/webapps/struts-example/WEB-INF/lib">
      <fileset dir="${xerces.home}" includes="xerces.jar"/>
    </copy>
    <mkdir   dir="${catalina.home}/webapps/struts-template"/>
    <copy  todir="${catalina.home}/webapps/struts-template">
      <fileset dir="${build.home}/template"/>
    </copy>
    <copy  todir="${catalina.home}/webapps/struts-template/WEB-INF/lib">
      <fileset dir="${xerces.home}" includes="xerces.jar"/>
    </copy>
    <mkdir   dir="${catalina.home}/webapps/struts-test"/>
    <copy  todir="${catalina.home}/webapps/struts-test">
      <fileset dir="${build.home}/test"/>
    </copy>
    <copy  todir="${catalina.home}/webapps/struts-test/WEB-INF/lib">
      <fileset dir="${xerces.home}" includes="xerces.jar"/>
    </copy>
    <mkdir   dir="${catalina.home}/webapps/struts-upload"/>
    <copy  todir="${catalina.home}/webapps/struts-upload">
      <fileset dir="${build.home}/upload"/>
    </copy>
    <copy  todir="${catalina.home}/webapps/struts-upload/WEB-INF/lib">
      <fileset dir="${xerces.home}" includes="xerces.jar"/>
    </copy>
  </target>

  <!-- DEPLOY:  Deploy these applications on Tomcat -->
  <target name="deploy.tomcat" depends="compile.blank,compile.documentation,compile.example,compile.template,compile.test,compile.upload">
    <mkdir   dir="${tomcat.home}/webapps/struts-blank"/>
    <copy  todir="${tomcat.home}/webapps/struts-blank">
      <fileset dir="${build.home}/blank"/>
    </copy>
    <mkdir   dir="${tomcat.home}/webapps/struts-documentation"/>
    <copy  todir="${tomcat.home}/webapps/struts-documentation">
      <fileset dir="${build.home}/documentation"/>
    </copy>
    <mkdir   dir="${tomcat.home}/webapps/struts-example"/>
    <copy  todir="${tomcat.home}/webapps/struts-example">
      <fileset dir="${build.home}/example"/>
    </copy>
    <mkdir   dir="${tomcat.home}/webapps/struts-template"/>
    <copy  todir="${tomcat.home}/webapps/struts-template">
      <fileset dir="${build.home}/template"/>
    </copy>
    <mkdir   dir="${tomcat.home}/webapps/struts-test"/>
    <copy  todir="${tomcat.home}/webapps/struts-test">
      <fileset dir="${build.home}/test"/>
    </copy>
    <mkdir   dir="${tomcat.home}/webapps/struts-upload"/>
    <copy  todir="${tomcat.home}/webapps/struts-upload">
      <fileset dir="${build.home}/upload"/>
    </copy>
  </target>

  <!-- UTILITY:  Display all targets intended for developer use -->
  <target name="targets">
    <echo message=""/>
    <echo message="ANT build for ${project.name} ${project.version}"/>
    <echo message=""/>
    <echo message="The following targets are available:"/>
    <echo message="  all                    Cleans and builds library and webapps"/>
    <echo message="  clean                  Cleans the build and distribution directories"/>
    <echo message="  compile.blank          Builds the blank starter app"/>
    <echo message="  compile.documentation  Builds the documentation webapp"/>
    <echo message="  compile.example        Builds the examples webapp"/>
    <echo message="  compile.javadoc        Builds Javadoc API docs for Struts"/>
    <echo message="  compile.library        Builds the main packages"/>
    <echo message="  compile.template       Builds the template example webapp"/>
    <echo message="  compile.upload         Builds the upload example webapp"/>
    <echo message="  compile.test           Builds the tests webapp"/>
    <echo message="  deploy.catalina        Deploys build to Catalina build directory"/>
    <echo message="  deploy.tomcat          Depoys build to Tomcat build directory"/>
    <echo message="  dist                   Builds binary distribution in dist directory"/>
    <echo message=""/>
    <echo message="Default target is 'compile.library'"/>
  </target>

  <!-- UTILITY:  Clean up build and distribution directories -->
  <target name="clean">
    <delete dir="${build.home}"/>
    <delete dir="${dist.home}"/>
  </target>

  <!-- UTILITY:  All-in-one build target -->
  <target name="all"
       depends="clean,compile.library,compile.documentation,compile.example,compile.test"/>

</project>
