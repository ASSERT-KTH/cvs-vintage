<?xml version="1.0"?>
<!DOCTYPE project SYSTEM "./ant.dtd">

<project name="columba" default="build" basedir=".">
	<property name="src" value="."/>
	<property name="build" value="build"/>
	<property name="user.name" value="The Columba Team"/>
	<!-- here we should use the cvs-verion info for automatic replace the version -->
	<property name="version" value="0.10.0"/>
	<property name="dest" value="./classes"/>
	<property name="ownclasspath" value="${classpath}:${src}/lib/xalan.jar:${src}/lib/jaxp.jar:${src}/lib/log4j.jar:${src}/lib/lucene-1.2.jar:${src}/lib/junit.jar:${src}/lib/jakarta-oro-2.0.6.jar:${src}/lib/jargs.jar"/>


	<!-- definition of the task to check the style of the java-code -->
	<taskdef name="checkstyle" classname="com.puppycrawl.tools.checkstyle.CheckStyleTask">
		<classpath>
			<pathelement location="${src}/lib/checkstyle-all-2.1.jar"/>
		</classpath>
	</taskdef>
	
	<!-- the task that realy checks the style -->
	<target name="verify">
		<checkstyle lcurlyType="nlow"
								lcurlyMethod="nlow"
								lcurlyOther="nlow"
								maxLineLen="160"
								allowTabs="true"
								ignoreWhitespace="true"
								ignoreCastWhitespace="true"
								failOnViolation="false">
		<fileset dir="${src}" includes="**/*.java"/>
		</checkstyle>
	</target>
	
	<target name="update">
		<cvs command="update"/>
	</target>

	<target name="init">
		<echo message="you are running java version ${ant.java.version}"/>
		<mkdir dir="${dest}"/>
	</target>
	
	<target name="document" depends="init">
		<delete dir="${dest}/docs/api/"/>
		<mkdir dir="${dest}/docs/api/"/>
		<javadoc destdir="${dest}/docs/api/" classpath="${ownclasspath}" doctitle="Columba ${version} API Documentation" windowtitle="Columba API Documentation" link="http://java.sun.com/products/jdk/1.3/docs/api">
			<packageset dir="${src}/src/addressbook/core/"/>
			<packageset dir="${src}/src/addressbook/independent/"/>
			<packageset dir="${src}/src/columba/core/"/>
			<packageset dir="${src}/src/mail/core/"/>
			<packageset dir="${src}/src/mail/independent/"/>
			<group title="Addressbook" packages="org.columba.addressbook*"/>
			<group title="Core" packages="org.columba.core*"/>
			<group title="Mail" packages="org.columba.mail*"/>
		</javadoc>
	</target>

	<!-- copy required files for later tasks into the dest directory -->
	<target name="copy-required">
		<copy todir="${dest}">
			<fileset dir="${src}">
				<include name="**/*.xml"/>
				<include name="**/*.dtd"/>
				<include name="**/*.gif"/>
				<include name="**/*.jpeg"/>
				<include name="**/*.png"/>
				<include name="**/*.wav"/>
				<include name="**/*.properties"/>
				<include name="**/*.jar"/>
				<include name="**/*.py"/>
				<include name="README"/>
				<include name="LICENSE"/>
				<include name="CHANGES"/>
				<include name="AUTHORS"/>
				<include name="run.bat"/>
				<include name="run.sh"/>
				<include name="run_source.bat"/>
				<include name="run_source.sh"/>
				<include name="run_source_jdk13.bat"/>
				<include name="run_source_jdk13.sh"/>
				<include name="native/**"/>
				<include name="plugins/**"/>
				<exclude name="build.xml"/>
				<exclude name="ant.dtd"/>
				<exclude name="lib/checkstyle-all-2.1.jar"/>
				<exclude name="res/**"/>
				<exclude name="classes/**"/>
			</fileset>
		</copy>
	</target>
	
	<target name="validate-xml-resources">
		<xmlvalidate failonerror="no" warn="yes">
			<fileset dir="${src}/res/" includes="**/*.xml"/>
		</xmlvalidate>
	</target>

	<target name="copy-resources" depends="validate-xml-resources">
		<copy todir="${dest}">
			<fileset dir="${src}/res/">
			 <include name="**"/>
			</fileset>
		</copy>
	</target>

	<!-- compile the classes -->
	<target name="compile" depends="init, copy-resources">
		<echo message="the classes are going to ${dest} "/>
		<javac srcdir="${src}/src/" destdir="${dest}" classpath="${ownclasspath}" encoding="ISO-8859-1" debug="yes"/>
	</target>

	<!-- pack the files into one jar file with automatic manifest file -->
	<target name="jar" depends="compile">
		<delete file="columba.jar"/>
		<echo message="the jar file is going to be columba.jar "/>
		<jar basedir="${dest}" jarfile="columba.jar">
			<include name="**"/>
			<exclude name="columba.jar"/>
			<exclude name="README"/>
			<exclude name="CHANGES"/>
			<exclude name="LICENSE"/>
			<exclude name="AUTHORS"/>
			<exclude name="run.bat"/>
			<exclude name="run.sh"/>
			<exclude name="run_source.bat"/>
			<exclude name="run_source.sh"/>
			<exclude name="run_source_jdk13.bat"/>
			<exclude name="run_source_jdk13.sh"/>
			<exclude name="**/*.zip"/>
			<exclude name="docs/**"/>
			<exclude name="libs/**"/>
			<exclude name="plugins/**"/>
			<exclude name="lib/**"/>
			<exclude name="native/**"/>
			<manifest>
				<attribute name="Main-Class" value="org.columba.core.main.Main"/>
				<attribute name="Class-Path" value="lib/xalan.jar lib/jaxp.jar lib/crimson.jar lib/log4j.jar lib/junit.jar lib/jakarta-oro-2.0.6.jar lib/lucene-1.2.jar lib/jargs.jar"/>
				<attribute name="Sealed" value="false"/>
			</manifest>
		</jar>
	</target>

	<target name="run-script" depends="init">
		<!-- echo file="${dest}/run.sh" >#!/bin/sh
echo "starting columba ..."
echo "from path: `pwd`"
if test -f "`pwd`/columba.jar" ; then java -jar `pwd`/columba.jar ;
else echo "cannot find columba.jar in `pwd`"; fi
		</echo -->
		<echo message="at the moment there are no dynamic runscripts required"/>
	</target>

	<!-- convert line-endings -->
	<target name="linefeeds-win32">
	<fixcrlf srcdir="${dest}"
       eol="crlf"
       includes="README, AUTHORS, LICENSE, CHANGES, RUN, run.bat, run_source.bat, run_source_jdk13.bat"
  	/>
  	</target>
  	
  	<!-- convert line-endings -->
	<target name="linefeeds-unix">
	<fixcrlf srcdir="${dest}"
       eol="lf"
       includes="README, AUTHORS, LICENSE, CHANGES, RUN, run.sh, run_source.sh, run_source_jdk13.sh"
  	/>
  	</target>

	<!-- create an release zip file for linux and unix flavors, contains the jar file and README, LICENSE, CHANGES, AUTHORS -->
	<!-- this task is for an binary release -->
	<target name="zip-bin-unix" depends="jar,run-script, linefeeds-unix">
		<echo message="the zipfile is going to columba-unix-${version}-bin.zip "/>
		<zip zipfile="columba-unix-${version}-bin.zip" update="true">
			<zipfileset dir="." prefix="columba-unix-${version}-bin">
				<include name="README"/>
				<include name="AUTHORS"/>
				<include name="LICENSE"/>
				<include name="CHANGES"/>
				<include name="run.sh"/>
				<include name="columba.jar"/>
				<include name="**/*.jar"/>
				<!--
				<include name="plugins/**/*.py"/>
				<include name="plugins/**/*.jar"/>
				<include name="plugins/**/plugin.xml"/>
				-->
				<exclude name="plugins/**" />
				<exclude name="classes/**"/>
			</zipfileset>
		</zip>
	</target>
	
	<!-- create an release zip file for windows flavors, contains the jar file and README, LICENSE, CHANGES, AUTHORS -->
	<!-- this task is for an binary release -->
	<target name="zip-bin-win32" depends="jar,run-script, linefeeds-win32">
		<echo message="the zipfile are going to columba-win32-${version}-bin.zip "/>
		<zip zipfile="columba-win32-${version}-bin.zip" update="true">
			<zipfileset dir="." prefix="columba-win32-${version}-bin">
				<include name="README"/>
				<include name="AUTHORS"/>
				<include name="LICENSE"/>
				<include name="CHANGES"/>
				<include name="run.bat"/>
				<include name="columba.jar"/>
				<include name="**/*.jar"/>
				<!--
				<include name="plugins/**/*.py"/>
				<include name="plugins/**/*.jar"/>
				<include name="plugins/**/plugin.xml"/>	
				-->
				<exclude name="plugins/**" />
				<exclude name="classes/**"/>			
			</zipfileset>
			<zipfileset dir="." includes="native/win32/windows_maximize/bin/WindowMaximizer.dll" fullpath="columba-win32-${version}-bin/WindowMaximizer.dll"/>
			<zipfileset dir="." includes="native/win32/launcher/bin/columba.exe" fullpath="columba-win32-${version}-bin/columba.exe"/>
		</zip>
	</target>
	
	<!-- create an source zip file for linux and unix flavors, contain all sources and README, LICENSE, CHANGES, AUTHORS -->
	<!-- this task is for an source release -->
	<target name="zip-source-unix" depends="init,run-script,linefeeds-unix">
		<echo message="the zipfile is going to columba-${version}-src.zip "/>
		<zip zipfile="columba-unix-${version}-src.zip" update="true">
			<zipfileset dir="." prefix="columba-unix-${version}-src">
				<include name="**/*.java"/>
				<include name="**/*.jar"/>
				<include name="**/*.xml"/>
				<include name="**/*.dtd"/>
				<include name="**/*.gif"/>
				<include name="**/*.jpeg"/>
				<include name="**/*.png"/>
				<include name="**/*.wav"/>
				<include name="**/*.properties"/>
				<include name="README"/>
				<include name="LICENSE"/>
				<include name="CHANGES"/>
				<include name="AUTHORS"/>				
				<include name="run_source.sh"/>				
				<include name="run_source_jdk13.sh"/>
				<include name="plugins/**/*.py"/>
				<include name="plugins/**/*.java"/>
				<include name="plugins/**/*.xml"/>
				<exclude name="plugins/**/*.jar"/>
				<exclude name="columba.jar"/>
				<exclude name="classes/**"/>
			</zipfileset>
		</zip>
	</target>
	
	<!-- create an source zip file for windows flavors, contain all sources and README, LICENSE, CHANGES, AUTHORS -->
	<!-- this task is for an source release -->
	<target name="zip-source-win32" depends="init,run-script,linefeeds-win32">
		<echo message="the zipfile are going to columba-${version}-src.zip "/>
		<zip zipfile="columba-win32-${version}-src.zip" update="true">
			<zipfileset dir="." prefix="columba-win32-${version}-src">
				<include name="**/*.java"/>
				<include name="**/*.jar"/>
				<include name="**/*.xml"/>
				<include name="**/*.dtd"/>
				<include name="**/*.gif"/>
				<include name="**/*.jpeg"/>
				<include name="**/*.png"/>
				<include name="**/*.wav"/>
				<include name="**/*.properties"/>
				<include name="README"/>
				<include name="LICENSE"/>
				<include name="CHANGES"/>
				<include name="AUTHORS"/>
				<include name="run_source.bat"/>
				<include name="run_source_jdk13.bat"/>
				<include name="plugins/**/*.py"/>
				<include name="plugins/**/*.java"/>
				<include name="plugins/**/*.xml"/>
				<exclude name="plugins/**/*.jar"/>
				<exclude name="columba.jar"/>
				<exclude name="classes/**"/>
			</zipfileset>
		</zip>
	</target>

	<!-- this target creates two zip-files, one for binary release and one for the source stuff -->
	<target name="zip" depends="zip-bin-unix,zip-bin-win32,zip-source-unix,zip-source-win32"/>

	<!-- this target creates two zip-files, one for binary release and one for the source stuff -->
	<!-- this is also the release target ;-0 -->
	<target name="release" depends="zip-bin-unix,zip-bin-win32,zip-source-unix,zip-source-win32"/>

	<!-- signing jar-files for Java WebStart -->
        <!-- all libs and columba.jar need to be signed -->
        <!-- you need to specify the alias and the passwords on the commandline -->
	<property name="alias" value="columba_key"/>
        <property name="storepass" value="storepass"/>
        <property name="keypass" value="keypass"/>

        <target name="webstart" depends="jar">
         <signjar alias="${alias}" storepass="${storepass}" keypass="${keypass}">
          <fileset dir="${dest}">
           <include name="columba.jar"/>
           <include name="libs/*.jar"/>
          </fileset>
         </signjar>
        </target>

	<!-- only for build the class-files -->
	<target name="build" depends="compile"/>

	<target name="doc" depends="document"/>

	<!-- to run the application via ant, this is good for testing and coding in xemacs -->
	<target name="run" depends="jar">
		<java jar="${dest}/columba.jar" fork="yes">
			<arg value="--debug"/>
		</java>
	</target>

	<!-- to clean up the dest-directory -->
	<target name="clean">
		<delete dir="${dest}"/>
	</target>

	<!-- create default package for translators -->
	<target name="i18n">
 	<zip zipfile="default_i18n.zip" basedir="res" update="true">
		<include name="**/*.properties"/>
	</zip>
	</target>
	
</project>
