<project name="Struts" default="compile.library" basedir=".">

  <!-- Initialization properties -->
  <property name="app.name"       value="struts"/>
  <property name="build.home"     value="../build/${app.name}"/>
  <property name="catalina.build"  value="../build/catalina"/>
  <property name="dist.home"      value="../dist/${app.name}"/>
  <property name="tomcat.build"    value="../build/tomcat"/>

  <!-- BUILD:  Create directories and copy files for library -->
  <target name="prepare.library">
    <mkdir   dir="${build.home}"/>
    <mkdir   dir="${build.home}/library"/>
    <mkdir   dir="${build.home}/library/classes"/>
  </target>

  <!-- BUILD:  Create directories and copy files for documentation app -->
  <target name="prepare.documentation">
    <mkdir   dir="${build.home}"/>
    <mkdir   dir="${build.home}/documentation"/>
    <mkdir   dir="${build.home}/documentation/WEB-INF"/>
    <mkdir   dir="${build.home}/documentation/WEB-INF/classes"/>
    <mkdir   dir="${build.home}/documentation/WEB-INF/lib"/>
    <copydir src="web/documentation" dest="${build.home}/documentation"/>
  </target>

  <!-- BUILD:  Create directories and copy files for example application -->
  <target name="prepare.example">
    <mkdir   dir="${build.home}"/>
    <mkdir   dir="${build.home}/example"/>
    <mkdir   dir="${build.home}/example/WEB-INF"/>
    <mkdir   dir="${build.home}/example/WEB-INF/classes"/>
    <mkdir   dir="${build.home}/example/WEB-INF/lib"/>
    <copydir src="web/example" dest="${build.home}/example"/>
  </target>

  <!-- DIST:  Create directories and copy files for distribution -->
  <target name="prepare.dist">
    <mkdir   dir="${dist.home}"/>
    <mkdir   dir="${dist.home}/etc"/>
    <mkdir   dir="${dist.home}/lib"/>
    <mkdir   dir="${dist.home}/src"/>
    <mkdir   dir="${dist.home}/web"/>
    <mkdir   dir="${dist.home}/webapps"/>
  </target>

  <!-- BUILD:  Compile library directory components -->
  <target name="compile.library" depends="prepare.library">
    <javac srcdir="src/share"     destdir="${build.home}/library/classes"
           classpath="${servlet.jar}"
	   debug="true" optimize="false" deprecation="false"/>
    <copydir src="src/share"         dest="${build.home}/library/classes">
      <include name="**/*.properties" />
    </copydir>
    <copydir src="src/conf" dest="${build.home}/library"/>
    <style basedir="src/doc" destdir="${build.home}/library"
         extension=".tld" style="stylesheets/tld.xsl" includes="tags-*.xml"/>
  </target>

  <!-- BUILD:  Compile documentation application components -->
  <target name="compile.documentation"
       depends="compile.library,prepare.documentation">

    <!-- Compile beans and tags required by the documentation app -->
<!--
    <javac srcdir="src/documentation"
          destdir="${build.home}/documentation/WEB-INF/classes"
        classpath="${build.home}/library/classes:${servlet.jar}"
            debug="true" optimize="false" deprecation="false"/>
-->

    <!-- Copy Struts JAR file and TLD to the documentation app -->
    <copyfile src="${dist.home}/lib/${app.name}.jar"
             dest="${build.home}/documentation/WEB-INF/lib/${app.name}.jar"/>
    <copyfile src="${dist.home}/lib/${app.name}.tld"
             dest="${build.home}/documentation/WEB-INF/${app.name}.tld"/>

    <!-- Copy static documentation content -->
    <copyfile src="TODO" dest="${build.home}/documentation/todo.txt"/>
    <copydir src="web/documentation" dest="${build.home}/documentation"/>

    <!-- Create dynamically generated documentation -->
    <style   basedir="src/doc" destdir="${build.home}/documentation"
           extension=".html" style="stylesheets/struts.xsl" includes="*.xml"/>
    <copydir src="src/doc" dest="${build.home}/documentation"
        includes="**/*.css,**/*.gif,**/*.html,**/*.jpg,**/*.js"/>

  </target>

  <!-- BUILD:  Compile example application components -->
  <target name="compile.example"
       depends="dist.library,prepare.example">
    <javac srcdir="src/example"
          destdir="${build.home}/example/WEB-INF/classes"
        classpath="${build.home}/library/classes:${servlet.jar}"
            debug="true" optimize="false" deprecation="false"/>
    <copydir src="src/example" dest="${build.home}/example/WEB-INF/classes">
      <include name="**/*.properties" />
    </copydir>
    <copydir  src="web/example" dest="${build.home}/example"/>
    <copyfile src="${dist.home}/lib/${app.name}.jar"
             dest="${build.home}/example/WEB-INF/lib/${app.name}.jar"/>
    <copyfile src="${dist.home}/lib/${app.name}.tld"
             dest="${build.home}/example/WEB-INF/${app.name}.tld"/>
  </target>

  <!-- BUILD:  Create Javadoc documentation -->
  <target name="compile.javadoc">
    <deltree  dir="${build.home}/documentation/api"/>
    <mkdir    dir="${build.home}/documentation/api"/>
    <javadoc sourcepath="src/share"
                destdir="${build.home}/documentation/api"
           packagenames="org.apache.struts.*"
	         author="true"
                private="true"
                version="true"
            windowtitle="Jakarta Struts API Documentation"
               doctitle="&lt;h1&gt;Jakarta Struts Package&lt;/h1&gt;"
                 bottom="Copyright &#169; 2000 - Apache Software Foundation"/>
  </target>

  <!-- DIST:  Construct library distributables -->
  <target name="dist.library" depends="prepare.dist,compile.library">
    <copyfile src="${build.home}/library/${app.name}.tld"
             dest="${dist.home}/lib/${app.name}.tld"/>
    <jar  jarfile="${dist.home}/lib/${app.name}.jar"
          basedir="${build.home}/library/classes" includes="**"/>
  </target>

  <!-- DIST:  Construct documentation distributables -->
  <target name="dist.documentation"
       depends="dist.library,compile.documentation,compile.javadoc">
    <jar  jarfile="${dist.home}/webapps/${app.name}-documentation.war"
          basedir="${build.home}/documentation" includes="**"/>
  </target>

  <!-- DIST:  Construct example distributables -->
  <target name="dist.example" depends="dist.library,compile.example">
    <jar  jarfile="${dist.home}/webapps/${app.name}-example.war"
          basedir="${build.home}/example" includes="**"/>
  </target>

  <!-- DIST:  Copy sources -->
  <target name="dist.source" depends="prepare.dist">
    <copydir  src="."       dest="${dist.home}/etc"   includes="build.*"/>
    <copyfile src="INSTALL" dest="${dist.home}/INSTALL"/>
    <copyfile src="LICENSE" dest="${dist.home}/LICENSE"/>
    <copyfile src="README"  dest="${dist.home}/README"/>
    <copyfile src="TODO"    dest="${dist.home}/TODO"/>
    <copydir  src="src"     dest="${dist.home}/src"/>
    <copydir  src="web"     dest="${dist.home}/web"/>
  </target>

  <!-- DIST:  Construct complete release distribution -->
  <target name="dist"
       depends="dist.library,dist.documentation,dist.example,dist.source"/>

  <!-- DEPLOY:  Deploy these applications on Catalina -->
  <target name="deploy.catalina" depends="compile.documentation,compile.example">
    <mkdir   dir="${catalina.build}/webapps/struts-documentation"/>
    <copydir src="${build.home}/documentation"
            dest="${catalina.build}/webapps/struts-documentation"/>
    <mkdir   dir="${catalina.build}/webapps/struts-example"/>
    <copydir src="${build.home}/example"
            dest="${catalina.build}/webapps/struts-example"/>
  </target>

  <!-- DEPLOY:  Deploy these applications on Tomcat -->
  <target name="deploy.tomcat" depends="compile.documentation,compile.example">
    <mkdir   dir="${tomcat.build}/webapps/struts-documentation"/>
    <copydir src="${build.home}/documentation"
            dest="${tomcat.build}/webapps/struts-documentation"/>
    <mkdir   dir="${tomcat.build}/webapps/struts-example"/>
    <copydir src="${build.home}/example"
            dest="${tomcat.build}/webapps/struts-example"/>
  </target>

  <!-- UTILITY:  Clean up build and distribution directories -->
  <target name="clean">
    <deltree dir="${build.home}"/>
    <deltree dir="${dist.home}"/>
  </target>

  <!-- UTILITY:  All-in-one build target -->
  <target name="all"
       depends="clean,compile.library,compile.documentation,compile.example"/>

</project>
