# rmi.properties	1.0 02/07/15
#
# Copyright (C) 2002 - INRIA (www.inria.fr)
#
# CAROL: Common Architecture for RMI ObjectWeb Layer
#
# This library is developed inside the ObjectWeb Consortium,
# http://www.objectweb.org
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or any later version.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
# USA
#
#
# author  Guillaume Riviere (Guillaume.Riviere@inrialpes.fr)
# version 1.0, 15/07/2002 
#
# configuration file for rmi properties
# for each rmi architecture put in this file the properties below:
# (rmi architecture XXX)
#
#
# boolean for rmi activation
# carol.XXX.rmi.activate=<true, false> 
# 
# boolean for default protocol
# carol.XXX.rmi.default=<true, false>
# 
# Interceptors initializer class (class name with package)
# carol.XXX.rmi.initializer.<Interceptor initilizer 1 full class name>
# carol.XXX.rmi.initializer.<Interceptor initilizer 2 full class name>
# ...
# 
# Portable remote object delegate class for this protocol
# carol.rmi.XXX.PortableRemoteObjectClass=<Portable remote object delegatefull class name>
# 
# Configuration for rmi XXX jndi, if those properties aren't set for one of the define rmi carol 
# look in the standard jndi.properties
# You can put here all jndi properties with
# carol.XXX.jndi.<properties name>=<properties value>
# for example:
#
#
# java.naming.factory.initial property
# carol.XXX.jndi.java.naming.factory.initial=<jndi initial factory>
# 
# java.naming.provider.url property
# carol.XXX.jndi.java.naming.provider.url=<jndi naming provider>
# 
# java.naming.factory.url.pkgs
# carol.XXX.jndi.java.naming.factory.url.pkgs=<jndi url package>
#
# for specific rmi value you can put System Properties that are send to the JVM
# with 
#
# carol.jvm.<property>=<value>
#
######################################################################
#                   Configuration for Rmi IIOP                       #
######################################################################

# boolean for rmi activation
carol.rmi.iiop.activate=true 

# boolean for default protocol
carol.rmi.iiop.default=true

# portable remote object delegate class for this protocol (full class name with package)
carol.rmi.iiop.PortableRemoteObjectClass=com.sun.corba.se.internal.javax.rmi.PortableRemoteObject

# xtra jvm properties for iiop
# those properties are put direcly in the jvm
# be carful DO NOT put here the javax.rmi.CORBA.PortableRemoteObjectDelegate 
# properties but in carol.rmi.iiop.PortableRemoteObjectClass field

# util delegate
carol.jvm.javax.rmi.CORBA.UtilClass=com.sun.corba.se.internal.POA.ShutdownUtilDelegate

# stub delegate
carol.jvm.javax.rmi.CORBA.StubClass=com.sun.corba.se.internal.javax.rmi.CORBA.StubDelegateImpl

# orb 
carol.jvm.org.omg.CORBA.ORBClass=com.sun.corba.se.internal.Interceptors.PIORB

# orb singleton 
carol.jvm.org.omg.CORBA.ORBSingletonClass=com.sun.corba.se.internal.corba.ORBSingleton

# Protocol Interceptors initializer class (this class is nessesary for multi rmi)
carol.jvm.org.omg.PortableInterceptor.ORBInitializerClass.org.objectweb.carol.rmi.iiop.interceptor.ProtocolInitializer

# Interceptors initializer class (class name with package)
carol.jvm.org.omg.PortableInterceptor.ORBInitializerClass.org.objectweb.carol.jtests.conform.interceptor.iiop.IIOPInitializer



# configuration for rmi jrmp jndi
# java.naming.factory.initial property
carol.jndi.iiop.java.naming.factory.initial=com.sun.jndi.cosnaming.CNCtxFactory
# java.naming.provider.url property
carol.jndi.iiop.java.naming.provider.url=iiop://localhost:19571

