<?xml version="1.0" encoding="UTF-8"?>
<!--
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 - The contents of this file are subject to the LGPL Licence 
 - 
 - Autor:               <a href="sebastien.chassande@inriaples.fr">Sebastien Chassande</a>
 - Carol Modifications :<a href="Guillaume.Riviere@inrialpes.fr">Guillaume RIVIERE</a>
 -
 - Compilation directive for testing a basic server with carol over sun jrmp
 - this test create 3 jvm (registry, server, junit-client) for carol jrmp unit testing 
 -
 - to call this projecrt set the properties : 
 -                      stub.jar.name, 
 -                      client.properties.file.name, server.properties.file.name,
 -                      name.server.class.name, name.server.option 
 - 
 -->
<project name="carol.test.single.server" default="all" >

  <!-- test result location -->
  <property name="report.dir"  value="${test.dist.results}/${test.name}"/>

  <!-- test tmp location -->
  <property name="test.tmp.client"         value="${test.tmp}/client"/>
  <property name="test.tmp.server"         value="${test.tmp}/server"/>
  <property name="test.tmp.registry"       value="${test.tmp}/registry"/>
  <property name="test.single.jvmargs"     value="-Djavax.rmi.CORBA.PortableRemoteObjectClass=org.objectweb.carol.rmi.multi.MultiPRODelegate -Djava.naming.factory.initial=org.objectweb.carol.jndi.spi.MultiOrbInitialContextFactory -Djava.security.policy=${test.ext}/java.policy"/>

  <!-- Building of a path which contains carol jars for tests compilation-->
  <path id="test.client.classpath"> 
    <fileset dir="${carol.dist}/lib">
      <include name="**/*.jar"/>
    </fileset>  
    <fileset dir="${test.dist.lib}">
      <include name="**/carol_test.jar"/>
      <include name="**/${stub.jar.name}"/>
    </fileset> 
    <fileset dir="${test.externals}">
      <include name="**/*.jar"/>
    </fileset> 
    <pathelement location="${test.tmp.client}"/>
  </path>

  <path id="test.server.classpath">
    <fileset dir="${carol.dist}/lib">
      <include name="**/*.jar"/>
    </fileset> 
    <fileset dir="${test.dist.lib}">
      <include name="**/carol_test.jar"/>
      <include name="**/${stub.jar.name}"/>   
    </fileset> 
    <fileset dir="${test.externals}">
      <include name="**/*.jar"/>
    </fileset>
    <pathelement location="${test.tmp.server}"/>
  </path>

  <path id="test.name.server.classpath">
    <fileset dir="${carol.dist}/lib">
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${test.externals}">
      <include name="**/*.jar"/>
    </fileset>  
    <fileset dir="${test.dist.lib}">
      <include name="**/carol_test.jar"/>
      <include name="**/${stub.jar.name}"/>      
    </fileset> 
  </path>
  
  <target name="all">
    <antcall  target="purge.tmp.dir"/>
    <antcall  target="build.tmp.dir"/>
    <antcall  target="launch.test.single"/>
  </target>

  <!-- lauching directories purge and creation -->
   <target name="purge.tmp.dir">
    <delete dir="${test.tmp.client}"/>
    <delete dir="${test.tmp.server}"/>
    <delete dir="${test.tmp.registry}"/>
  </target>

  <target name="build.tmp.dir">
    <mkdir dir="${test.tmp.client}"/>
    <mkdir dir="${test.tmp.server}"/>    
    <mkdir dir="${test.tmp.registry}"/>
    <copy file="${test.ext}/${client.properties.file.name}" tofile="${test.tmp.client}/jndi.properties" />  
    <copy file="${test.ext}/${server.properties.file.name}" tofile="${test.tmp.server}/carol.properties" /> 
  </target>

  <!-- test launching --> 
  <!-- those tests are launch with a parallele task -->
  <target name="launch.test.single">
      
    <condition property="is.jvm.1.4">
      <equals  arg1="${ant.java.version}" arg2="1.4"/>
    </condition>

    <parallel>
    
      <java classname="${name.server.class.name}" fork="true" timeout="30000">
	<jvmarg value="-Djava.security.policy=${test.ext}/java.policy"/>
	<arg line="${name.server.option}"/>	
	<classpath refid="test.name.server.classpath"/>
      </java>
      
      <!-- launch the server -->
      <sequential>
	<sleep seconds="3"/>
	<java classname="org.objectweb.carol.jtests.conform.basic.server.BasicServer" fork="true" timeout="20000">
	  <jvmarg line="${test.single.jvmargs}"/>
	  <classpath refid="test.server.classpath"/>
	</java>
      </sequential>

      <!-- launch the client -->
      <sequential>
	<sleep seconds="5"/>
	<mkdir dir="${report.dir}" />
	<mkdir dir="${report.dir}/html" />
	<junit printsummary="yes" 
	  haltonfailure="no"
	  haltonerror="no"
	  fork="yes" >
	  <classpath refid="test.client.classpath" />
	  <formatter type="xml" />
	  <batchtest fork="yes" todir="${report.dir}">
	    <fileset dir="${test.src}">
	      <include name="${test.client.pkg}/*Test.java" />
	    </fileset>
	  </batchtest>
	</junit>
      </sequential>
    </parallel>
    <antcall  target="report"/>
  </target> 
  
  <target name="report" if="is.jvm.1.4" >
    <junitreport todir="${report.dir}" >
      <fileset dir="${report.dir}">
	<include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${report.dir}/html"/>
    </junitreport>
  </target>
</project>
