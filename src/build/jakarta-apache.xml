<!-- This antfile will be run on jakarta.apache.org to build source snapshots
     and download binary packages from worker build machines -->

<project name="source-snapshots" default="src.snap" basedir=".">
   <!-- ******************** Initialization ******************** -->
  <target name="init">
    <tstamp />

    <!-- Work directory - source download and build files -->
    <property name="ws.dir" value="${user.home}/ws" />

    <!-- Directory where build images will be generated -->
    <property name="nightly.dir" value="/www/jakarta.apache.org/builds/tomcat/nightly" />

    <!-- Source for src snapshots, keep it in sync with jakarta-apache.xml -->
    <property name="nightly.url" value="http://jakarta.apache.org/builds/tomcat/nightly" />

    <!-- Directory where build scripts are located -->
    <property name="script.dir" value="${user.home}/scripts" />

    <property name="cvs.root" value=":pserver:anoncvs@jakarta.apache.org:/home/cvspublic" />

    <!-- Allow user to override any of the hardcoded directories -->
    <property file="${user.home}/.ant.properties" />

    <mkdir dir="${ws.dir}" />
   </target>

   <!-- ******************** Creating source snapshots  ******************** -->
  <target name="cvsget" depends="init">
     <ant antfile="${ant.file}" target="package.snapshot" >
        <property name="package.name" value="jakarta-ant" />
     </ant>    
     <ant antfile="${ant.file}" target="package.snapshot" >
        <property name="package.name" value="jakarta-tomcat" />
     </ant>    
     <ant antfile="${ant.file}" target="package.snapshot" >
        <property name="package.name" value="jakarta-tools" />
     </ant>    
     <ant antfile="${ant.file}" target="package.snapshot" >
        <property name="package.name" value="jakarta-watchdog" />
     </ant>    
     <ant antfile="${ant.file}" target="package.snapshot" >
        <property name="package.name" value="xml-xalan" />
     </ant>    
     <ant antfile="${ant.file}" target="package.snapshot" >
        <property name="package.name" value="xml-xerces" />
     </ant>    
  </target>
  
  <!-- Customized target, needs to be called with parameters -->
  <!-- Parameters:  package.name -->
  <target name="package.snapshot" depends="init">
    <deltree dir="${ws.dir}/${package.name}/" />
    <deltree dir="${ws.dir}/${package.name}.src.zip" />
    <cvs cvsRoot="${cvs.root}" 
         package="${package.name}"   dest="${ws.dir}"  />
    <zip zipfile="${nightly.dir}/src/${package.name}.src.zip" 
         basedir="${ws.dir}" items="${package.name}"/>
    <copyfile src="${nightly.dir}/src/${package.name}.src.zip"
              dest="${nightly.dir}/src/${package.name}-${DSTAMP}.src.zip" />
  </target>
 
 
  <target name="update.scripts" depends="init" >
    <copyfile src="${ws.dir}/jakarta-tomcat/src/build/main.xml"
              dest="${script.dir}/main.xml" />
    <copyfile src="${ws.dir}/jakarta-tomcat/src/build/jakarta-apache.xml"
              dest="${script.dir}/jakarta-apache.xml" />
  </target>

   <!-- ******************** Getting binaries from build machines  ******************** -->
   <target name="binaries.get"  depends="init">
    <get src="ftp://tokyo.javasoft.com/pub/tomcat/tomcat.zip" 
         dest="${nightly.dir}/tomcat.zip" ignoreErrors="true" />
    <get src="ftp://tokyo.javasoft.com/pub/ant/ant.zip" 
         dest="${nightly.dir}/ant.zip"  ignoreErrors="true" />
    <get src="ftp://tokyo.javasoft.com/pub/tomcat/ASFtomcat.pkg.tar.Z" 
         dest="${nightly.dir}/ASFtomcat.pkg.tar.Z" ignoreErrors="true" />
    <get src="ftp://tokyo.javasoft.com/pub/ant/ASFant.pkg.tar.Z" 
         dest="${nightly.dir}/ASFant.pkg.tar.Z" ignoreErrors="true" />

    <get src="ftp://tokyo.javasoft.com/pub/tomcat/tomcat-test.log" 
         dest="${nightly.dir}/log/tomcat-test-SunOS-${DSTAMP}.log" ignoreErrors="true" />
    <get src="ftp://tokyo.javasoft.com/pub/tomcat/watchdog-test.log" 
         dest="${nightly.dir}/log/watchdog-test-SunOS-${DSTAMP}.log" ignoreErrors="true" />

    <get src="ftp://osaka.javasoft.com/pub/ant/ant-1.0-0.noarch.rpm" 
         dest="${nightly.dir}/ant-1.0-0.noarch.rpm  " ignoreErrors="true"  />
    <get src="ftp://osaka.javasoft.com/pub/ant/ant-1.0-0.src.rpm" 
         dest="${nightly.dir}/ant-1.0-0.src.rpm  " ignoreErrors="true" />
    <get src="ftp://osaka.javasoft.com/pub/tomcat/tomcat-3.0-0.noarch.rpm" 
         dest="${nightly.dir}/tomcat-3.0-0.noarch.rpm  " ignoreErrors="true" />
    <get src="ftp://osaka.javasoft.com/pub/tomcat/tomcat-3.0-0.src.rpm" 
         dest="${nightly.dir}/tomcat-3.0-0.src.rpm  " ignoreErrors="true" />

    <get src="ftp://osaka.javasoft.com/pub/tomcat/watchdog-test.log" 
         dest="${nightly.dir}/log/watchdog-test-Linux-i386-${DSTAMP}.log" ignoreErrors="true" />
    <get src="ftp://osaka.javasoft.com/pub/tomcat/tomcat-test.log" 
         dest="${nightly.dir}/log/tomcat-test-Linux-i386-${DSTAMP}.log" ignoreErrors="true" />

    <copyfile src="${nightly.dir}/tomcat.zip" dest="${nightly.dir}/tomcat-${DSTAMP}.zip" />
    <copyfile src="${nightly.dir}/ant.zip" dest="${nightly.dir}/ant-${DSTAMP}.zip" />
   </target>



   <target name="tomcat.zip2tar"  depends="init">
     <deltree dir="${ws.dir}/tmp" />
     <mkdir dir="${ws.dir}/tmp" />
     <expand src="${nightly.dir}/tomcat.zip" dest="${ws.dir}/tmp" />
     <exec dir="${ws.dir}/tmp"  command="tar cf tomcat.tar tomcat" />
     <exec dir="${ws.dir}/tmp"  command="compress tomcat.tar "/>
     <exec dir="${ws.dir}/tmp"  command="tar cf tomcat.tar tomcat" />
     <exec dir="${ws.dir}/tmp"  command="bzip2 tomcat.tar "/>
     <copyfile src="${ws.dir}/tmp/tomcat.tar.Z" dest="${nightly.dir}/tomcat.tar.Z" />
     <copyfile src="${ws.dir}/tmp/tomcat.tar.bz2" dest="${nightly.dir}/tomcat.tar.bz2" />
   </target>

   <target name="ant.zip2tar"  depends="init">
     <deltree dir="${ws.dir}/tmp" />
     <mkdir dir="${ws.dir}/tmp" />
     <expand src="${nightly.dir}/ant.zip" dest="${ws.dir}/tmp" />
     <exec dir="${ws.dir}/tmp"  command="tar cf ant.tar ant" />
     <exec dir="${ws.dir}/tmp"  command="compress ant.tar "/>
     <exec dir="${ws.dir}/tmp"  command="tar cf ant.tar ant" />
     <exec dir="${ws.dir}/tmp"  command="bzip2 ant.tar "/>
     <copyfile src="${ws.dir}/tmp/ant.tar.Z" dest="${nightly.dir}/ant.tar.Z" />
     <copyfile src="${ws.dir}/tmp/ant.tar.bz2" dest="${nightly.dir}/ant.tar.bz2" />
   </target>

   <target name="remove-old"  depends="init">
      <exec command="find ${nightly.dir} -atime +3  -type f -print -exec rm {} \;" />
      <exec command="find ${nightly.dir}/log -atime +3  -type f  -print -exec rm {} \;" />
      <exec command="find ${nightly.dir}/src -atime +3  -type f  -print -exec rm {} \;" />
   </target>

   <!-- ******************** Getting sources from Jakarta to ws.dir ******************** -->
   <!-- Generic (customizable) target to build a project -->
   <!-- Parameters:  package.name -->
   <target name="package.get" depends="init" >
    <deltree dir="${ws.dir}/${package.name}.src.zip" />
    <get src="${nightly.url}/src/${package.name}.src.zip" dest="${ws.dir}/${package.name}.src.zip" />
    
    <deltree dir="${ws.dir}/${package.name}" />
    <expand src="${ws.dir}/${package.name}.src.zip" dest="${ws.dir}" />
  </target>

  <target name="src.get" depends="init">    
     <ant antfile="${ant.file}" target="package.get" >
        <property name="package.name" value="jakarta-ant" />
     </ant>    
     <ant antfile="${ant.file}" target="package.get" >
        <property name="package.name" value="jakarta-tomcat" />
     </ant>    
     <ant antfile="${ant.file}" target="package.get" >
        <property name="package.name" value="jakarta-tools" />
     </ant>    
     <ant antfile="${ant.file}" target="package.get" >
        <property name="package.name" value="jakarta-watchdog" />
     </ant>    
     <ant antfile="${ant.file}" target="package.get" >
        <property name="package.name" value="xml-xalan" />
     </ant>    
     <ant antfile="${ant.file}" target="package.get" >
        <property name="package.name" value="xml-xerces" />
     </ant>
  </target>

   <!-- ******************** Agregate targets  ******************** -->

  <target name="src.snap" depends="init,remove-old,cvsget" >
  </target>

  <target name="bin.snap" depends="init,binaries.get,tomcat.zip2tar,ant.zip2tar" >
  </target>
  
</project>

