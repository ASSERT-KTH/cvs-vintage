<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- JBoss build file                                                       -->
<!-- ======================================================================= -->

<project name="JBoss" default="main" basedir="../..">
  <target name="init">

    <taskdef name="xmlbean" classname="com.dreambean.xmlbeans.ant.XMLBeans"/>

    <property name="Name" value="JBoss"/>
    <property name="name" value="jboss"/>
    <property name="version" value="2.0"/>

    <property name="bin.dir" value="${basedir}/bin"/>
    <property name="src.bin.dir" value="${basedir}/src/bin"/>
    <property name="src.dir" value="${basedir}/src/main"/>
    
    <property name="verifier.src.dir" value="${basedir}/src/main/org/jboss/verifier"/>
    
    <property name="src.client.dir" value="${basedir}/src/client"/>
    <property name="src.resources" value="${basedir}/src/resources"/>
    <property name="db.dir" value="${basedir}/db"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="lib.ext.dir" value="${lib.dir}/ext"/>
    <property name="etc.dir" value="${basedir}/src/etc"/>
    <property name="src.lib.dir" value="${basedir}/src/lib"/>
    <property name="docs.dir" value="${basedir}/src/docs"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.bin.dir" value="${build.dir}/bin"/>
    <property name="build.lib.dir" value="${build.dir}/lib"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    <property name="build.javadocs.dir" value="${build.dir}/docs/api"/>
    <property name="dist.dir" value="dist"/>
    
    <property name="classpath" value="${lib.dir}/jmxri.jar;${build.classes.dir};${src.lib.dir}/awt.jar;${lib.dir}/xml.jar;${src.lib.dir}/ejb.jar;${src.lib.dir}/ejb2.0.jar;${src.lib.dir}/ejxeditor.jar;${src.lib.dir}/jndi.jar;${src.lib.dir}/ejxejb.jar;${src.lib.dir}/jta-spec1_0_1.jar;${src.lib.dir}/jnpserver.jar;${src.lib.dir}/dynaserver.jar;${src.lib.dir}/hsql.jar;${src.lib.dir}/webserver.jar;${src.lib.dir}/idb.jar;${src.lib.dir}/jdbc2_0-stdext.jar;${src.lib.dir}/jaas.jar;${src.lib.dir}/jpl-util-0_5b.jar;${src.lib.dir}/jms.jar;${src.lib.dir}/openjms-client-patched-0.5.1.jar;${src.lib.dir}/exolabcore-0.1.jar;${src.lib.dir}/jboss-jms.jar;${src.lib.dir}/openjms-pool.jar;${src.lib.dir}/jaxp.jar"/>

    <property name="packages" value="org.jboss,org.jboss.configuration,org.jboss.dependencies,org.jboss.deployment,org.jboss.ejb,org.jboss.ejb.plugins,org.jboss.ejb.plugins.jaws,org.jboss.ejb.plugins.jaws.deployment,org.jboss.ejb.plugins.jaws.jdbc,org.jboss.ejb.plugins.jaws.metadata,org.jboss.ejb.plugins.jrmp.server,org.jboss.ejb.plugins.jrmp.interfaces,org.jboss.ejb.plugins.jrmp12.server,org.jboss.ejb.plugins.jrmp12.interfaces,org.jboss.ejb.plugins.jrmp13.server,org.jboss.ejb.plugins.jrmp13.interfaces,org.jboss.ejb.plugins.jms,org.jboss.jdbc,org.jboss.jmx.client,org.jboss.jmx.interfaces,org.jboss.jmx.server,org.jboss.logging,org.jboss.metadata,org.jboss.minerva.datasource,org.jboss.minerva.factories,org.jboss.minerva.jdbc,org.jboss.minerva.pools,org.jboss.minerva.xa,org.jboss.naming,org.jboss.naming.java,org.jboss.proxy,org.jboss.security,org.jboss.spydermq,org.jboss.security.plugins,org.jboss.security.plugins.samples,org.jboss.tm,org.jboss.tomcat,org.jboss.util,org.jboss.util.timeout,org.jboss.verifier,org.jboss.verifier.event,org.jboss.verifier.factory,org.jboss.web,org.jboss.jms.asf,org.jboss.jms.jndi"/>

    <property name="build.compiler" value="classic"/>

    <property name="build.verifier.classes.dir" value="${build.dir}/verifier/classes"/>
    <property name="verifier.classpath" value="${build.verifier.classes.dir};${lib.dir}/jaxp.jar;${src.lib.dir}/ejb.jar;${src.lib.dir}/jta-spec1_0_1.jar;${src.lib.dir}/jpl-util-0_5b.jar;${src.lib.dir}/jms.jar;${src.lib.dir}/jmxri.jar;${src.lib.dir}/parser.jar"/>

    <available property="jdk1.3+" classname="java.lang.StrictMath" />
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init">
    <mkdir dir="${build.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the source code                                            -->
  <!-- =================================================================== -->
  <target name="compile" depends="prepare">
    <mkdir dir="${build.classes.dir}"/>
    <javac srcdir="${src.dir}"
           destdir="${build.classes.dir}"
           classpath="${classpath}"
           debug="off"
           deprecation="off"
           optimize="on"
           includes="org/**"
           excludes="**/activation/**, **/*BeanInfo.java"
    />

    <rmic base="${build.classes.dir}"
          classname="org.jboss.jmx.server.JMXAdaptorImpl"
          stubVersion="1.2"
          classpath="${classpath}"/>

    <rmic base="${build.classes.dir}"
          classname="org.jboss.jmx.server.RMIConnectorImpl"
          stubVersion="1.2"
          classpath="${classpath}"/>

    <rmic base="${build.classes.dir}"
          classname="org.jboss.jmx.client.RMIClientConnectorImpl.Listener"
          stubVersion="1.2"
          classpath="${classpath}"/>

    <rmic base="${build.classes.dir}"
          classname="org.jboss.ejb.plugins.jrmp.server.JRMPContainerInvoker"
          stubVersion="1.2"
          classpath="${classpath}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the source code for the Test Suite                         -->
  <!-- AS: At the moment only necessary for JMX Connector Test Client      -->
  <!-- =================================================================== -->
  <target name="compileTest" depends="compile">
    <javac srcdir="${src.dir}"
           destdir="${build.classes.dir}"
           classpath="${classpath}"
           debug="on"
           deprecation="off"
           optimize="off"
           includes="test/jboss/jmx/**"
           excludes=""
    />
  </target>

  <!-- =================================================================== -->
  <!-- Create the EJX plugin BeanInfo classes                              -->
  <!-- =================================================================== -->
  <target name="xmlbeans" depends="compile">
    <xmlbean destdir="${build.classes.dir}"
             srcdir="${etc.dir}/beaninfo"
             includes="**"
    />
    <javac srcdir="${build.classes.dir}"
           destdir="${build.classes.dir}"
           classpath="${classpath}"
           debug="on"
           deprecation="off"
           optimize="off"
           includes="**/*BeanInfo.java"
    />
  </target>

  <!-- =================================================================== -->
  <!-- Creates the jar archives                                            -->
  <!-- =================================================================== -->
  <target name="jar" depends="xmlbeans,compileTest">
    <copy todir="${build.classes.dir}">
    	<fileset dir="${src.resources}"/>
    </copy>

    <mkdir dir="${build.bin.dir}"/>
    <jar jarfile="${build.bin.dir}/run.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/run.mf"
         includes="org/jboss/Main*.*,org/jboss/security/SecurityAssociation.class,org/jboss/dependencies/**"
    />

    <mkdir dir="${build.lib.dir}/ext"/>
    <jar jarfile="${build.lib.dir}/ext/jboss.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/jboss.mf"
         includes="org/jboss/**"
         excludes="org/jboss/Main*,org/jboss/ejb/deployment/**,org/jboss/security/SecurityAssociation.class,org/jboss/ejb/plugins/jaws/deployment/**,org/jboss/dependencies/**,org/jboss/security/**/*LoginModule.class"
    />

    <jar jarfile="${build.lib.dir}/jboss-jaas.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/jboss.mf"
         includes="org/jboss/security/**/*ServerLoginModule.class"
    />

    <mkdir dir="${build.dir}/client"/>
    <jar jarfile="${build.dir}/client/jboss-client.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/jboss-client.mf"
         includes="org/jboss/ejb/DeploymentException.class,org/jboss/proxy/**,org/jboss/ejb/plugins/jrmp/server/*Stub.class,org/jboss/ejb/plugins/jrmp/interfaces/**,org/jboss/ejb/plugins/jrmp12/interfaces/**,org/jboss/ejb/plugins/jrmp13/interfaces/**,org/jboss/util/SerializableEnumeration.class,org/jboss/ejb/CacheKey.class, org/jboss/util/FastKey.class,org/jboss/security/SecurityAssociation.class,org/jboss/security/SimplePrincipal.class,org/jboss/security/ClientLoginModule.class,org/jboss/monitor/client/*.class"
    />

    <jar jarfile="${build.dir}/client/deploy.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/deploy.mf"
         includes="org/jboss/jmx/interfaces/JMXAdaptor.class,org/jboss/jmx/client/Deployer.class,org/jboss/jmx/server/JMXAdaptorImpl_Stub.class,org/jboss/ejb/CacheKey.class,org/jboss/util/FastKey.class"
    />

    <jar jarfile="${build.dir}/client/stop.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/stop.mf"
         includes="org/jboss/jmx/interfaces/JMXAdaptor.class,org/jboss/jmx/client/Stop.class,org/jboss/jmx/server/JMXAdaptorImpl_Stub.class,org/jboss/ejb/CacheKey.class,org/jboss/util/FastKey.class"
    />

    <jar jarfile="${build.dir}/client/connector.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/connector.mf"
         includes="org/jboss/jmx/interfaces/JMXConnector.class,org/jboss/jmx/interfaces/JMXConnectorMBean.class,org/jboss/jmx/interfaces/RMIConnector.class,org/jboss/jmx/interfaces/RMINotificationListener.class,org/jboss/jmx/client/RMIClientConnectorImpl*.class,org/jboss/jmx/server/RMIConnectorImpl_Stub.class,org/jboss/jmx/server/ObjectHandler.class,org/jboss/jmx/client/ConnectorFactory*.class,org/jboss/util/Service.class,org/jboss/util/ServiceMBean*.class,org/jboss/logging/Log.class,org/jboss/logging/Log$$*.class,test/jboss/jmx/TestClient*.class"
    />
  </target>

  <!-- =================================================================== -->
  <!-- Create the EJX plugin                                               -->
  <!-- =================================================================== -->
  <target name="ejx" depends="xmlbeans">
    <jar jarfile="${build.lib.dir}/ext/ejxjboss.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/ejxjboss.mf"
         includes="org/jboss/ejb/deployment/**"
    />

    <jar jarfile="${build.lib.dir}/ext/ejxjaws.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/ejxjaws.mf"
         includes="org/jboss/ejb/plugins/jaws/deployment/**"
    />
  </target>

  <!-- =================================================================== -->
  <!-- Creates the binary structure                                        -->
  <!-- =================================================================== -->
  <target name="main" depends="jar,ejx">
     <mkdir dir="${dist.dir}"/>
     <mkdir dir="${dist.dir}/bin"/>
     <mkdir dir="${dist.dir}/lib/ext"/>
     <mkdir dir="${dist.dir}/db"/>
     <mkdir dir="${dist.dir}/db/hypersonic"/>
     <mkdir dir="${dist.dir}/deploy"/>
     <mkdir dir="${dist.dir}/log"/>
     <mkdir dir="${dist.dir}/db"/>
     <mkdir dir="${dist.dir}/conf"/>
     <mkdir dir="${dist.dir}/client"/>
     <mkdir dir="${dist.dir}/tmp"/>
     <mkdir dir="${dist.dir}/spyderMQ"/>

     <copy file="${etc.dir}/deploy.txt" tofile="${dist.dir}/deploy/deploy.txt"/>
     <copy file="${etc.dir}/hypersonic.txt" tofile="${dist.dir}/db/hypersonic/hypersonic.txt"/>

     <copy file="${lib.dir}/jmxri.jar" tofile="${dist.dir}/lib/jmxri.jar"/>
     <copy file="${etc.dir}/log.properties" tofile="${dist.dir}/log/log.properties"/>
     <copy file="${etc.dir}/db.properties" tofile="${dist.dir}/db/db.properties"/>
     <copy file="${etc.dir}/tmp.properties" tofile="${dist.dir}/tmp/tmp.properties"/>

     <copy todir="${dist.dir}/conf">
     	<fileset dir="${etc.dir}/conf"/>
     </copy>
     <copy todir="${dist.dir}/bin">
     	<fileset dir="${src.bin.dir}"/>
     </copy>
     <chmod file="${dist.dir}/bin/run.sh" perm="+x" />
     <copy todir="${dist.dir}/lib">
     	<fileset dir="${src.lib.dir}"
     			 includes="parser.jar,jaxp.jar,jaas.jar,jdbc2_0-stdext.jar"
     	/>
     </copy>
     <copy todir="${dist.dir}/lib/ext">
     	<fileset dir="${src.lib.dir}"
     			 excludes="parser.jar,jaxp.jar,jaas.jar,jdbc2_0-stdext.jar"
     	/>
     </copy>
     <copy todir="${dist.dir}/bin">
     	<fileset dir="${build.bin.dir}"/>
     </copy>
     <copy todir="${dist.dir}/lib/ext">
     	<fileset dir="${build.lib.dir}/ext"/>
     </copy>
     <copy todir="${dist.dir}/lib">
     	<fileset dir="${build.lib.dir}"/>
     </copy>
     <copy todir="${dist.dir}/client">
     	<fileset dir="${build.dir}/client"/>
     </copy>
     <copy todir="${dist.dir}/client">
     	<fileset dir="${src.client.dir}"/>
     </copy>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the API documentation                                       -->
  <!-- =================================================================== -->
  <target name="javadocs" depends="prepare">
    <mkdir dir="${build.javadocs.dir}"/>
    <javadoc packagenames="${packages}"
             sourcepath="${src.dir}"
             destdir="${build.javadocs.dir}"
             classpath="${classpath}"
             author="true"
             version="true"
             windowtitle="${Name} API"
             doctitle="${Name}"
             extdirs="${src.lib.dir}"
             bottom="Copyright &#169; 2000 The JBoss Organization. All Rights Reserved."
    />
  </target>

  <!-- =================================================================== -->
  <!-- Creates a stand-alone verifier package                              -->
  <!-- =================================================================== -->
  <target name="verifier" depends="init">
    <mkdir dir="${build.verifier.classes.dir}"/>
   
    <javac srcdir="${src.dir}"
           destdir="${build.verifier.classes.dir}"
           classpath="${verifier.classpath}"
           debug="on"
           deprecation="off"
           optimize="off"
           includes="org/jboss/verifier/**,
                     org/jboss/metadata/**,
                     org/jboss/ejb/DeploymentException.java"
    />
  
    <copy todir="${build.verifier.classes.dir}/org/jboss/verifier">
    	<fileset dir="${src.resources}/org/jboss/verifier"/>
    </copy>
    <copy file="${etc.dir}/conf/default/standardjboss.xml" tofile="${build.verifier.classes.dir}/standardjboss.xml"/>
    
    
    <mkdir dir="${dist.dir}/bin"/>
    <jar jarfile="${dist.dir}/bin/verifier.jar"
         basedir="${build.verifier.classes.dir}"
         manifest="${etc.dir}/verifier.mf"
         includes="org/jboss/metadata/**,
                   org/jboss/ejb/**,
                   org/jboss/verifier/**,
                   standardjboss.xml"
    />

  </target>
  
  <!-- =================================================================== -->
  <!-- Creates the distribution                                            -->
  <!-- =================================================================== -->
  <target name="dist" depends="main,jar,javadocs,verifier">
     <mkdir dir="${dist.dir}/docs"/>
     <mkdir dir="${dist.dir}/docs/api"/>
     <copy todir="${dist.dir}/docs">
     	<fileset dir="${docs.dir}"/>
     </copy>
     <copy todir="${dist.dir}/docs/api">
     	<fileset dir="${build.javadocs.dir}"/>
     </copy>

     <mkdir dir="${dist.dir}/src"/>
     <copy todir="${dist.dir}/src">
     	<fileset dir="${src.dir}"/>
     </copy>
  </target>

  <!-- =================================================================== -->
  <!-- Packages the distribution with ZIP                                  -->
  <!-- =================================================================== -->
  <target name="dist-zip" depends="dist">
    <zip zipfile="${Name}-${version}.zip" basedir="${dist.dir}" includes="**"/>
  </target>

  <!-- =================================================================== -->
  <!-- Packages the distribution with TAR-GZIP                             -->
  <!-- =================================================================== -->
  <target name="dist-tgz" depends="dist">
    <tar tarfile="${Name}-${version}.tar" basedir="${dist.dir}" includes="**"/>
    <gzip zipfile="${Name}-${version}.tar.gz" src="${Name}-${version}.tar"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the JMX Connector Server-Side distribution                  -->
  <!-- =================================================================== -->
  <target name="connector" depends="compile,compileTest">
    <jar jarfile="${build.dir}/client/rmiconnector.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/rmiconnector.mf"
         includes="org/jboss/jmx/interfaces/JMXConnector**,org/jboss/jmx/interfaces/RMI**,org/jboss/jmx/server/RMIConnector**,org/jboss/jmx/server/ObjectHandler.class,org/jboss/util/Service**,org/jboss/logging/Log.class,org/jboss/logging/Log$$**,test/jboss/jmx/TestServer**,org/jboss/naming/**"
    />
    <mkdir dir="${dist.dir}/external"/>
    <copy file="${build.dir}/client/rmiconnector.jar" tofile="${dist.dir}/external/rmiconnector.jar"/>
  </target>

  <!-- =================================================================== -->
  <!-- Cleans up generated stuff                                           -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Total cleanup                                                       -->
  <!-- =================================================================== -->
  <target name="total-clean" depends="clean">
    <delete file="${Name}-${version}.zip"/>
    <delete file="${Name}-${version}.tar"/>
    <delete file="${Name}-${version}.tar.gz"/>
  </target>
</project>

