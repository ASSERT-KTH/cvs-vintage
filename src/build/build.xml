<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- JBoss build file                                                       -->
<!-- ======================================================================= -->

<project name="JBoss" default="main" basedir="../..">
  <target name="init">
    <echo message="build.compiler = ${build.compiler}"/>
    <echo message="java.home = ${java.home}"/>
    <echo message="user.home = ${user.home}"/>
    <echo message="java.class.path = ${java.class.path}"/>
    <echo message=""/>

    <available property="jdk1.3+" classname="java.lang.StrictMath" />
  </target>

    <taskdef name="xmlbean" classname="com.dreambean.xmlbeans.ant.XMLBeans"/>

    <property name="Name" value="JBoss"/>
    <property name="name" value="jboss"/>
    <property name="version" value="2.3 BETA"/>

    <property name="bin.dir" value="${basedir}/bin"/>
    <property name="src.bin.dir" value="${basedir}/src/bin"/>
    <property name="src.dir" value="${basedir}/src/main"/>

    <property name="verifier.src.dir" value="${basedir}/src/main/org/jboss/verifier"/>

    <property name="src.client.dir" value="${basedir}/src/client"/>
    <property name="src.resources" value="${basedir}/src/resources"/>
    <property name="db.dir" value="${basedir}/db"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="lib.ext.dir" value="${lib.dir}/ext"/>
    <property name="etc.dir" value="${basedir}/src/etc"/>
    <property name="src.lib.dir" value="${basedir}/src/lib"/>
    <property name="docs.dir" value="${basedir}/src/docs"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.bin.dir" value="${build.dir}/bin"/>
    <property name="build.lib.dir" value="${build.dir}/lib"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    <property name="build.javadocs.dir" value="${build.dir}/docs/api"/>
    <property name="dist.dir" value="dist"/>
    <property name="external.dir" value="${dist.dir}/external"/>
    <property name="admin.dir" value="${dist.dir}/admin"/>
    <property name="admin.client.dir" value="${admin.dir}/client"/>
    <property name="admin.component.dir" value="${admin.dir}/components"/>
    <property name="admin.client.lib.dir" value="${admin.client.dir}/lib"/>

    <property name="packages" value="org.jboss.*"/>

    <property name="build.compiler" value="classic"/>

    <property name="build.util.classes.dir"     value="${build.dir}/util/classes/"/>
    <property name="build.metadata.classes.dir" value="${build.dir}/metadata/classes"/>
    <property name="build.verifier.classes.dir" value="${build.dir}/verifier/classes"/>
    <property name="build.deployer.classes.dir" value="${build.dir}/deployer/classes/"/>


    <!-- to use other xml parsers - add them to this list (yuck) - these jars get put into jboss' main classpath - from whence everything else is loaded.
	The xml.jar is only here to support the ejx editor app.
     -->
    <property name="bootstrap.jars"             value="crimson.jar,jaxp.jar,jaas.jar,jdbc2_0-stdext.jar,jboss-jaas.jar,xml.jar"/>

  <!-- Build classpath -->
  <path id="classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${src.lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
  </path>

  <!-- verifier classpath -->
  <path id="verifier.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${src.lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
  </path>

  <!-- Utility library build classpath -->
  <path id="util.classpath">
      <pathelement location="${build.util.classes.dir}"/>
      <pathelement location="${src.lib.dir}/ejb.jar"/>
      <pathelement location="${src.lib.dir}/log4j.jar"/>
      <pathelement location="${lib.dir}/jmxri.jar"/>
  </path>

  <!-- Deployer library build classpath -->
  <path id="deployer.classpath">
      <pathelement location="${build.deployer.classes.dir}"/>
      <pathelement location="${lib.dir}/jmxri.jar"/>
  </path>

  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init">
    <mkdir dir="${build.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the source code                                            -->
  <!-- =================================================================== -->
  <target name="compile" depends="prepare">
    <mkdir dir="${build.classes.dir}"/>
    <javac srcdir="${src.dir}"
           destdir="${build.classes.dir}"
           debug="on"
           deprecation="off"
           optimize="on"
           includes="org/**"
           excludes="**/activation/**, **/*BeanInfo.java"
    >
            <classpath refid="classpath"/>
    </javac>

    <rmic base="${build.classes.dir}"
          classname="org.jboss.jmx.server.JMXAdaptorImpl"
          stubVersion="1.2">
            <classpath refid="classpath"/>
    </rmic>

    <rmic base="${build.classes.dir}"
          classname="org.jboss.jmx.server.RMIConnectorImpl"
          stubVersion="1.2">
            <classpath refid="classpath"/>
    </rmic>

    <rmic base="${build.classes.dir}"
          classname="org.jboss.jmx.client.RMIClientConnectorImpl.Listener"
          stubVersion="1.2">
            <classpath refid="classpath"/>
    </rmic>

    <rmic base="${build.classes.dir}"
          classname="org.jboss.ejb.plugins.jrmp.server.JRMPContainerInvoker"
          stubVersion="1.2">
            <classpath refid="classpath"/>
    </rmic>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the source code for the Test Suite                         -->
  <!-- AS: At the moment only necessary for JMX Connector Test Client      -->
  <!-- =================================================================== -->
  <target name="compileTest" depends="compile">
    <javac srcdir="${src.dir}"
           destdir="${build.classes.dir}"
           debug="on"
           deprecation="off"
           optimize="off"
           includes="test/jboss/jmx/**"
           excludes=""
    >
            <classpath refid="classpath"/>
    </javac>
  </target>

  <!-- =================================================================== -->
  <!-- Create the EJX plugin BeanInfo classes                              -->
  <!-- =================================================================== -->
  <target name="xmlbeans" depends="compile">
    <xmlbean destdir="${build.classes.dir}"
             srcdir="${etc.dir}/beaninfo"
             includes="**"
    />
    <javac srcdir="${build.classes.dir}"
           destdir="${build.classes.dir}"
           debug="on"
           deprecation="off"
           optimize="off"
           includes="**/*BeanInfo.java"
    >
            <classpath refid="classpath"/>
    </javac>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the jar archives                                            -->
  <!-- =================================================================== -->
  <target name="jar" depends="xmlbeans,compileTest">
    <copy todir="${build.classes.dir}">
        <fileset dir="${src.resources}"/>
    </copy>

    <mkdir dir="${build.bin.dir}"/>
    <jar jarfile="${build.bin.dir}/run.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/run.mf"
         includes="org/jboss/Main*.*,org/jboss/security/SecurityAssociation.class,org/jboss/dependencies/**"
    />

    <mkdir dir="${build.lib.dir}/ext"/>
    <jar jarfile="${build.lib.dir}/ext/jboss.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/jboss.mf"
         includes="org/jboss/**"
         excludes="org/jboss/Main*,org/jboss/ejb/deployment/**,org/jboss/security/SecurityAssociation.class,org/jboss/security/SimplePrincipal.class,org/jboss/security/SimpleGroup.class,org/jboss/ejb/plugins/jaws/deployment/**,org/jboss/dependencies/**,org/jboss/security/**/*LoginModule.class,org/jboss/tm/GlobalId.class,org/jboss/jms/ra/META-INF*"
    />


    <mkdir dir="${build.dir}/client"/>
    <jar jarfile="${build.dir}/client/jboss-client.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/jboss-client.mf"
    >
        <include name="org/jboss/ejb/DeploymentException.class" />
        <include name="org/jboss/proxy/**" />
        <include name="org/jboss/ejb/plugins/jrmp/server/*Stub.class" />
        <include name="org/jboss/ejb/plugins/jrmp/interfaces/**" />
        <include name="org/jboss/ejb/plugins/jrmp12/interfaces/**" />
        <include name="org/jboss/ejb/plugins/jrmp13/interfaces/**" />
        <include name="org/jboss/ejb/CacheKey.class" />
        <include name="org/jboss/ejb/FastKey.class" />
        <include name="org/jboss/monitor/client/*.class" />
        <include name="org/jboss/tm/TransactionPropagationContextFactory.class" />
        <include name="org/jboss/tm/GlobalId.class" />
        <include name="org/jboss/util/SerializableEnumeration.class" />
    </jar>

    <jar jarfile="${build.dir}/client/deploy.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/deploy.mf"
         includes="org/jboss/jmx/interfaces/JMXAdaptor.class,org/jboss/jmx/client/Deployer.class,org/jboss/jmx/server/JMXAdaptorImpl_Stub.class,org/jboss/ejb/CacheKey.class,org/jboss/util/FastKey.class"
    />

    <jar jarfile="${build.dir}/client/stop.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/stop.mf"
         includes="org/jboss/jmx/interfaces/JMXAdaptor.class,org/jboss/jmx/client/Stop.class,org/jboss/jmx/server/JMXAdaptorImpl_Stub.class,org/jboss/ejb/CacheKey.class,org/jboss/util/FastKey.class"
    />

    <jar jarfile="${build.dir}/client/connector.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/connector.mf"
         includes="org/jboss/jmx/interfaces/JMXConnector.class,org/jboss/jmx/interfaces/JMXConnectorMBean.class,org/jboss/jmx/interfaces/RMIConnector.class,org/jboss/jmx/interfaces/RMINotificationListener.class,org/jboss/jmx/client/RMIClientConnectorImpl*.class,org/jboss/jmx/server/RMIConnectorImpl_Stub.class,org/jboss/jmx/server/ObjectHandler.class,org/jboss/jmx/client/ConnectorFactory*.class,org/jboss/util/Service.class,org/jboss/util/ServiceMBean*.class,org/jboss/logging/Log.class,org/jboss/logging/Log$$*.class,test/jboss/jmx/TestClient*.class"
    />

    <mkdir dir="${build.dir}/deploy/lib"/>
    <jar jarfile="${build.dir}/deploy/lib/jms-ra.rar">
       <fileset dir="${build.classes.dir}"
             includes="org/jboss/jms/ra/**"
	     excludes="org/jboss/jms/ra/META_INF*"

       />
       <fileset dir="${build.classes.dir}/org/jboss/jms/ra/"
             includes="META-INF/*"
       />
    </jar>	 
  </target>

  <!-- =================================================================== -->
  <!-- Create the EJX plugin                                               -->
  <!-- =================================================================== -->
  <target name="ejx" depends="xmlbeans">
    <jar jarfile="${build.lib.dir}/ext/ejxjboss.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/ejxjboss.mf"
         includes="org/jboss/ejb/deployment/**"
    />

    <jar jarfile="${build.lib.dir}/ext/ejxjaws.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/ejxjaws.mf"
         includes="org/jboss/ejb/plugins/jaws/deployment/**"
    />
  </target>

  <!-- =================================================================== -->
  <!-- Creates the binary structure                                        -->
  <!-- =================================================================== -->
  <target name="main" depends="jar,ejx">
     <mkdir dir="${dist.dir}"/>
     <mkdir dir="${dist.dir}/bin"/>
     <mkdir dir="${dist.dir}/lib/ext"/>
     <mkdir dir="${dist.dir}/db"/>
     <mkdir dir="${dist.dir}/db/hypersonic"/>
     <mkdir dir="${dist.dir}/deploy"/>
     <mkdir dir="${dist.dir}/deploy/lib"/>
     <mkdir dir="${dist.dir}/log"/>
     <mkdir dir="${dist.dir}/db"/>
     <mkdir dir="${dist.dir}/db/jbossmq"/>
     <mkdir dir="${dist.dir}/conf"/>
     <mkdir dir="${dist.dir}/client"/>
     <mkdir dir="${dist.dir}/tmp"/>
     <mkdir dir="${admin.client.lib.dir}"/>
     <mkdir dir="${admin.component.dir}"/>

     <copy file="${etc.dir}/deploy.txt" tofile="${dist.dir}/deploy/deploy.txt"/>
     <copy file="${etc.dir}/hypersonic.txt" tofile="${dist.dir}/db/hypersonic/hypersonic.txt"/>

     <copy file="${lib.dir}/jmxri.jar" tofile="${dist.dir}/lib/jmxri.jar"/>
     <copy file="${etc.dir}/log.properties" tofile="${dist.dir}/log/log.properties"/>
     <copy file="${etc.dir}/db.properties" tofile="${dist.dir}/db/db.properties"/>
     <copy file="${etc.dir}/tmp.properties" tofile="${dist.dir}/tmp/tmp.properties"/>

     <copy todir="${dist.dir}/conf">
        <fileset dir="${etc.dir}/conf"/>
     </copy>
     <copy todir="${dist.dir}/bin">
        <fileset dir="${src.bin.dir}"/>
     </copy>
     <chmod file="${dist.dir}/bin/run.sh" perm="+x" />
     <copy todir="${dist.dir}/lib">
        <fileset dir="${src.lib.dir}"
                 includes="${bootstrap.jars}"
        />
     </copy>
     <copy todir="${dist.dir}/lib/ext">
        <fileset dir="${src.lib.dir}"
                 excludes="${bootstrap.jars}"
        />
     </copy>
     <copy todir="${dist.dir}/bin">
        <fileset dir="${build.bin.dir}"/>
     </copy>
     <copy todir="${dist.dir}/lib/ext">
        <fileset dir="${build.lib.dir}/ext"/>
     </copy>
     <copy todir="${dist.dir}/lib">
        <fileset dir="${build.lib.dir}"/>
     </copy>
     <copy todir="${dist.dir}/client">
        <fileset dir="${build.dir}/client"/>
     </copy>
     <copy todir="${dist.dir}/client">
        <fileset dir="${src.client.dir}"
                 excludes = "admin"
        />
     </copy>
     <copy todir="${admin.dir}"
           file="${etc.dir}/monitor.bat"/>
     <copy todir="${admin.client.dir}">
       <fileset dir="${src.client.dir}/admin"/>
     </copy>
     <copy todir="${admin.client.lib.dir}">
       <fileset dir="${src.client.dir}/admin/lib"/>
       <fileset dir="${src.lib.dir}"
                includes="ejb.jar,jms.jar,jta-spec1_0_1.jar,jaas.jar"/>
       <fileset dir="${src.client.dir}"
                includes="jnp-client.jar,jboss-client.jar,jbossmq-client.jar,jbosssx-client.jar"/> 
     </copy>
     <copy todir="${dist.dir}/deploy/lib">
        <fileset dir="${etc.dir}/deploy"/>
     </copy>

      <copy todir="${dist.dir}/deploy/lib"
           file="${build.dir}/deploy/lib/jms-ra.rar"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the API documentation                                       -->
  <!-- =================================================================== -->
  <target name="javadocs" depends="prepare">
    <mkdir dir="${build.javadocs.dir}"/>
    <javadoc packagenames="${packages}"
             sourcepath="${src.dir}"
             destdir="${build.javadocs.dir}"
             author="true"
             version="true"
             windowtitle="${Name} API"
             doctitle="${Name}"
             extdirs="${src.lib.dir}"
             bottom="Copyright &#169; 2000 The JBoss Organization. All Rights Reserved."
    >
            <classpath refid="classpath"/>
    </javadoc>
  </target>

  <!-- =================================================================== -->
  <!-- Creates a stand-alone verifier package                              -->
  <!-- =================================================================== -->
  <target name="verifier" depends="init, metadata">
    <mkdir dir="${build.verifier.classes.dir}"/>

    <javac srcdir="${src.dir}"
           destdir="${build.verifier.classes.dir}"
           debug="on"
           deprecation="off"
           optimize="off"
           includes="org/jboss/verifier/**"
    >
            <classpath refid="verifier.classpath"/>
    </javac>

    <copy todir="${build.verifier.classes.dir}/org/jboss/verifier">
        <fileset dir="${src.resources}/org/jboss/verifier"/>
    </copy>
<!--
    <copy file="${etc.dir}/conf/default/standardjboss.xml" tofile="${build.verifier.classes.dir}/standardjboss.xml"/>
-->

    <mkdir dir="${dist.dir}/bin"/>
    <jar jarfile="${dist.dir}/bin/verifier.jar"
         basedir="${build.verifier.classes.dir}"
         manifest="${etc.dir}/verifier.mf"
         includes="org/jboss/verifier/**"
    />

  </target>

  <!-- =================================================================== -->
  <!-- Creates the distribution                                            -->
  <!-- =================================================================== -->
  <target name="dist" depends="main,jar,javadocs,verifier,metadata,util">
     <mkdir dir="${dist.dir}/docs"/>
     <mkdir dir="${dist.dir}/docs/api"/>
     <copy todir="${dist.dir}/docs">
        <fileset dir="${docs.dir}"/>
     </copy>
     <copy todir="${dist.dir}/docs/api">
        <fileset dir="${build.javadocs.dir}"/>
     </copy>

     <mkdir dir="${dist.dir}/src"/>
     <copy todir="${dist.dir}/src">
        <fileset dir="${src.dir}"/>
     </copy>
    <fixcrlf srcdir="${dist.dir}/bin" cr="remove" eof="remove"
      includes="*.sh" />
    <fixcrlf srcdir="${dist.dir}/bin" cr="add" eof="remove"
      includes="*.bat" />
  </target>

  <!-- =================================================================== -->
  <!-- Packages the distribution with ZIP                                  -->
  <!-- =================================================================== -->
  <target name="dist-zip" depends="dist">
    <mkdir dir="zip/${Name}-${version}" />
    <copy todir="zip/${Name}-${version}">
      <fileset dir="${dist.dir}"/>^M
    </copy>
    <zip zipfile="${Name}-${version}.zip" basedir="zip"/>
  </target>

  <!-- =================================================================== -->
  <!-- Packages the distribution with TAR-GZIP                             -->
  <!-- =================================================================== -->
  <target name="dist-tgz" depends="dist">
    <mkdir dir="tar/${Name}-${version}" />
    <copy todir="tar/${Name}-${version}">
      <fileset dir="${dist.dir}"/>
    </copy>
    <tar tarfile="${Name}-${version}.tar" basedir="tar" />
    <gzip zipfile="${Name}-${version}.tar.gz" src="${Name}-${version}.tar"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the JMX Connector Server-Side distribution                  -->
  <!-- =================================================================== -->
  <target name="connector" depends="compile,compileTest">
    <jar jarfile="${build.dir}/client/rmiconnector.jar"
         basedir="${build.classes.dir}"
         manifest="${etc.dir}/rmiconnector.mf"
         includes="org/jboss/jmx/interfaces/JMXConnector**,org/jboss/jmx/interfaces/RMI**,org/jboss/jmx/server/RMIConnector**,org/jboss/jmx/server/ObjectHandler.class,org/jboss/util/Service**,org/jboss/logging/Log.class,org/jboss/logging/Log$$**,test/jboss/jmx/TestServer**,org/jboss/naming/**"
    />
    <mkdir dir="${dist.dir}/external"/>
    <copy file="${build.dir}/client/rmiconnector.jar" tofile="${dist.dir}/external/rmiconnector.jar"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the JBoss Metadata lib.                                     -->
  <!-- =================================================================== -->
  <target name="metadata" depends="init">

    <mkdir dir="${build.metadata.classes.dir}"/>
   
    <javac srcdir="${src.dir}"
           destdir="${build.metadata.classes.dir}"
           debug="on"
           deprecation="off"
           optimize="off"
           includes="org/jboss/metadata/**,
                     org/jboss/ejb/DeploymentException.java"
    >
            <classpath refid="verifier.classpath"/>
    </javac>
  
    <copy file="${etc.dir}/conf/default/standardjboss.xml" tofile="${build.metadata.classes.dir}/standardjboss.xml"/>
    
    <mkdir dir="${external.dir}"/>
    <jar jarfile="${dist.dir}/external/metadata.jar"
         basedir="${build.metadata.classes.dir}"
         includes="org/jboss/metadata/**,
                   org/jboss/ejb/**,
                   standardjboss.xml"
    />
  </target>

  
  <!-- =================================================================== -->
  <!-- Creates the JBoss Util lib.                                         -->
  <!-- =================================================================== -->
  <target name="util" depends="init">

    <mkdir dir="${build.util.classes.dir}"/>
   
    <javac srcdir="${src.dir}"
           destdir="${build.util.classes.dir}"
           classpathref="util.classpath"
           debug="on"
           deprecation="off"
           optimize="off"
           includes="org/jboss/util/Service.java,
                     org/jboss/util/ServiceMBean.java,
                     org/jboss/util/ServiceMBeanSupport.java,
                     org/jboss/util/MBeanProxy.java,
                     org/jboss/proxy/*.java,
                     org/jboss/logging/Log.java,
                     org/jboss/logging/LogWriter.java,
                     org/jboss/monitor/MetricsConstants.java"
    />
    
    <mkdir dir="${external.dir}"/>
    <jar jarfile="${dist.dir}/external/jboss-util.jar"
         basedir="${build.util.classes.dir}"
         includes="org/jboss/util/**,
                   org/jboss/logging/**,
                   org/jboss/monitor/**"
    />
  </target>
    
  <!-- =================================================================== -->
  <!-- Creates the JBoss Deployer lib.                                     -->
  <!--                                                                     -->
  <!-- This is needed (in addition to jboss-util.jar) by modules that      -->
  <!-- implement a deployer.                                               -->
  <!-- =================================================================== -->
  <target name="jboss-deployer" depends="init">

    <mkdir dir="${build.deployer.classes.dir}"/>
   
    <javac srcdir="${src.dir}"
           destdir="${build.deployer.classes.dir}"
           classpathref="deployer.classpath"
           debug="on"
           deprecation="off"
           optimize="off"
           includes="org/jboss/deployment/DeployerMBean.java,
                     org/jboss/deployment/DeployerMBeanSupport.java,
                     org/jboss/deployment/DeploymentException.java"
    />
    
    <mkdir dir="${external.dir}"/>
    <jar jarfile="${dist.dir}/external/jboss-deployer.jar"
         basedir="${build.deployer.classes.dir}"
         includes="org/jboss/deployment/**"
    />
  </target>
    
  <!-- =================================================================== -->
  <!-- Creates the JBoss base lib.  - used by jbossmq                      -->
  <!-- =================================================================== -->
  <target name="jboss.base" depends="init">

    <mkdir dir="${build.util.classes.dir}"/>
   
    <javac srcdir="${src.dir}"
           destdir="${build.util.classes.dir}"
           debug="on"
           deprecation="off"
           optimize="off"
           includes="org/jboss/configuration/**/*.java,
                     org/jboss/util/**/*.java,
                     org/jboss/naming/**/*.java,
                     org/jboss/logging/**/*.java"
    >
            <classpath refid="classpath"/>
    </javac>
    
    <mkdir dir="${external.dir}"/>
    
    <jar jarfile="${dist.dir}/external/jboss_base.jar"
         basedir="${build.util.classes.dir}"
         includes="org/jboss/util/**,
                   org/jboss/logging/**,
                   org/jboss/configuration/**,
                   org/jboss/naming/**"
    />
  </target>
    
  <!-- =================================================================== -->
  <!-- Cleans up generated stuff                                           -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Total cleanup                                                       -->
  <!-- =================================================================== -->
  <target name="total-clean" depends="clean">
    <delete file="${Name}-${version}.zip"/>
    <delete file="${Name}-${version}.tar"/>
    <delete file="${Name}-${version}.tar.gz"/>
  </target>
</project>

