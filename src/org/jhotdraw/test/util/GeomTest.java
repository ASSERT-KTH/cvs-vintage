package CH.ifa.draw.test.util;

import junit.framework.TestCase;
// JUnitDoclet begin import
import CH.ifa.draw.util.Geom;
// JUnitDoclet end import

/*
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/


// JUnitDoclet begin javadoc_class
/**
* TestCase GeomTest is generated by
* JUnitDoclet to hold the tests for Geom.
* @see CH.ifa.draw.util.Geom
*/
// JUnitDoclet end javadoc_class
public class GeomTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  // instance variables, helper methods, ... put them in this marker
  CH.ifa.draw.util.Geom geom = null;
  // JUnitDoclet end class
  
  /**
  * Constructor GeomTest is
  * basically calling the inherited constructor to
  * initiate the TestCase for use by the Framework.
  */
  public GeomTest(String name) {
    // JUnitDoclet begin method GeomTest
    super(name);
    // JUnitDoclet end method GeomTest
  }
  
  /**
  * Factory method for instances of the class to be tested.
  */
  public CH.ifa.draw.util.Geom createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
	// Geom has static methods and cannot be instantiated.
    return null;
    // JUnitDoclet end method testcase.createInstance
  }
  
  /**
  * Method setUp is overwriting the framework method to
  * prepare an instance of this TestCase for a single test.
  * It's called from the JUnit framework only.
  */
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    geom = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  /**
  * Method tearDown is overwriting the framework method to
  * clean up after each single test of this TestCase.
  * It's called from the JUnit framework only.
  */
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    geom = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  // JUnitDoclet begin javadoc_method lineContainsPoint()
  /**
  * Method testLineContainsPoint is testing lineContainsPoint
  * @see CH.ifa.draw.util.Geom#lineContainsPoint(int, int, int, int, int, int)
  */
  // JUnitDoclet end javadoc_method lineContainsPoint()
  public void testLineContainsPoint() throws Exception {
    // JUnitDoclet begin method lineContainsPoint
    // JUnitDoclet end method lineContainsPoint
  }
  
  // JUnitDoclet begin javadoc_method direction()
  /**
  * Method testDirection is testing direction
  * @see CH.ifa.draw.util.Geom#direction(int, int, int, int)
  */
  // JUnitDoclet end javadoc_method direction()
  public void testDirection() throws Exception {
    // JUnitDoclet begin method direction
    // JUnitDoclet end method direction
  }
  
  // JUnitDoclet begin javadoc_method south()
  /**
  * Method testSouth is testing south
  * @see CH.ifa.draw.util.Geom#south(java.awt.Rectangle)
  */
  // JUnitDoclet end javadoc_method south()
  public void testSouth() throws Exception {
    // JUnitDoclet begin method south
    // JUnitDoclet end method south
  }
  
  // JUnitDoclet begin javadoc_method center()
  /**
  * Method testCenter is testing center
  * @see CH.ifa.draw.util.Geom#center(java.awt.Rectangle)
  */
  // JUnitDoclet end javadoc_method center()
  public void testCenter() throws Exception {
    // JUnitDoclet begin method center
    // JUnitDoclet end method center
  }
  
  // JUnitDoclet begin javadoc_method west()
  /**
  * Method testWest is testing west
  * @see CH.ifa.draw.util.Geom#west(java.awt.Rectangle)
  */
  // JUnitDoclet end javadoc_method west()
  public void testWest() throws Exception {
    // JUnitDoclet begin method west
    // JUnitDoclet end method west
  }
  
  // JUnitDoclet begin javadoc_method east()
  /**
  * Method testEast is testing east
  * @see CH.ifa.draw.util.Geom#east(java.awt.Rectangle)
  */
  // JUnitDoclet end javadoc_method east()
  public void testEast() throws Exception {
    // JUnitDoclet begin method east
    // JUnitDoclet end method east
  }
  
  // JUnitDoclet begin javadoc_method north()
  /**
  * Method testNorth is testing north
  * @see CH.ifa.draw.util.Geom#north(java.awt.Rectangle)
  */
  // JUnitDoclet end javadoc_method north()
  public void testNorth() throws Exception {
    // JUnitDoclet begin method north
    // JUnitDoclet end method north
  }
  
  // JUnitDoclet begin javadoc_method corner()
  /**
  * Method testCorner is testing corner
  * @see CH.ifa.draw.util.Geom#corner(java.awt.Rectangle)
  */
  // JUnitDoclet end javadoc_method corner()
  public void testCorner() throws Exception {
    // JUnitDoclet begin method corner
    // JUnitDoclet end method corner
  }
  
  // JUnitDoclet begin javadoc_method topLeftCorner()
  /**
  * Method testTopLeftCorner is testing topLeftCorner
  * @see CH.ifa.draw.util.Geom#topLeftCorner(java.awt.Rectangle)
  */
  // JUnitDoclet end javadoc_method topLeftCorner()
  public void testTopLeftCorner() throws Exception {
    // JUnitDoclet begin method topLeftCorner
    // JUnitDoclet end method topLeftCorner
  }
  
  // JUnitDoclet begin javadoc_method topRightCorner()
  /**
  * Method testTopRightCorner is testing topRightCorner
  * @see CH.ifa.draw.util.Geom#topRightCorner(java.awt.Rectangle)
  */
  // JUnitDoclet end javadoc_method topRightCorner()
  public void testTopRightCorner() throws Exception {
    // JUnitDoclet begin method topRightCorner
    // JUnitDoclet end method topRightCorner
  }
  
  // JUnitDoclet begin javadoc_method bottomLeftCorner()
  /**
  * Method testBottomLeftCorner is testing bottomLeftCorner
  * @see CH.ifa.draw.util.Geom#bottomLeftCorner(java.awt.Rectangle)
  */
  // JUnitDoclet end javadoc_method bottomLeftCorner()
  public void testBottomLeftCorner() throws Exception {
    // JUnitDoclet begin method bottomLeftCorner
    // JUnitDoclet end method bottomLeftCorner
  }
  
  // JUnitDoclet begin javadoc_method bottomRightCorner()
  /**
  * Method testBottomRightCorner is testing bottomRightCorner
  * @see CH.ifa.draw.util.Geom#bottomRightCorner(java.awt.Rectangle)
  */
  // JUnitDoclet end javadoc_method bottomRightCorner()
  public void testBottomRightCorner() throws Exception {
    // JUnitDoclet begin method bottomRightCorner
    // JUnitDoclet end method bottomRightCorner
  }
  
  // JUnitDoclet begin javadoc_method range()
  /**
  * Method testRange is testing range
  * @see CH.ifa.draw.util.Geom#range(int, int, int)
  */
  // JUnitDoclet end javadoc_method range()
  public void testRange() throws Exception {
    // JUnitDoclet begin method range
    // JUnitDoclet end method range
  }
  
  // JUnitDoclet begin javadoc_method length2()
  /**
  * Method testLength2 is testing length2
  * @see CH.ifa.draw.util.Geom#length2(int, int, int, int)
  */
  // JUnitDoclet end javadoc_method length2()
  public void testLength2() throws Exception {
    // JUnitDoclet begin method length2
    // JUnitDoclet end method length2
  }
  
  // JUnitDoclet begin javadoc_method length()
  /**
  * Method testLength is testing length
  * @see CH.ifa.draw.util.Geom#length(int, int, int, int)
  */
  // JUnitDoclet end javadoc_method length()
  public void testLength() throws Exception {
    // JUnitDoclet begin method length
    // JUnitDoclet end method length
  }
  
  // JUnitDoclet begin javadoc_method pointToAngle()
  /**
  * Method testPointToAngle is testing pointToAngle
  * @see CH.ifa.draw.util.Geom#pointToAngle(java.awt.Rectangle, java.awt.Point)
  */
  // JUnitDoclet end javadoc_method pointToAngle()
  public void testPointToAngle() throws Exception {
    // JUnitDoclet begin method pointToAngle
    // JUnitDoclet end method pointToAngle
  }
  
  // JUnitDoclet begin javadoc_method angleToPoint()
  /**
  * Method testAngleToPoint is testing angleToPoint
  * @see CH.ifa.draw.util.Geom#angleToPoint(java.awt.Rectangle, double)
  */
  // JUnitDoclet end javadoc_method angleToPoint()
  public void testAngleToPoint() throws Exception {
    // JUnitDoclet begin method angleToPoint
    // JUnitDoclet end method angleToPoint
  }
  
  // JUnitDoclet begin javadoc_method polarToPoint()
  /**
  * Method testPolarToPoint is testing polarToPoint
  * @see CH.ifa.draw.util.Geom#polarToPoint(double, double, double)
  */
  // JUnitDoclet end javadoc_method polarToPoint()
  public void testPolarToPoint() throws Exception {
    // JUnitDoclet begin method polarToPoint
    // JUnitDoclet end method polarToPoint
  }
  
  // JUnitDoclet begin javadoc_method ovalAngleToPoint()
  /**
  * Method testOvalAngleToPoint is testing ovalAngleToPoint
  * @see CH.ifa.draw.util.Geom#ovalAngleToPoint(java.awt.Rectangle, double)
  */
  // JUnitDoclet end javadoc_method ovalAngleToPoint()
  public void testOvalAngleToPoint() throws Exception {
    // JUnitDoclet begin method ovalAngleToPoint
    // JUnitDoclet end method ovalAngleToPoint
  }
  
  // JUnitDoclet begin javadoc_method intersect()
  /**
  * Method testIntersect is testing intersect
  * @see CH.ifa.draw.util.Geom#intersect(int, int, int, int, int, int, int, int)
  */
  // JUnitDoclet end javadoc_method intersect()
  public void testIntersect() throws Exception {
    // JUnitDoclet begin method intersect
    // JUnitDoclet end method intersect
  }
  
  // JUnitDoclet begin javadoc_method distanceFromLine()
  /**
  * Method testDistanceFromLine is testing distanceFromLine
  * @see CH.ifa.draw.util.Geom#distanceFromLine(int, int, int, int, int, int)
  */
  // JUnitDoclet end javadoc_method distanceFromLine()
  public void testDistanceFromLine() throws Exception {
    // JUnitDoclet begin method distanceFromLine
    // JUnitDoclet end method distanceFromLine
  }
  
  // JUnitDoclet begin javadoc_method distanceFromLine2D()
  /**
  * Method testDistanceFromLine2D is testing distanceFromLine2D
  * @see CH.ifa.draw.util.Geom#distanceFromLine2D(int, int, int, int, int, int)
  */
  // JUnitDoclet end javadoc_method distanceFromLine2D()
  public void testDistanceFromLine2D() throws Exception {
    // JUnitDoclet begin method distanceFromLine2D
    // JUnitDoclet end method distanceFromLine2D
  }
  
  
  
  // JUnitDoclet begin javadoc_method testVault
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * <b>Method testVault is supposed to be empty.</b>
  */
  // JUnitDoclet end javadoc_method testVault
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  /**
  * Method to execute the TestCase from command line
  * using JUnit's textui.TestRunner .
  */
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(GeomTest.class);
    // JUnitDoclet end method testcase.main
  }
}
