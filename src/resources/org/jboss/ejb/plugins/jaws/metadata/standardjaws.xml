<?xml version="1.0" encoding="UTF-8"?>
<jaws>
    <datasource>Hypersonic</datasource>
    <type-mapping>Hypersonic SQL</type-mapping>

    <default-entity>
       <create-table>true</create-table>
       <remove-table>false</remove-table>
       <tuned-updates>false</tuned-updates>
       <read-only>false</read-only>
       <time-out>300</time-out>
    </default-entity>

    <type-mappings>
        <type-mapping>
            <name>Oracle8</name>
            <mapping>
                <java-type>java.lang.Boolean</java-type>
                <jdbc-type>BIT</jdbc-type>
                <sql-type>NUMBER(1)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Byte</java-type>
                <jdbc-type>NUMERIC</jdbc-type>
                <sql-type>NUMBER(3)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>NUMERIC</jdbc-type>
                <sql-type>NUMBER(5)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <sql-type>NUMBER(10)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <sql-type>NUMBER(19)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Float</java-type>
                <jdbc-type>REAL</jdbc-type>
                <sql-type>NUMBER(38,7)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <sql-type>NUMBER(38,15)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Character</java-type>
                <jdbc-type>CHAR</jdbc-type>
                <sql-type>CHAR</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <sql-type>VARCHAR(255)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.sql.Date</java-type>
                <jdbc-type>DATE</jdbc-type>
                <sql-type>DATE</sql-type>
            </mapping>
            <mapping>
                <java-type>java.sql.Time</java-type>
                <jdbc-type>TIME</jdbc-type>
                <sql-type>DATE</sql-type>
            </mapping>
            <mapping>
                <java-type>java.sql.Timestamp</java-type>
                <jdbc-type>TIMESTAMP</jdbc-type>
                <sql-type>DATE</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Object</java-type>
                <jdbc-type>JAVA_OBJECT</jdbc-type>
                <sql-type>BLOB</sql-type>
            </mapping>
        </type-mapping>
        <type-mapping>
            <name>Oracle7</name>
            <mapping>
                <java-type>java.lang.Boolean</java-type>
                <jdbc-type>BIT</jdbc-type>
                <sql-type>NUMBER(1)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Byte</java-type>
                <jdbc-type>NUMERIC</jdbc-type>
                <sql-type>NUMBER(3)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>NUMERIC</jdbc-type>
                <sql-type>NUMBER(5)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <sql-type>NUMBER(10)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <sql-type>NUMBER(19)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Float</java-type>
                <jdbc-type>REAL</jdbc-type>
                <sql-type>NUMBER(38,7)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <sql-type>NUMBER(38,15)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Character</java-type>
                <jdbc-type>CHAR</jdbc-type>
                <sql-type>CHAR</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <sql-type>VARCHAR(255)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.sql.Date</java-type>
                <jdbc-type>DATE</jdbc-type>
                <sql-type>DATE</sql-type>
            </mapping>
            <mapping>
                <java-type>java.sql.Time</java-type>
                <jdbc-type>TIME</jdbc-type>
                <sql-type>DATE</sql-type>
            </mapping>
            <mapping>
                <java-type>java.sql.Timestamp</java-type>
                <jdbc-type>TIMESTAMP</jdbc-type>
                <sql-type>DATE</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Object</java-type>
                <jdbc-type>JAVA_OBJECT</jdbc-type>
                <sql-type>LONG RAW</sql-type>
            </mapping>
        </type-mapping>
        <type-mapping>
            <name>Sybase</name>
            <mapping>
                <java-type>java.lang.Boolean</java-type>
                <jdbc-type>BIT</jdbc-type>
                <sql-type>BIT</sql-type>
            </mapping>
<!-- Current Sybase JDBC drivers (jConnect 5.2) don't support 
     byte or short.  Unfortunately they'll be serialized.
            <mapping>
                <java-type>java.lang.Byte</java-type>
                <jdbc-type>TINYINT</jdbc-type>
                <sql-type>TINYINT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>SMALLINT</jdbc-type>
                <sql-type>SMALLINT</sql-type>
            </mapping>
-->
            <mapping>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <sql-type>INTEGER</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>NUMERIC</jdbc-type>
                <sql-type>NUMERIC(38,0)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Float</java-type>
                <jdbc-type>REAL</jdbc-type>
                <sql-type>REAL</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <sql-type>DOUBLE PRECISION</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Character</java-type>
                <jdbc-type>CHAR</jdbc-type>
                <sql-type>CHAR</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <sql-type>VARCHAR(255)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.sql.Date</java-type>
                <jdbc-type>DATE</jdbc-type>
                <sql-type>DATETIME</sql-type>
            </mapping>
            <mapping>
                <java-type>java.sql.Time</java-type>
                <jdbc-type>TIME</jdbc-type>
                <sql-type>SMALLDATETIME</sql-type>
            </mapping>
            <mapping>
                <java-type>java.sql.Timestamp</java-type>
                <jdbc-type>TIMESTAMP</jdbc-type>
                <sql-type>DATETIME</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Object</java-type>
                <jdbc-type>JAVA_OBJECT</jdbc-type>
                <sql-type>IMAGE</sql-type>
            </mapping>
        </type-mapping>
        <type-mapping>
            <name>PostgreSQL</name>
            <mapping>
                <java-type>java.lang.Boolean</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <sql-type>VARCHAR(5)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <sql-type>INTEGER</sql-type>
            </mapping>
            <mapping>
                <java-type>java.util.Date</java-type>
                <jdbc-type>DATE</jdbc-type>
                <sql-type>DATE</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <sql-type>FLOAT8</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Character</java-type>
                <jdbc-type>CHAR</jdbc-type>
                <sql-type>CHAR</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Object</java-type>
                <jdbc-type>JAVA_OBJECT</jdbc-type>
                <sql-type>OID</sql-type>
            </mapping>
            <mapping>
                <java-type>java.sql.TimeStamp</java-type>
                <jdbc-type>TIMESTAMP</jdbc-type>
                <sql-type>TIMESTAMP</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <sql-type>INTEGER</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Byte</java-type>
                <jdbc-type>TINYINT</jdbc-type>
                <sql-type>INT2</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Float</java-type>
                <jdbc-type>FLOAT</jdbc-type>
                <sql-type>FLOAT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <sql-type>VARCHAR(256)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <sql-type>INT4</sql-type>
            </mapping>
        </type-mapping>
        <type-mapping>
            <name>InstantDB</name>
            <mapping>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <sql-type>INTEGER</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <sql-type>INTEGER</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <sql-type>VARCHAR(256)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Boolean</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <sql-type>VARCHAR(5)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Float</java-type>
                <jdbc-type>FLOAT</jdbc-type>
                <sql-type>FLOAT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <sql-type>DOUBLE</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Character</java-type>
                <jdbc-type>CHAR</jdbc-type>
                <sql-type>SMALLCHAR</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Byte</java-type>
                <jdbc-type>TINYINT</jdbc-type>
                <sql-type>TINYINT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.util.Date</java-type>
                <jdbc-type>DATE</jdbc-type>
                <sql-type>DATE</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <sql-type>LONG</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Object</java-type>
                <jdbc-type>LONGVARBINARY</jdbc-type>
                <sql-type>LONGVARBINARY</sql-type>
            </mapping>
            <mapping>
                <java-type>java.sql.TimeStamp</java-type>
                <jdbc-type>DATE</jdbc-type>
                <sql-type>DATE</sql-type>
            </mapping>
        </type-mapping>
        <type-mapping>
            <name>Hypersonic SQL</name>
            <mapping>
                <java-type>java.lang.Byte</java-type>
                <jdbc-type>SMALLINT</jdbc-type>
                <sql-type>SMALLINT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.util.Date</java-type>
                <jdbc-type>DATE</jdbc-type>
                <sql-type>DATE</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Boolean</java-type>
                <jdbc-type>BIT</jdbc-type>
                <sql-type>BIT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <sql-type>INTEGER</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Object</java-type>
                <jdbc-type>JAVA_OBJECT</jdbc-type>
                <sql-type>OBJECT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>SMALLINT</jdbc-type>
                <sql-type>SMALLINT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Character</java-type>
                <jdbc-type>CHAR</jdbc-type>
                <sql-type>CHAR</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <sql-type>VARCHAR(256)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.sql.TimeStamp</java-type>
                <jdbc-type>TIMESTAMP</jdbc-type>
                <sql-type>TIMESTAMP</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Float</java-type>
                <jdbc-type>REAL</jdbc-type>
                <sql-type>REAL</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <sql-type>BIGINT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <sql-type>DOUBLE</sql-type>
            </mapping>
        </type-mapping>
        <type-mapping>
            <name>PointBase</name>
            <mapping>
                <java-type>java.lang.Character</java-type>
                <jdbc-type>CHAR</jdbc-type>
                <sql-type>CHAR</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>SMALLINT</jdbc-type>
                <sql-type>SMALLINT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <sql-type>INTEGER</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <sql-type>FLOAT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Float</java-type>
                <jdbc-type>FLOAT</jdbc-type>
                <sql-type>FLOAT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Boolean</java-type>
                <jdbc-type>BINARY</jdbc-type>
                <sql-type>BOOLEAN</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <sql-type>VARCHAR(256)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Byte</java-type>
                <jdbc-type>SMALLINT</jdbc-type>
                <sql-type>SMALLINT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Object</java-type>
                <jdbc-type>BLOB</jdbc-type>
                <sql-type>BLOB</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <sql-type>INTEGER</sql-type>
            </mapping>
        </type-mapping>
        <type-mapping>
            <name>SOLID</name>
            <mapping>
                <java-type>java.lang.Character</java-type>
                <jdbc-type>CHAR</jdbc-type>
                <sql-type>CHAR</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Byte</java-type>
                <jdbc-type>TINYINT</jdbc-type>
                <sql-type>TINYINT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <sql-type>INTEGER</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <sql-type>DOUBLE</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Object</java-type>
                <jdbc-type>BLOB</jdbc-type>
                <sql-type>BLOB</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <sql-type>VARCHAR(256)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <sql-type>INTEGER</sql-type>
            </mapping>
            <mapping>
                <java-type>java.sql.TimeStamp</java-type>
                <jdbc-type>TIMESTAMP</jdbc-type>
                <sql-type>TIMESTAMP</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Boolean</java-type>
                <jdbc-type>BIT</jdbc-type>
                <sql-type>BIT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Float</java-type>
                <jdbc-type>FLOAT</jdbc-type>
                <sql-type>FLOAT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <sql-type>BIGINT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.util.Date</java-type>
                <jdbc-type>DATE</jdbc-type>
                <sql-type>DATE</sql-type>
            </mapping>
        </type-mapping>
        <type-mapping>
            <name>mySQL</name>
            <mapping>
                <java-type>java.lang.Float</java-type>
                <jdbc-type>FLOAT</jdbc-type>
                <sql-type>FLOAT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <sql-type>DOUBLE</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Boolean</java-type>
                <jdbc-type>TINYINT</jdbc-type>
                <sql-type>TINYINT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Object</java-type>
                <jdbc-type>BLOB</jdbc-type>
                <sql-type>BLOB</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <sql-type>INTEGER</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <sql-type>INTEGER</sql-type>
            </mapping>
            <mapping>
                <java-type>java.sql.TimeStamp</java-type>
                <jdbc-type>TIMESTAMP</jdbc-type>
                <sql-type>TIMESTAMP</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Byte</java-type>
                <jdbc-type>TINYINT</jdbc-type>
                <sql-type>TINYINT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Character</java-type>
                <jdbc-type>CHAR</jdbc-type>
                <sql-type>CHAR</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <sql-type>BIGINT</sql-type>
            </mapping>
            <mapping>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <sql-type>VARCHAR(256)</sql-type>
            </mapping>
            <mapping>
                <java-type>java.util.Date</java-type>
                <jdbc-type>DATE</jdbc-type>
                <sql-type>DATE</sql-type>
            </mapping>
        </type-mapping>
        <type-mapping>
          <name>MS SQLSERVER</name>
          <mapping>
              <java-type>java.lang.Integer</java-type>
              <jdbc-type>INTEGER</jdbc-type>
              <sql-type>INTEGER</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Character</java-type>
              <jdbc-type>CHAR</jdbc-type>
              <sql-type>CHAR</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Short</java-type>
              <jdbc-type>SMALLINT</jdbc-type>
              <sql-type>SMALLINT</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Double</java-type>
              <jdbc-type>DOUBLE</jdbc-type>
              <sql-type>DOUBLE</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Long</java-type>
              <jdbc-type>DECIMAL</jdbc-type>
              <sql-type>DECIMAL(20)</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.String</java-type>
              <jdbc-type>VARCHAR</jdbc-type>
              <sql-type>VARCHAR(256)</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Object</java-type>
              <jdbc-type>JAVA_OBJECT</jdbc-type>
              <sql-type>IMAGE</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Byte</java-type>
              <jdbc-type>TINYINT</jdbc-type>
              <sql-type>TINYINT</sql-type>
          </mapping>
          <mapping>
              <java-type>java.sql.TimeStamp</java-type>
              <jdbc-type>TIMESTAMP</jdbc-type>
              <sql-type>TIMESTAMP</sql-type>
          </mapping>
          <mapping>
              <java-type>java.util.Date</java-type>
              <jdbc-type>DATE</jdbc-type>
              <sql-type>DATETIME</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Boolean</java-type>
              <jdbc-type>BIT</jdbc-type>
              <sql-type>BIT</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Float</java-type>
              <jdbc-type>FLOAT</jdbc-type>
              <sql-type>FLOAT</sql-type>
          </mapping>
        </type-mapping>
        <type-mapping>
          <name>DB2/400</name>
          <mapping>
              <java-type>java.lang.Character</java-type>
              <jdbc-type>CHAR</jdbc-type>
              <sql-type>CHAR(1)</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.String</java-type>
              <jdbc-type>VARCHAR</jdbc-type>
              <sql-type>VARCHAR(256)</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Byte</java-type>
              <jdbc-type>CHAR</jdbc-type>
              <sql-type>CHAR(1) FOR BIT DATA</sql-type>
          </mapping>
          <mapping>
              <java-type>java.util.Date</java-type>
              <jdbc-type>DATE</jdbc-type>
              <sql-type>DATE</sql-type>
          </mapping>
          <mapping>
              <java-type>java.sql.Time</java-type>
              <jdbc-type>TIME</jdbc-type>
              <sql-type>TIME</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Float</java-type>
              <jdbc-type>FLOAT</jdbc-type>
              <sql-type>FLOAT</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Integer</java-type>
              <jdbc-type>INTEGER</jdbc-type>
              <sql-type>SMALLINT</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Double</java-type>
              <jdbc-type>DOUBLE</jdbc-type>
              <sql-type>DOUBLE</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Long</java-type>
              <jdbc-type>BIGINT</jdbc-type>
              <sql-type>INTEGER</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Boolean</java-type>
              <jdbc-type>CHAR</jdbc-type>
              <sql-type>CHAR(5)</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Short</java-type>
              <jdbc-type>SMALLINT</jdbc-type>
              <sql-type>SMALLINT</sql-type>
          </mapping>
          <mapping>
              <java-type>java.lang.Object</java-type>
              <jdbc-type>JAVA_OBJECT</jdbc-type>
              <sql-type>VARGRAPHIC(16369)</sql-type>
          </mapping>
          <mapping>
              <java-type>java.sql.TimeStamp</java-type>
              <jdbc-type>TIMESTAMP</jdbc-type>
              <sql-type>TIMESTAMP</sql-type>
          </mapping>
        </type-mapping>
    </type-mappings>
</jaws>
