<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE server>
<!-- $Id: jboss-service.xml,v 1.21 2002/01/04 00:11:35 user57 Exp $ -->

<!-- ===================================================================== -->
<!--                                                                       -->
<!--  JBoss Server Configuration                                           -->
<!--                                                                       -->
<!-- ===================================================================== -->

<server>

  <!--
     | The Classpath element is needed for http based installations 
     | we need to list all the archives that the server needs at boot
     | if the installation is local and the configuration is from file
     | then there is no need to list the files and it should commented
   -->
  <classpath codebase="lib/ext" archives="*"/>

  <!-- ==================================================================== -->
  <!-- Class Loading                                                        -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.web.WebService"
	 name="jboss:service=Webserver">
    <attribute name="Port">8083</attribute>
    <!-- Should resources and non-EJB classes be downloadable -->
    <attribute name="DownloadServerClasses">true</attribute>
  </mbean>

  <!-- ==================================================================== -->
  <!-- JSR-77 Single JBoss Server Management Domain                         -->
  <!-- ==================================================================== -->

  <!-- TODO: rename jmx domain to jboss.management.single -->
  
  <mbean code="org.jboss.management.j2ee.SingleJBossServerManagement"
	 name="SingleJBoss:type=J2EEDomain,name=Manager" >
  </mbean>

  <!-- ==================================================================== -->
  <!-- JNDI                                                                 -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.naming.NamingService"
	 name="jboss:service=Naming">
    <attribute name="Port">1099</attribute>
  </mbean>
  <mbean code="org.jboss.naming.JNDIView" 
	 name="jboss:service=JNDIView"/>

  <!-- ==================================================================== -->
  <!-- Security                                                             -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.security.plugins.SecurityConfig"
	 name="jboss.security:name=SecurityConfig">
    <attribute name="AuthConf">auth.conf</attribute>
  </mbean>

  <!-- JAAS security manager and realm mapping -->
  <mbean code="org.jboss.security.plugins.JaasSecurityManagerService"
	 name="jboss.security:name=JaasSecurityManager">
    <attribute name="SecurityManagerClassName">
      org.jboss.security.plugins.JaasSecurityManager
    </attribute>
  </mbean>

  <!-- ==================================================================== -->
  <!-- Transactions                                                         -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.tm.TransactionManagerService" 
	 name="jboss:service=TransactionManager">
    <attribute name="TransactionTimeout">300</attribute>

    <!-- Use this attribute if you need to use a specific Xid
         implementation
    <attribute name="XidClassName">oracle.jdbc.xa.OracleXid</attribute>
    -->
  </mbean>

  <!-- 
     | Uncomment to use Tyrex (tyrex.exolab.org) transaction manager plugin
     | instead of the org.jboss.tm.TransactionManagerService and comment out
     | the TransactionManagerService above.
     |
  <mbean code="org.jboss.tm.plugins.tyrex.TransactionManagerService"
         name="jboss:service=TransactionManager">
        <attribute name="ConfigFileName">../conf/default/domain.xml</attribute>
  </mbean>
  -->

  <mbean code="org.jboss.tm.usertx.server.ClientUserTransactionService"
	 name="jboss:service=ClientUserTransaction">
  </mbean>


  <!-- ==================================================================== -->
  <!-- And now to get everything else going...                              -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.deployment.AutoDeployer" 
         name="jboss:service=AutoDeployer">
    <attribute name="Deployers">
      jboss.system:service=ServiceDeployer;
      jboss.jca:service=RARDeployer;
      jboss.j2ee:service=J2eeDeployer
    </attribute>
    <attribute name="URLs">
      ../deploy/lib,
      ../deploy
    </attribute>
    <attribute name="Timeout">
      3000
    </attribute>
  </mbean>

  <!-- ==================================================================== -->
  <!-- JBoss Server Management                                              -->
  <!-- ==================================================================== -->

  <!-- AS Temporary not available
  <mbean code="org.jboss.management.ServerDataCollector"
         name="jboss.management:service=Collector">
    <attribute name="RefreshSleep">5000</attribute>
  </mbean>
  -->

  <!-- ==================================================================== -->
  <!-- Monitoring and Management                                            -->
  <!-- ==================================================================== -->

  <!-- Uncomment to enable JMX monitoring of the bean cache
  <mbean code="org.jboss.monitor.BeanCacheMonitor" 
         name="jboss.jmx:name=BeanCacheMonitor"/>
  -->


  <!-- ==================================================================== -->
  <!-- Scheduler Service                                                    -->
  <!-- ==================================================================== -->

  <!-- Uncomment this to enable Scheduling
  <mbean code="org.jboss.util.Scheduler" name="jboss:service=Scheduler">
    <constructor>
      <arg type="java.lang.String" value=":server=Scheduler"/>
      <arg type="java.lang.String" value="org.jboss.util.Scheduler$SchedulableExample"/>
      <arg type="java.lang.String" value="Schedulabe Test,12345"/>
      <arg type="java.lang.String" value="java.lang.String,int"/>
      <arg type="long" value="0"/>
      <arg type="long" value="10000"/>
      <arg type="long" value="-1"/>
    </constructor>
  </mbean>
  -->

  <!-- Uncomment this and set up according to manual to add Castor JDO service
  <mbean code="org.jboss.jdo.castor.CastorJDOImpl"
         name="jboss:service=CastorJDO,name=someName">
    <attribute name="Configuration">
      file:../conf/default/database.xml
    </attribute>
    <attribute name="JndiName">jdo/someName</attribute>
    <attribute name="LockTimeout">0</attribute>
    <attribute name="LoggingEnabled">false</attribute>
    <attribute name="CommonClassPath">false</attribute>
  </mbean>
  -->

  <!-- ==================================================================== -->
  <!-- Mail Connection Factory                                              -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.mail.MailService"
         name="jboss:service=Mail">
    <attribute name="JNDIName">Mail</attribute>
    <attribute name="ConfigurationFile">mail.properties</attribute>
    <attribute name="User">user_id</attribute>
    <attribute name="Password">password</attribute>
  </mbean>

  <!-- ==================================================================== -->
  <!-- Invokers to the JMX node                                             -->
  <!-- ==================================================================== -->

  <!-- RMI/JRMP invoker -->
  <mbean code="org.jboss.invocation.jrmp.server.JRMPInvoker" 
   name="jboss:service=invoker,type=jrmp">
    <attribute name="RMIObjectPort">4444</attribute>
    <!--
    <attribute name="RMIClientSocketFactory">custom</attribute>
    <attribute name="RMIServerSocketFactory">custom</attribute>
    <attribute name="RMIServerSocketAddr">custom</attribute>
    -->
  </mbean>
  
  <mbean code="org.jboss.invocation.local.LocalInvoker" 
         name="jboss:service=invoker,type=local">
  </mbean>

</server>
