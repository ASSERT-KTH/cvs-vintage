<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE server>
<!-- $Id: jboss-service.lego,v 1.1 2002/11/08 21:31:55 igorfie Exp $ -->

<!-- ===================================================================== -->
<!--                                                                       -->
<!--  A minimal JBoss Server Configuration                                 -->
<!--                                                                       -->
<!-- ===================================================================== -->

<server>

  <!-- Load all jars from the JBOSS_DIST/server/<config>/lib directory. This
    can be restricted to specific jars by specifying them in the archives
    attribute.
   -->
  <classpath codebase="lib" archives="*"/>

  <!-- ==================================================================== -->
  <!-- Log4j Initialization                                                 -->
  <!-- ==================================================================== -->
  <mbean code="org.jboss.logging.Log4jService"
    name="jboss.system:type=Log4jService,service=Logging">
    <attribute name="ConfigurationURL">resource:log4j.xml</attribute>
  </mbean>

  <!-- ==================================================================== -->
  <!-- Class Loading                                                        -->
  <!-- ==================================================================== -->
  <!--class:loading
  <mbean code="org.jboss.web.WebService"
	 name="jboss:service=WebService">
    <attribute name="Port">8083</attribute>
    <!-class:loading- Should resources and non-EJB classes be downloadable -class:loading->
    <attribute name="DownloadServerClasses">true</attribute>
  </mbean>
  class:loading-->

  <!-- ==================================================================== -->
  <!-- JNDI                                                                 -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.naming.NamingService"
	 name="jboss:service=Naming">
    <!-- The listening port for the bootstrap JNP service. Set this to -1
      to run the NamingService without the JNP invoker listening port.
    -->
    <attribute name="Port">1099</attribute>
  </mbean>
  <mbean code="org.jboss.naming.JNDIView" 
	 name="jboss:service=JNDIView"/>

  <!-- ==================================================================== -->
  <!-- Security                                                             -->
  <!-- ==================================================================== -->
  <!--jbosssx
  <mbean code="org.jboss.security.plugins.SecurityConfig"
	 name="jboss.security:service=SecurityConfig">
    <attribute name="LoginConfig">jboss.security:service=XMLLoginConfig</attribute>
  </mbean>
  <mbean code="org.jboss.security.auth.login.XMLLoginConfig"
	 name="jboss.security:service=XMLLoginConfig">
    <attribute name="ConfigResource">login-config.xml</attribute>
  </mbean>

  <!-jbosssx- JAAS security manager and realm mapping -jbosssx->
  <mbean code="org.jboss.security.plugins.JaasSecurityManagerService"
	 name="jboss.security:service=JaasSecurityManager">
    <attribute name="SecurityManagerClassName">
      org.jboss.security.plugins.JaasSecurityManager
    </attribute>
  </mbean>
  jbosssx-->

  <!-- ==================================================================== -->
  <!-- The deployers...                                                     -->
  <!-- ==================================================================== -->
  <!--ejb:deployer
  <!-ejb:deployer- EJB deployer, remove to disable EJB behavior-ejb:deployer->
  <mbean code="org.jboss.ejb.EJBDeployer" name="jboss.ejb:service=EJBDeployer">
    <attribute name="VerifyDeployments">true</attribute>
    <attribute name="ValidateDTDs">false</attribute>
    <attribute name="MetricsEnabled">false</attribute>
    <attribute name="VerifierVerbose">true</attribute>

    <!-ejb:deployer-
        StrictVerifier: Setting this to 'true' will cause all deployments
        to fail when the Verifier detected a problem with the contained
        Beans.
    -ejb:deployer->
    <attribute name="StrictVerifier">true</attribute>

    <depends>jboss:service=TransactionManager</depends>
    <depends>jboss:service=WebService</depends>
  </mbean>
  
  <!-ejb:deployer- EAR deployer, remove if you are not using Web layers -ejb:deployer->
  <mbean code="org.jboss.deployment.EARDeployer" name="jboss.j2ee:service=EARDeployer">
  </mbean>
  ejb:deployer-->

  <!-- ==================================================================== -->
  <!-- Invokers to the JMX node                                             -->
  <!-- ==================================================================== -->
  <!--jmx:invokers
  <!-jmx:invokers- RMI/JRMP invoker -jmx:invokers->
  <mbean code="org.jboss.invocation.jrmp.server.JRMPInvoker" 
         name="jboss:service=invoker,type=jrmp">
    <!-jmx:invokers-
    <attribute name="RMIObjectPort">4444</attribute>
    <attribute name="RMIClientSocketFactory">custom</attribute>
    <attribute name="RMIServerSocketFactory">custom</attribute>
    <attribute name="RMIServerSocketAddr">custom</attribute>
    <attribute name="SecurityDomain">ssl-domain-name</attribute>
    -jmx:invokers->

    <depends>jboss:service=TransactionManager</depends>
  </mbean>
  
  <mbean code="org.jboss.invocation.local.LocalInvoker" 
         name="jboss:service=invoker,type=local">

    <depends>jboss:service=TransactionManager</depends>
  </mbean>

  <!-jmx:invokers- Trunk invoker -jmx:invokers->
  <mbean code="org.jboss.resource.work.BaseWorkManager" 
         name="jboss:service=WorkManager,type=TrunkInvoker">
    <depends optional-attribute-name="TransactionManager">jboss:service=TransactionManager</depends>
    <attribute name="MinThreads">0</attribute>
    <attribute name="MaxThreads">50</attribute>
    <attribute name="KeepAliveTime">10000</attribute>
  </mbean>

  <mbean code="org.jboss.invocation.trunk.server.TrunkInvoker" 
         name="jboss:service=invoker,type=trunk">
    <attribute name="EnableTcpNoDelay">true</attribute>
    <attribute name="ServerBindPort">4445</attribute>
    <depends optional-attribute-name="WorkManager">jboss:service=WorkManager,type=TrunkInvoker</depends>
    <depends optional-attribute-name="TransactionManagerService">jboss:service=TransactionManager</depends>
    <!-jmx:invokers-
    <attribute name="ServerBindAddress">192.168.1.1</attribute>
    <attribute name="ClientConnectAddress">192.168.1.1</attribute>
    <attribute name="ClientConnectPort">4445</attribute>
    -jmx:invokers->
  </mbean>
  jmx:invokers-->

  <!-- ==================================================================== -->
  <!-- Deployment Scanning                                                  -->
  <!-- ==================================================================== -->

  <!-- 
  	An mbean for hot deployment/undeployment of archives.
  -->
  <!--hotdeploy:dir.scanner
  <mbean code="org.jboss.deployment.scanner.URLDeploymentScanner"
	 name="jboss.deployment:type=DeploymentScanner,flavor=URL">

    <depends optional-attribute-name="Deployer">jboss.system:service=MainDeployer</depends>

    <!-hotdeploy:dir.scanner- The URLComparator can be used to specify a deployment ordering
         for deployments found in a scanned directory.  The class specified
         must be an implementation of java.util.Comparator, it must be able
         to compare two URL objects, and it must have a no-arg constructor.
         Two deployment comparators are shipped with JBoss:
           - org.jboss.deployment.DeploymentSorter 
             Sorts by file extension, as follows:
               "sar", "service.xml", "rar", "jar", "war", "wsr", "ear", "zip", 
               "*"
           - org.jboss.deployment.scanner.PrefixDeploymentSorter
             If the name portion of the url begins with 1 or more digits, those 
             digits are converted to an int (ignoring leading zeroes), and 
             files are deployed in that order.  Files that do not start with 
             any digits will be deployed last, and they will be sorted by
             extension as above with DeploymentSorter.
    -hotdeploy:dir.scanner->
    <attribute name="URLComparator">org.jboss.deployment.DeploymentSorter</attribute>
    <!-hotdeploy:dir.scanner- The Filter specifies a java.io.FileFilter for scanned
         directories.  Any file not accepted by this filter will not be
         deployed.  The org.jboss.deployment.scanner.DeploymentFilter 
         rejects the following patterns:
             "#*", "%*", ",*", ".*", "_$*", "*#", "*$", "*%", "*.BAK", 
             "*.old", "*.orig", "*.rej", "*.bak", "*,v", "*~", ".make.state", 
             ".nse_depinfo", "CVS", "CVS.admin", "RCS", "RCSLOG", "SCCS", 
             "TAGS", "core", "tags"
    -hotdeploy:dir.scanner->
    <attribute name="Filter">org.jboss.deployment.scanner.DeploymentFilter</attribute>

    <attribute name="ScanPeriod">5000</attribute>

    <!-hotdeploy:dir.scanner- URLs are comma seperated and unprefixed arguments are considered
       file URLs and resolve relative to server home(JBOSS_DIST/server/default)
       unless the given path is absolute. Any referenced directories cannot
       be unpackaged archives, use the parent directory of the unpacked
       archive.
     -hotdeploy:dir.scanner->
    <attribute name="URLs">
       ./deploy
    </attribute>
  </mbean>
  hotdeploy:dir.scanner-->

  <!--  
  	An alternate hot deployer mbean. Use URLDirectoryScanner if you need to
    specify which urls are directories to scan, and which are urls to be
    deployed directly. URLDeploymentScanner assumes that all directories are to
    be scanned, which can cause problems if directory referred to in the
    deploy attribute is an exploded archive.
  -->
  <!--hotdeploy:url.scanner
  <mbean code="org.jboss.deployment.scanner.URLDirectoryScanner"
       name="jboss.deployment:type=DeploymentScanner,flavor=URL">

    <depends optional-attribute-name="Deployer">jboss.system:service=MainDeployer</depends>
    <attribute name="URLComparator">org.jboss.deployment.DeploymentSorter</attribute>
    <attribute name="Filter">org.jboss.deployment.scanner.DeploymentFilter</attribute>
    <attribute name="ScanPeriod">5000</attribute>
    <!-hotdeploy:url.scanner- 
      Each entry specifies either a dir (directory to be scanned),
      or url (url to be deployed). Like the URLs for the DeploymentScanner
      above, a file: protocol will be assumed if not specified otherwise.
    -hotdeploy:url.scanner->
    <attribute name="URLs">
        <urls>
            <dir name="./deploy" />
            <!-hotdeploy:url.scanner-
            <url name="./deploy/examples/myapp.ear" />
            <dir name="./deploy/examples" />
            <url name="http://www.test.com/samples/myapp.ear" />
            -hotdeploy:url.scanner->
        </urls>
    </attribute>
  </mbean>
  hotdeploy:url.scanner-->

</server>
