#macro (attachment $attachment)
  #if ($attachment && $attachment.Class.Name != "java.lang.String")

          <attachment>
            <id>$attachment.AttachmentId</id>
            <name>$attachment.Name</name>
            <type>$attachment.AttachmentType.Name</type>
            #set ($filePath = $attachment.FileName)
            #if ($filePath && $filePath.length() > 0)

            <filename>$filePath</filename>
            #set ($filePath = "")
          #else
          #set ($fileData = $attachment.Data)
            #if ($fileData && $fileData.length() > 0)

            <data>$fileData</data>
            #set ($fileData = "")
            #end
          #end
        
            <mimetype>$attachment.MimeType</mimetype>
            <created-date>
              <format>$scarabG.Constant.DATE_FORMAT</format>
              <timestamp>$format.getDate($scarabG.Constant.DATE_FORMAT, $attachment.CreatedDate)</timestamp>
            </created-date>
            <modified-date>
              <format>$scarabG.Constant.DATE_FORMAT</format>
              <timestamp>$format.getDate($scarabG.Constant.DATE_FORMAT, $attachment.ModifiedDate)</timestamp>
            </modified-date>
            <created-by>$scarabR.getUser($attachment.CreatedBy).UserName</created-by>
            #if ($attachment.ModifiedBy)

            <modified-by>$!scarabR.getUser($attachment.ModifiedBy).UserName</modified-by>
            #end

            <deleted>$attachment.Deleted</deleted>
          </attachment>
  #end
  #set ($attachment = "")
#end
#set ($module = $scarabR.CurrentModule)
#set ($exportEncoding = $scarabG.getTurbineConfiguration().getString("scarab.dataexport.encoding"))
#if ($exportEncoding.trim().length() > 0)
  #set ($encoding = $exportEncoding)
#else
  #set ($encoding = "UTF-8")
#end
<?xml version="1.0" encoding="$encoding" standalone="no"?>
<!DOCTYPE scarab-issues SYSTEM "$dtdURI">
<!--$exportEncoding-->
<scarab-issues>
  <import-type>create-different-db</import-type>
  <module>
    <id>$module.ModuleId</id>
    <parent-id>$module.ParentId</parent-id>
    <name>$module.RealName</name>
    #set ($moduleOwner = $module.OwnerId)
    #if ($moduleOwner)

    <owner>$scarabR.getUser($moduleOwner).UserName</owner>
    #else
    
    <owner></owner>
    #end

    <description>$module.Description</description>
    <url>$module.Url</url>
    <domain>$!module.Domain</domain>
    <code>$module.Code</code>
  </module>
#if ($issueIdList.size() > 0)
<issues>
#foreach ($issueId in $issueIdList)
  #set ($issue = $scarabR.getIssue($issueId))
  #if ($issue)

    <issue>
      <id>$issue.IdCount</id>
      <artifact-type>$issue.IssueType.Name</artifact-type>
      <activity-sets>
      #foreach ($activitySet in $issue.ActivitySets)

        <activity-set>
          <id>$activitySet.ActivitySetId</id>
          <type>$activitySet.ActivitySetType.Name</type>
          <created-by>$scarabR.getUser($activitySet.CreatedBy).UserName</created-by>
          <created-date>
            <format>$scarabG.Constant.DATE_FORMAT</format>
            <timestamp>$format.getDate($scarabG.Constant.DATE_FORMAT, $activitySet.CreatedDate)</timestamp>
          </created-date>
          <activities>
          #foreach ($activity in $activitySet.ActivityList)
            #if ($activity.Issue.equals($issue))

            <activity>
              <id>$activity.ActivityId</id>
              <attribute>$scarabR.getAttribute($activity.AttributeId).Name</attribute>
              #if ($activity.OldNumericValue)
                <old-numeric-value>$activity.OldNumericValue</old-numeric-value>
              #end

              #if ($activity.NewNumericValue)
                <new-numeric-value>$activity.NewNumericValue</new-numeric-value>
              #end

              #if ($activity.OldUserId)

              <old-user>$!scarabR.getUser($activity.OldUserId).UserName</old-user>
              #end
              #if ($activity.NewUserId)

              <new-user>$!scarabR.getUser($activity.NewUserId).UserName</new-user>
              #end
              #if ($activity.OldOptionId)

              <old-option>$!scarabR.getAttributeOption($activity.OldOptionId).Name</old-option>
              #end
              #if ($activity.NewOptionId)

              <new-option>$!scarabR.getAttributeOption($activity.NewOptionId).Name</new-option>
              #end
              #if ($activity.OldValue && $activity.OldValue.length() > 0)

              <old-value>$!activity.OldValue</old-value>
              #end
              #if ($activity.NewValue && $activity.NewValue.length() > 0)

              <new-value>$!activity.NewValue</new-value>
              #end

              #set ($activityDepend = $activity.Depend)
              #if ($activityDepend)

              <dependency>
                <id>$activityDepend.DependId</id>
                <parent>$scarabR.getIssueByPk($activityDepend.ObservedId.toString()).UniqueId</parent>
                <child>$scarabR.getIssueByPk($activityDepend.ObserverId.toString()).UniqueId</child>
                <type>$activityDepend.DependType.Name</type>
                <deleted>$activityDepend.Deleted</deleted>
              </dependency>
              #end
              #set ($activityDepend = false)

              <description>$activity.Description</description>
              #set ($activityEndDate = $activity.EndDate)
              #if ($activityEndDate)

              <end-date>
                <format>$scarabG.Constant.DATE_FORMAT</format>
                <timestamp>$format.getDate($scarabG.Constant.DATE_FORMAT, $activityEndDate)</timestamp>
              </end-date>
              #end
              #set ($activityEndDate = false)

              #set ($activityAttachment = $activity.Attachment)
              #attachment ($activityAttachment)

            </activity>
          #end
          #end

          </activities>
          #set ($activitySetAttachment = $activitySet.Attachment)
          #attachment ($activitySetAttachment)

        </activity-set>
      #end

      </activity-sets>
    </issue>
  #end
#end
  </issues>
#end

</scarab-issues>
