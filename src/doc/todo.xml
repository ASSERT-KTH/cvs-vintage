<?xml version="1.0"?>
<document url="./todo.xml">

  <properties>
    <author>Craig R. McClanahan</author>
    <title>The Struts Project TODO List</title>
  </properties>

  <body>


  <section name="Introduction" href="Intro">

  <p>Application frameworks, like the applications we build with them,
  never seem to be completed.  The following items have been targeted
  for completion in preparation for a version <strong>1.0</strong>
  release of Struts, timed to coincide with the ApacheCon Europe 2000
  conference in London, October 23-25, 2000.</p>

  <p>Whether everything listed here makes it in to the final release
  depends primarily on how many volunteers are interested in contributing
  code and ideas to make it happen.  If you are interested in helping out
  on specific tasks listed below, please let us know (via a message to the
  STRUTS-DEV mailing list), and we will put your name in the "Volunteers"
  column.  There is also no problem having more than one person collaborating
  on a particular task, if you would like to do that.</p>

  <p>The TODO list tasks are divided into functional areas that correspond
  to the major components of the Struts Framework.  References in square
  brackets are the Java package containing the corresponding source code.</p>

  </section>


  <task-list name="MVC Framework [org.apache.struts.action]" href="MVC">

    <info>
      <p>This is the core controller servlet, with support for the developer's
      action and form bean classes, plus the supporting data structures.</p>
    </info>

    <task name="Standard Actions">
      <info>
        <p>Begin the collection of a set of generally useful standard
        <code>Action</code> implementations, in a new Java package
        [<code>org.apache.struts.actions</code>].  Useful actions to consider:
        add/change/delete configured mappings, forwards, and beans; reload
        the configuration file; file upload handling.</p>
      </info>
    </task>

    <task name="Enhanced Validation">
      <info>
        <p>Replace the current <code>ValidatingActionForm.validate()</code>
        method with one that takes useful contextual arguments (request?,
        servlet?, mapping?) so that it can do more global sorts of validation
        checks, as well as access external resources.</p>
        <p><strong>NOTE:  Likely to break backwards compatibility.</strong></p>
      </info>
    </task>

    <task name="Referer-Based Forwards">
      <info>
        <p>Support a special type of <code>ActionForward</code> that uses the
        HTTP <code>Referer</code> header to identify the page to be returned
        to for the input form, without having to name it explicitly.  This
        allows page developers to include the same form in multiple pages,
        if desired.</p>
      </info>
    </task>

    <task name="Extend Forward Mechanism">
      <info>
        <p>Extend the functionality of ActionForward to support ability to
        forward across SSL-versus-not access to the same webapp.  This may
        require dependence on container-specific features.</p>
      </info>
    </task>

    <task name="ActionForm Population">
      <info>
        <p>Consider migrating management of ActionForm population out of
        ActionServlet (possibly into ActionMapping) and/or provide hooks
	in the interface for application-level control.</p>
      </info>
    </task>

    <task name="Developer Documentation">
      <info>
	<p>Create more detailed documentation of how the Struts controller
	servlet framework is intended to be used, and how it might be
	extended.  This documentation should be focused on the needs of
	web application developers and architects.</p>
      </info>
    </task>

  </task-list>


  <task-list name="XML Digester [org.apache.struts.digester]" href="Digester">

    <info>
      <p>The Digester package supports scripted firing of "rules" based on
      matching a particular pattern of nested XML tags.  Among the predefined
      rules that can be utilized are rules to create new objects, set bean
      properties from the contents of attributes, or call arbitrary methods
      with arguments based on the XML content being parsed.  A common
      use for this technology (illustrated in the Struts ActionServlet), is
      parsing configuration files and building corresponding object trees.</p>
    </info>

    <task name="Developer Documentation">
      <info>
	<p>Create more detailed documentation of how the Digester package
	can be utilized by application developers.</p>
      </info>
    </task>


  </task-list>


  </body>

</document>
