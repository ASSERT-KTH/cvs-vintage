// ============================================================================
// catalina.policy - Security Policy Permissions for Tomcat 4.0
//
// This file contains a default set of security policies to be enforced (by the
// JVM) when Catalina is executed with the "-security" option.  In addition
// to the permissions granted here, the following additional permissions are
// granted to the codebase specific to each web application:
// * Read and write access to the configured temporary directory
// * Read access to the document root directory
//
// $Id: catalina.policy,v 1.1 2000/12/18 05:03:39 jon Exp $
// ============================================================================


// ========== SYSTEM CODE PERMISSIONS =========================================


// These permissions apply to the Java Virtual Machine's core code
grant codeBase "file:${java.home}/lib/-" {
        permission java.security.AllPermission;
};


// These permissions apply to all shared system extensions
grant codeBase "file:${java.home}/jre/lib/ext/*" {
        permission java.security.AllPermission;
};


// ========== CATALINA CODE PERMISSIONS =======================================


// These permissions apply to the server startup code, and the servlet API
// classes that are shared across all class loaders
grant codeBase "file:${catalina.home}/bin/bootstrap.jar" {
        permission java.security.AllPermission;
};
grant codeBase "file:${catalina.home}/bin/servlet.jar" {
        permission java.security.AllPermission;
};


// These permissions apply to the container's core code, plus any additional
// libraries installed in the "server" directory
grant codeBase "file:${catalina.home}/server/-" {
        permission java.security.AllPermission;
};


// These permissions apply to all extension libraries (including Jasper,
// if present) installed in the "lib" directory
grant codeBase "file:${catalina.home}/lib/-" {
        permission java.security.AllPermission;
};


// ========== WEB APPLICATION PERMISSIONS =====================================


// These permissions are granted by default to all web applications
grant { 
	permission java.util.PropertyPermission "java.version", "read";
	permission java.util.PropertyPermission "java.vendor", "read";
	permission java.util.PropertyPermission "java.vendor.url", "read";
	permission java.util.PropertyPermission "java.class.version", "read";
	permission java.util.PropertyPermission "os.name", "read";
	permission java.util.PropertyPermission "os.version", "read";
	permission java.util.PropertyPermission "os.arch", "read";
	permission java.util.PropertyPermission "file.separator", "read";
	permission java.util.PropertyPermission "path.separator", "read";
	permission java.util.PropertyPermission "line.separator", "read";

	permission java.util.PropertyPermission "java.specification.version", "read";
	permission java.util.PropertyPermission "java.specification.vendor", "read";
	permission java.util.PropertyPermission "java.specification.name", "read";

	permission java.util.PropertyPermission "java.vm.specification.version", "read";
	permission java.util.PropertyPermission "java.vm.specification.vendor", "read";
	permission java.util.PropertyPermission "java.vm.specification.name", "read";
	permission java.util.PropertyPermission "java.vm.version", "read";
	permission java.util.PropertyPermission "java.vm.vendor", "read";
	permission java.util.PropertyPermission "java.vm.name", "read";
};


// Also by default, each web application is granted a set of permissions based
// on its document root.  These permission additions are hard coded into
// Catalina, and can not be adjusted in this file.  Conceptually, the additions
// for a given web application look like this, where "${doc.root}" is the
// document root directory for this application, and "${work.dir}" is the
// temporary work directory for this application:
//
// grant codeBase "file:${doc.root}/WEB-INF/-" {
//      permission java.io.FilePermission "${doc.root}/-", "read";
//      permission java.io.FilePermission "${work.dir}/-", "read,write,delete";
// };
// grant codeBase "file:${work.dir}/-" {
//      permission java.io.FilePermission "${doc.root}/-", "read";
//      permission java.io.FilePermission "${work.dir}/-", "read,write,delete";
// };


// You can assign additional permissions to particular web applications by
// adding additional "grant" entries here, based on the code base for that
// application.  For instance, assume that the standard "examples" application
// included a JDBC driver that needed to establish a network connection to the
// corresponding database.  You might create a "grant" entry like this:
//
// grant codeBase "file:${catalina.home}/webapps/examples/WEB-INF/-" {
//      permission java.net.SocketPermission "dbhost.mycompany.com:5432", "connect";
// }


