#! /bin/sh
#

## Set the environment for tomcat
#  Usage: source env.tomcat
#         source env.tomcat restore -- remove TOMCAT, restore previous env


## XXX configure-like script to find tomcat in well-known locations
## XXX same - find Java_home if not defined
# TOMCAT_HOME will override dirname $0
if [ X${TOMCAT_HOME} = X ]; then
  baseDir=`dirname $0`
else
  baseDir=$TOMCAT_HOME
fi



if [ "$1" = "restore" ]; then 
   # restore the env, no TOMCAT ref
   CLASSPATH=${TOM_PREV_CLASSPATH}

   unset TOM_PREV_CLASSPATH
   unset TOM_CLASSPATH
   export CLASSPATH
fi

if [ X${TOM_CLASSPATH} = X ]; then
  echo $baseDir
  TOM_CLASSPATH=.
  TOM_CLASSPATH=${baseDir}/webserver.jar:${TOM_CLASSPATH}
  TOM_CLASSPATH=${baseDir}/lib/servlet.jar:${TOM_CLASSPATH}
  TOM_CLASSPATH=${baseDir}/lib/jasper.jar:${TOM_CLASSPATH}

  TOM_CLASSPATH=${baseDir}/lib/xml.jar:${TOM_CLASSPATH}

  # XXX do we need to include it???
  TOM_CLASSPATH=${baseDir}/webpages/WEB-INF/classes/jsp/beans:${TOM_CLASSPATH}

  TOM_CLASSPATH=${JAVA_HOME}/lib/tools.jar:${TOM_CLASSPATH}

  # Backdoor classpath setting for development purposes when all classes
  # are compiled into a /classes dir and are not yet jarred.
  if [ -d ${baseDir}/classes ]; then
    TOM_CLASSPATH=${baseDir}/classes:${TOM_CLASSPATH}
  fi

  TOM_PREV_CLASSPATH=$CLASSPATH
  CLASSPATH=${TOM_CLASSPATH}

  if [ "${TOM_PREV_CLASSPATH}" != "" ]; then
    CLASSPATH=${CLASSPATH}:${TOM_PREV_CLASSPATH}
  fi

  export TOM_CLASSPATH
  export TOM_PREV_CLASSPATH
  export CLASSPATH

fi
