
#macro (attrValueLeafSelect $attrValue $optionFieldName $size $multiple)
  #set ($attrInput = $intake.AttributeValue.mapTo($attrValue))
  #set ($attr = $attrValue.Attribute)
  #set ($module = $attrValue.Issue.Module)
  #set ($values = $attrInput.get($optionFieldName).Value)

<select name="$attrInput.get($optionFieldName).Key"
   #if($size.length())size="$size"#end #if($multiple)multiple="multiple"#end>
  #if ($size.length() == 0)
   <option value="">Choose...</option>
  #end
  #if ($module.getLeafRModuleOptions($attr, $scarabR.CurrentIssueType))
  #foreach ($option in $module.getLeafRModuleOptions($attr, $scarabR.CurrentIssueType))
    #set ($selected = false)
    #if ($values)   
       #if ($multiple.toString().equals("true"))
         #foreach ($value in $values)
            #if ($value.equals($option.OptionId))
               #set ($selected=true)
            #end
         #end
       #else
         #if ($values.equals($option.OptionId))
           #set ($selected=true)
          #end
       #end
    #end
    <option value="$option.OptionId"#selected($selected)>
        $option.DisplayValue</option>
  #end
  #end
</select>
#end

#macro (templateAttrValueLeafSelect $attrValue $templAttrValue $optionFieldName $size $multiple)
  #set ($attrInput = $intake.AttributeValue.mapTo($attrValue))
  #set ($templAttrInput = $intake.AttributeValue.mapTo($templAttrValue))
  #set ($attr = $attrValue.Attribute)
  #set ($module = $attrValue.Issue.Module)
  #if ($attrInput.get($optionFieldName).Value)
    #set($currentValue = $attrInput.get($optionFieldName).Value)
  #elseif ($templAttrInput.get($optionFieldName).Value)
    #set($currentValue = $templAttrInput.get($optionFieldName).Value)
  #end
<select name="$attrInput.get($optionFieldName).Key"
  #if($size.length())size="$size"#end #if($multiple)multiple="multiple"#end>
  #if ($size.length() == 0)
  <option value="">Choose...</option>
  #end
  #foreach ($option in $module.getLeafRModuleOptions($attr, $scarabR.CurrentIssueType))
    #if ($currentValue && $option.OptionId == $currentValue)
      <option selected="selected" value="$option.OptionId">$option.DisplayValue</option>
    #else
      <option value="$option.OptionId">$option.DisplayValue</option>
    #end
  #end
</select>
#end

#macro (dependTypeLeafSelect $childIssue $type)
<select name="$type_depend_type_id_$childIssue.IssueId">
  <option>Choose dependency type</option>
  #foreach ($dependType in $currentIssue.getAllDependencyTypes())
    #if ($currentIssue.getDependency($childIssue).TypeId.toString().equals($dependType.DependTypeId.toString()))
    <option selected="selected" value="$dependType.DependTypeId">$dependType.Name</option>
    #else
    <option value="$dependType.DependTypeId">$dependType.Name</option>
    #end
  #end
  <option value="none">Remove dependency</option>
</select>
#end

#macro (attrValueText $attrValue $size)
#set ($attrInput = $intake.AttributeValue.mapTo($attrValue))
        #if ($attVal.Attribute.AttributeType.Name == "long-string")
           #textAreaMedium("$attrInput.Value.Key" $attrInput.Value)
        #else
           <input type="text" name="$attrInput.Value.Key" value="$!attrInput.Value"#if($size.length()) size="$size"#end />
        #end
#end

#macro (templateAttrValueText $attrValue $size $value)
#set ($attrInput = $intake.AttributeValue.mapTo($attrValue))
#set ($currentValue = "")
#if ($attrInput.Value.toString().length() > 0)
     #set ($currentValue = $attrInput.Value)
#elseif ($templAttrInput.Value.toString().length() > 0)
     #set ($currentValue = $templAttrInput.Value)
#end
#if ($attVal.Attribute.AttributeType.Name == "long-string")
   #textAreaMedium("$attrInput.Value.Key" $currentValue)
#else
   <input type="text" name="$attrInput.Value.Key" value="$!currentValue"#if($size.length()) size="$size"#end />
#end
#end

#macro (attrValueHierarchySelect $attrValue $optionFieldName $size $multiple)
#set ($attrInput = $intake.AttributeValue.mapTo($attrValue))
#set ($attr = $attrValue.Attribute)
#set ($module = $attrValue.Issue.Module)
#set ($values = $attrInput.get($optionFieldName).Value)

<select name="$attrInput.get($optionFieldName).Key"
#if($size.length() != 0)size="$size"#end #if($multiple)multiple="multiple"#end>
  #if ($size.length() == 0)
  <option value="">Choose...</option>
  #end
  #foreach ($option in $module.getOptionTree($attr, $scarabR.CurrentIssueType))
    #set ($selected = false)
    #if ($values)   
       #if ($multiple.toString().equals("true"))
         #foreach ($value in $values)
            #if ($value.equals($option.OptionId))
               #set ($selected=true)
            #end
         #end
       #else
         #if ($values.equals($option.OptionId))
           #set ($selected=true)
          #end
       #end
    #end
    <option value="$option.OptionId"#selected($selected)>
#foreach ($i in [0..$option.Level])#if($i != 0)&nbsp;&nbsp;&nbsp;&nbsp;#end#end
          $option.DisplayValue</option>
  #end
</select>
#end

#macro (attrValueErrorMsg $attrValue $fieldName)
#set ($attrInput = $intake.AttributeValue.mapTo($attrValue))
#if (!$attrInput.get($fieldName).isValid())
<p><strong class="alert">$attrInput.get($fieldName).Message</strong></p>
#end
#end

#macro (alert $text)
	<p class="alert">
	<strong>
	<img src="$staticLink.setPath("/images/icon_alertsml.gif")" width="16" height="14" alt="Alert notification" border="0" />&#160;Alert!
	</strong>
	<small>$text</small>
	</p>
#end

#macro (fieldErrorMsg $field $br)
#if ($field && $field.Message.length() > 0 && !$field.isValid())
<p class="alert"><small><strong>Alert!</strong>&#160;$field.Message</small></p>$br
#end
#end

#macro (actionErrorMsg)
#if ($data.Message)
#alert($data.Message)
#end
#end

#macro (stdIntakeMsg)
#if (!$intake.isAllValid())
<p><strong class="alert">Please check your form fields for errors and resubmit.</strong></p>
#end
#end

#macro (numericSelect $name $first $last $selected $size)
<select name="$name" size="$size">
#foreach ($i in [$first..$last])
<option value="$i" #if ($i==$selected)selected="selected" #end>$i</option>
#end
</select>
#end

#macro (booleanCheckbox $booleanField)
#if ($booleanField.Value)
<input type="checkbox" name="$booleanField.Key" value="true" checked="checked" />
#else
<input type="checkbox" name="$booleanField.Key" value="true" />
#end
<input type="hidden" name="$booleanField.ValueIfAbsent" value="false" />
#end

#macro (booleanRadio $booleanField)
#if ($booleanField.Value)
<input type="radio" name="$booleanField.Key" value="true" checked="checked" />
#else
<input type="radio" name="$booleanField.Key" value="true" />
#end
<input type="hidden" name="$booleanField.ValueIfAbsent" value="false" />
#end

#macro (checked $v1 $v2)
#if ($v1.toString().equals($v2.toString()))checked="checked"#end
#end

#macro (textField $field $size)
#if ($field.Validator.MaxLength && $field.Validator.MaxLength > 0)
#set ($maxLength = $field.Validator.MaxLength)
#end
<input type="text" name="$field.Key" value="$!field.Value"#if($maxLength) maxlength="$maxLength"#end#if($size.length()) size="$size"#end />
#end

#macro (userSelectBox $attrValue $size $multiple)
#set ($attrInput = $intake.AttributeValue.mapTo($attrValue))
#set ($attr = $attrValue.Attribute)
#set ($module = $attrValue.Issue.Module)
#if ($multiple == "true" || $multiple == "multiple")
<select name="$attrInput.get("UserIds").Key"
     #if($size.length())size="$size"#end multiple="multiple">
#else
<select name="$attrInput.get("UserId").Key"
     #if($size.length())size="$size"#end>
#end
 #if ($size.length() == 0)
 <option value="">Choose...</option>
 #end
   #foreach ($user in $module.getUsers($attr.Permission))
   #if ($attrInput.UserId.Value && $user.PrimaryKey == $attrInput.UserId.Value)
   <option selected="selected" value="$user.PrimaryKey">$user.UserName</option>
   #else
   <option value="$user.PrimaryKey">$user.UserName</option>
   #end
 #end
</select>
#end

#macro (templateUserSelectBox $attrValue $templAttrValue $size $multiple)
#set ($attrInput = $intake.AttributeValue.mapTo($attrValue))
#set ($templAttrInput = $intake.AttributeValue.mapTo($templAttrValue))
#set ($attr = $attrValue.Attribute)
#set ($module = $attrValue.Issue.Module)
  #set($currentValue = "")
  #if ($attrInput.UserId.toString().length() > 0)
    #set($currentValue = $attrInput.UserId)
  #elseif ($templAttrInput.UserId.toString().length() > 0)
    #set($currentValue = $templAttrInput.UserId)
  #end
#if ($multiple == "true" || $multiple == "multiple")
<select name="$attrInput.UserId.Key"
     #if($size.length())size="$size"#end multiple="multiple">
#else
<select name="$attrInput.UserId.Key"
     #if($size.length())size="$size"#end>
#end
 #if ($size.length() == 0)
 <option value="">Choose...</option>
 #end
   #foreach ($user in $module.getUsers($attr.Permission))
   #if ($user.PrimaryKey.toString().equals($currentValue.toString()))
   <option selected="selected" value="$user.PrimaryKey">$user.UserName</option>
   #else
   <option value="$user.PrimaryKey">$user.UserName</option>
   #end
 #end
</select>
#end

#macro (queryTypeSelectBox $query)
  #set ($queryGroup = $intake.Query.mapTo($query))
  <select name="$queryGroup.ScopeId.Key">
  #foreach ($scope in $scarabR.getScopes())
    <option value = "$scope.ScopeId" #if($scope.ScopeId.equals("$query.ScopeId")) selected="selected" #end>
    $scope.Name
    </option>
  #end
  </select>
#end

#macro (templateTypeSelectBox $templateInfo)
  #set ($group = $intake.IssueTemplateInfo.mapTo($templateInfo))
  <select name="$group.ScopeId.Key">
  #foreach ($scope in $scarabR.getScopes())
    <option value = "$scope.ScopeId" #if($scope.ScopeId.equals("$issue.ScopeId")) selected="selected" #end>
    $scope.Name
    </option>
  #end
  </select>
#end

#macro (frequencySelectBox $id)
<option value="" >Choose</option>
  #foreach ($frequency in $scarabR.Frequencies)
    <option value = "$frequency.FrequencyId" #if($frequency.FrequencyId.equals($id)) selected="selected" #end>
    $frequency.Name
    </option>
  #end
#end

#macro (indexedRows $count)
 #if ($count % 2 > 0)
    <tr class="a">
 #else
    <tr class="b">
 #end
#end

#macro (indexedRows2 $count)
 #if ($count % 2 > 0)
    <tr class="b">
 #else
    <tr class="a">
 #end
#end

#macro (rows)
 #indexedRows($velocityCount)
#end


#macro (datatitle $title)
<h3>$title</h3>
#end

#macro (pagetitle)
<h2>$page.Title</h2>
#end

#macro (selected $boolean)
#if ($boolean) selected="selected"#end
#end

#macro (checked $boolean)
#if ($boolean) checked="checked"#end
#end


#macro (option $optionModel)
<option #selected($optionModel.isSelected()) 
    value="$optionModel.Value">$optionModel.Name</option>
#end

#macro (paginate $resultsPerPage $pageNum $sortColumn $sortPolarity)
 <p class="paginate">
 #if($scarabR.PrevPage != 0)
  #set ($prevLink = $link.setPathInfo("resultsperpage", "$resultsPerPage.toString()").setPathInfo("pageNum", "$scarabR.PrevPage").setPathInfo("sortColumn", "$sortColumn").setPathInfo("sortPolarity", "$sortPolarity").setPage($scarabR.getCurrentTemplate()))
  <a href="$prevLink">&laquo;</a> previous |
 #end
 $pageNum of $scarabR.NbrPages
 #if ($scarabR.NextPage != 0)
  #set ($nextLink = $link.setPathInfo("resultsperpage", "$resultsPerPage.toString()").setPathInfo("pageNum", "$scarabR.NextPage").setPathInfo("sortColumn", "$sortColumn").setPathInfo("sortPolarity", "$sortPolarity").setPage($scarabR.getCurrentTemplate()))
  | <a href="$nextLink">&raquo;</a> next
 #end
 </p>
#end


#macro (textAreaSmall $key $value)
 <textarea cols="30" rows="2" wrap="virtual" name="$key">#if ($value)$value#end</textarea>
#end
#macro (textAreaMedium $key $value)
 <textarea cols="55" rows="5" wrap="virtual" name="$key">#if ($value)$value#end</textarea>
#end
#macro (textAreaLarge $key $value)
 <textarea cols="90" rows="10" wrap="virtual" name="$key">#if ($value)$value#end</textarea>
#end

#macro (attributeCreatedBy $attribute)
## FIXME: getUser() takes an Object param, not an int (the return type
## of getCreatedBy()).  Post Beta milestone,
## SCARAB_ATTRIBUTE.CREATED_BY needs to have its FK reference to
## TURBINE_USER.USER_ID defined.

#set ($creatorID = "$attribute.CreatedBy")
#if ($creatorID == "0")
    Default
#else
  #set ($createdUser = $scarabR.getUser($attribute.CreatedBy))
  <a href="mailTo:$createdUser.Email">$!createdUser.FirstName $!createdUser.LastName</a>
#end
#end

