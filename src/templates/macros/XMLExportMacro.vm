#macro (xmlExportCheckNotExists $fids)
#foreach ($fid in $fids)
  #if (!$scarabR.getIssue("${fid.Prefix}${fid.Count}"))
    <p><strong class="alert">Issue $!{fid.Prefix}$!{fid.Count} does not exist!</strong></p>
  #end
#end
#end

#*
 * xmlExport is the controller, and all formatting is done within macros
 * takes in a list of federated ids and loops thru them building the scarab xml
 *#

#macro (xmlExport $fids)
<?xml version="1.0" standalone="no"?>
<!DOCTYPE scarab SYSTEM "scarab.dtd">
<scarab>
#set ($currentModuleId = "false")
#foreach ($fid in $fids)
  #set ($issue = $scarabR.getIssue("${fid.Prefix}${fid.Count}"))
  #if ($issue)
    #set ($module = $scarabR.getModule("${issue.ModuleId}"))
    #if ($currentModuleId == "false")
      #xmlModuleHeader($module)
      #set ($currentModuleId = "true")
    #else
      #if ($currentModuleId != "true")

        </module>
        #xmlModuleHeader($module)
        #set ($currentModuleId = "false")
      #end
    #end
    #xmlIssue($issue)
  #end
#end
#if ($currentModuleId != "false")

  </module>
#end

</scarab>
#end

#macro (xmlUser $module $user)
#set ($roles = $securityAdmin.getACL($user).getRoles($module).getRolesArray())

    <user>
      <firstname>$user.FirstName</firstname>
      <lastname>$user.LastName</lastname>
      <email>$user.Email</email>
      <username>$user.UserName</username>
      #foreach ($role in $roles)
<role>$role.Name</role>
      #end</user>
#end

#macro (xmlModuleHeader $module)

  <module id="$module.ModuleId" parent="$module.ParentId">
    <name>$module.RealName</name>
    <owner-id>$scarabR.getUser($module.OwnerId).UserName</owner-id>
    <description>$module.Description</description>
    <url>$module.Url</url>
    <domain>$!module.Domain</domain>
    <code>$module.Code</code>

  #foreach ($user in $module.getUsers($securityAdmin.getPermissionsAsStrings()))
    #xmlUser($module $user)
  #end
#end

#macro (xmlIssue $issue)

    <issue id="$issue.IdCount">
      <artifact-type>$issue.IssueType.Name</artifact-type>
      #foreach ($activity in $issue.getActivity(true))
        #if (! $currentTransaction)
          #xmlTransactionHeader($activity.Transaction)
          #set ($currentTransaction = $activity.TransactionId)
        #elseif ($currentTransaction && $currentTransaction != $activity.TransactionId)

            </transaction>
            #xmlTransactionHeader($activity.Transaction)
            #set ($currentTransaction = $activity.TransactionId)
            #set ($transactionAttachment = $activity.Transaction.Attachment)
            #if ($transactionAttachment)
              #xmlAttachment($transactionAttachment)
            #end
        #end
        #xmlTransactionActivity($activity)
      #end
      #if ($currentTransaction)

        </transaction>
      #end

      #foreach ($depend in $issue.DependsRelatedByObserverId)

      <dependency>
        <type>$depend.DependType.Name</type>
        <parent>$depend.IssueRelatedByObservedId.FederatedId</parent>
      </dependency>
      #end
      #foreach ($depend in $issue.DependsRelatedByObservedId)

      <dependency>
        <type>$depend.DependType.Name</type>
        <child>$depend.IssueRelatedByObserverId.FederatedId</child>
      </dependency>
      #end

      #foreach ($attachment in $issue.Attachments)
        #if ($attachment.AttachmentType.Name != "MODIFICATION")
          #xmlAttachment($attachment)
        #end
      #end
      
    </issue>
#end

#macro (xmlAttachment $attachment)

      <attachment>
        <name>$attachment.Name</name>
        <type>$attachment.AttachmentType.Name</type>
        #set ($filePath = $attachment.FilePath)
        #if ($filePath)

         <path>$filePath</path>
        #else
          #set ($fileData = $attachment.DataAsString)
          #if ($fileData)

         <data>$fileData</data>      
          #end
        #end

        <mimetype>$attachment.MimeType</mimetype>
        <created-date format="$sdf.toPattern()">$sdf.format($attachment.CreatedDate)</created-date>
        <modified-date format="$sdf.toPattern()">$sdf.format($attachment.ModifiedDate)</modified-date>
        <created-by>$scarabR.getUser($attachment.CreatedBy).UserName</created-by>
        <modified-by>$!scarabR.getUser($attachment.ModifiedBy).UserName</modified-by>
      </attachment>
#end

#macro (xmlTransactionHeader $transaction)

      <transaction id="$transaction.TransactionId">
        <type>$transaction.TransactionType.Name</type>
        <committed-by>$scarabR.getUser($transaction.CreatedBy).UserName</committed-by>
#end

#macro (xmlTransactionActivity $activity)

        <activity>
          <attribute>
            <name>$activity.Attribute.Name</name>
            <value>$!activity.NewValue</value>
            #if ($activity.OldValue)#*
            *#<old-value>$activity.OldValue</old-value>
            #end#*
            *#<type>$activity.Attribute.AttributeType.Name</type>
          </attribute>
          <description>$activity.Description</description>
          #if ($activity.EndDate)
          <end-date format="$sdf.toPattern()">$sdf.format($activity.EndDate)</end-date>
          #else
          <end-date></end-date>
          #end
        </activity>
#end
