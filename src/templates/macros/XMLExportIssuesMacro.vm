#macro (XMLExportIssuesRender $foo)$foo#end
#if($renderedFromScreen)#XMLExportIssues($issueIdList)#end

#macro (XMLExportIssues $issueIdList)
#set ($module = $scarabR.CurrentModule)
<?xml version="1.0" standalone="no"?>
<!DOCTYPE scarab SYSTEM "$staticLink.setPath("/dtd/scarab-issues.dtd")">
<scarab>
  <module id="$module.ModuleId" parent="$module.ParentId">
    <name>$module.RealName</name>
    <owner-id>$scarabR.getUser($module.OwnerId).UserName</owner-id>
    <description>$module.Description</description>
    <url>$module.Url</url>
    <domain>$!module.Domain</domain>
    <code>$module.Code</code>
#foreach ($issueId in $issueIdList)
  #set ($issue = $scarabR.getIssue($issueId))
  #if ($issue)
  <issues>
    <issue id="$issue.IdCount">
      <artifact-type>$issue.IssueType.Name</artifact-type>
        <transactions>
        #foreach ($transaction in $issue.Transactions)

          <transaction id="$transaction.TransactionId">
            <type>$transaction.TransactionType.Name</type>
            <committed-by>$scarabR.getUser($transaction.CreatedBy).UserName</committed-by>
            <created-date format="$sdf.toPattern()">$sdf.format($transaction.CreatedDate)</created-date>
            <activities>
            #foreach ($activity in $transaction.ActivityList)

              <activity>
                <attribute>$scarabR.getAttribute($activity.AttributeId).Name</attribute>
                <old-numeric-value>$activity.OldNumericValue</old-numeric-value>
                <new-numeric-value>$activity.NewNumericValue</new-numeric-value>
                <old-user>$!scarabR.getUser($activity.OldUserId).UserName</old-user>
                <new-user>$!scarabR.getUser($activity.NewUserId).UserName</new-user>
                <old-option>$!scarabR.getAttributeOption($activity.OldOptionId).Name</old-option>
                <new-option>$!scarabR.getAttributeOption($activity.NewOptionId).Name</new-option>
                <old-value>$!activity.OldValue</old-value>
                <new-value>$!activity.NewValue</new-value>
                <description>$activity.Description</description>
              </activity>
            #end

            </activities>
            #set ($attachment = $transaction.Attachment)
            ## this is a hack because we are in a loop and transaction.Attachment returns
            ## null if there is no attachment...so the set statement fails
            #if ($attachment && $attachment.Class.Name != "java.lang.String")

            <attachment>
              <name>$attachment.Name</name>
              <type>$attachment.AttachmentType.Name</type>
              #set ($filePath = $attachment.RelativePath)
              #if ($filePath && $filePath.length() > 0)

              <path>$filePath</path>
              #set ($filePath = "")
            #else
            #set ($fileData = $attachment.DataAsString)
              #if ($fileData && $fileData.length() > 0)

              <data>$fileData</data>
              #set ($fileData = "")
              #end
            #end
        
              <mimetype>$attachment.MimeType</mimetype>
              <created-date format="$sdf.toPattern()">$sdf.format($attachment.CreatedDate)</created-date>
              <modified-date format="$sdf.toPattern()">$sdf.format($attachment.ModifiedDate)</modified-date>
              <created-by>$scarabR.getUser($attachment.CreatedBy).UserName</created-by>
              <modified-by>$!scarabR.getUser($attachment.ModifiedBy).UserName</modified-by>
            </attachment>
              #set ($attachment = "")
            #end

          </transaction>
        #end

        </transactions>

        <dependencies>
        #foreach ($depend in $issue.DependsRelatedByObserverId)

          <dependency>
            <type>$depend.DependType.Name</type>
            <parent>$depend.IssueRelatedByObservedId.FederatedId</parent>
          </dependency>
        #end
        #foreach ($depend in $issue.DependsRelatedByObservedId)

          <dependency>
            <type>$depend.DependType.Name</type>
            <child>$depend.IssueRelatedByObserverId.FederatedId</child>
          </dependency>
        #end

        </dependencies>
    </issue>
  #end

  </issues>
#end

  </module>
</scarab>
#end
