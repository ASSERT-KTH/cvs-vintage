/******************************************************************************* * Copyright (c) 2006 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at * http://www.eclipse.org/legal/epl-v10.html * * Contributors: *     IBM Corporation - initial API and implementation ******************************************************************************/package org.eclipse.ui.internal.handlers;import org.eclipse.core.expressions.EvaluationResult;import org.eclipse.core.expressions.Expression;import org.eclipse.core.expressions.ExpressionInfo;import org.eclipse.core.expressions.IEvaluationContext;import org.eclipse.ui.ISources;import org.eclipse.ui.internal.registry.IActionSetDescriptor;/** * <p> * An expression that evaluates whether a particular action set is active. * </p> * <p> * This class is not intended for use outside of the * <code>org.eclipse.ui.workbench</code> plug-in. * </p> * <p> * <strong>EXPERIMENTAL</strong>. This class or interface has been added as * part of a work in progress. There is a guarantee neither that this API will * work nor that it will remain the same. Please do not use this API without * consulting with the Platform/UI team. * </p> *  * @since 3.2 */public final class ActionSetExpression extends Expression {	/**	 * The identifier of the action set that must be active for this expression	 * to evaluate to <code>true</code>. This value is never	 * <code>null</code>.	 */	private final String actionSetId;	/**	 * Constructs a new instance of {@link ActionSetExpression}.	 * 	 * @param actionSetId	 *            The identifier of the action set that must be active for this	 *            expression to evaluate to <code>true</code>; must not be	 *            <code>null</code>.	 */	ActionSetExpression(final String actionSetId) {		if (actionSetId == null) {			throw new NullPointerException(					"The action set identifier cannot be null"); //$NON-NLS-1$		}		this.actionSetId = actionSetId;	}	public final void collectExpressionInfo(final ExpressionInfo info) {		info.addVariableNameAccess(ISources.ACTIVE_ACTION_SETS_NAME);	}	public final EvaluationResult evaluate(final IEvaluationContext context) {		final Object value = context				.getVariable(ISources.ACTIVE_ACTION_SETS_NAME);		if (value instanceof IActionSetDescriptor[]) {			final IActionSetDescriptor[] descriptors = (IActionSetDescriptor[]) value;			for (int i = 0; i < descriptors.length; i++) {				final IActionSetDescriptor descriptor = descriptors[i];				final String currentId = descriptor.getId();				if (actionSetId.equals(currentId)) {					return EvaluationResult.TRUE;				}			}		}		return EvaluationResult.FALSE;	}}