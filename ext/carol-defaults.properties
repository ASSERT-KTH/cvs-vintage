# carol-defaults.properties	1.0 02/07/15
#
# Copyright (C) 2002 - INRIA (www.inria.fr)
#
# CAROL: Common Architecture for RMI ObjectWeb Layer
#
# This library is developed inside the ObjectWeb Consortium,
# http://www.objectweb.org
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or any later version.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
# USA
#
# default carol properties
# you can add any defaults properties you want

# default activated protocols (use default because of the 
# multiple configuration with jndi and url)
carol.rmi.activated.default=jrmp

# start or not all non started name services
carol.start.ns=true

# use carol rmi (Multi PORD)
carol.start.rmi=true

# use carol naming (Multi JNDI)
carol.start.jndi=true

######################################################################
#                   Configuration for Rmi JRMP                      #
######################################################################

# portable remote object delegate class for this protocol (class name with package)
carol.rmi.jrmp.PortableRemoteObjectClass=org.objectweb.carol.rmi.multi.JrmpPRODelegate

# Name service class for this protocol
carol.rmi.jrmp.NameServiceClass=org.objectweb.carol.jndi.ns.JRMPRegistry

# here, for jndi we take the jndi.properties but we can make some :
# configuration for rmi jrmp jndi
# java.naming.factory.initial property
carol.jndi.jrmp.java.naming.factory.initial=com.sun.jndi.rmi.registry.RegistryContextFactory
# java.naming.provider.url property
carol.jndi.jrmp.java.naming.provider.url=rmi://localhost:1099

# default port number (0: no port configured by default)
carol.jvm.jrmp.server.portnumber=0

######################################################################
#                   Configuration for Rmi IIOP                       #
######################################################################

# portable remote object delegate class for this protocol (full class name with package)
carol.rmi.iiop.PortableRemoteObjectClass=com.sun.corba.se.internal.javax.rmi.PortableRemoteObject

# Name service class for this protocol
carol.rmi.iiop.NameServiceClass=org.objectweb.carol.jndi.ns.IIOPCosNaming

# configuration for rmi jrmp jndi
# java.naming.factory.initial property
carol.jndi.iiop.java.naming.factory.initial=org.objectweb.carol.jndi.iiop.IIOPReferenceContextWrapperFactory
# java.naming.provider.url property
carol.jndi.iiop.java.naming.provider.url=iiop://localhost:2000

######################################################################
#                   Configuration for JEREMIE                        #
######################################################################

# portable remote object delegate class for this protocol (class name with package)
carol.rmi.jeremie.PortableRemoteObjectClass=org.objectweb.carol.rmi.multi.JeremiePRODelegate

# Name service class for this protocol
carol.rmi.jeremie.NameServiceClass=org.objectweb.carol.jndi.ns.JeremieRegistry

# here, for jndi we take the jndi.properties but we can make some :
# configuration for rmi jrmp jndi
# java.naming.factory.initial property
carol.jndi.jeremie.java.naming.factory.initial=org.objectweb.jeremie.libs.services.registry.jndi.JRMIInitialContextFactory
# java.naming.provider.url property
carol.jndi.jeremie.java.naming.provider.url=jrmi://localhost:2001

######################################################################
#                   Configuration for CMI                            #
######################################################################

# portable remote object delegate class for this protocol (class name with package)
carol.rmi.cmi.PortableRemoteObjectClass=org.objectweb.carol.rmi.multi.CmiPRODelegate

# Name service class for this protocol
carol.rmi.cmi.NameServiceClass=org.objectweb.carol.jndi.ns.CmiRegistry

# here, for jndi we take the jndi.properties but we can make some :
# configuration for rmi jrmp jndi
# java.naming.factory.initial property
carol.jndi.cmi.java.naming.factory.initial=org.objectweb.carol.halborb.jndi.CmiInitialContextFactory

# java.naming.provider.url property
carol.jndi.cmi.java.naming.provider.url=jrmi://localhost:2002

######################################################################
#                   Configuration for LMI                            #
######################################################################

# portable remote object delegate class for this protocol (class name with package)
carol.rmi.lmi.PortableRemoteObjectClass=org.objectweb.carol.rmi.multi.LmiPRODelegate

# Name service class for this protocol
carol.rmi.lmi.NameServiceClass=org.objectweb.carol.jndi.ns.LmiRegistry

# here, for jndi we take the jndi.properties but we can make some :
# configuration for rmi jrmp jndi
# java.naming.factory.initial property
carol.jndi.lmi.java.naming.factory.initial=org.objectweb.carol.jndi.lmi.LmiInitialContextFactory

# java.naming.provider.url property (only for carol, no importance)
carol.jndi.lmi.java.naming.provider.url=lmi://nohost:0

######################################################################
#                   Configuration for Interceptor                    #
######################################################################

# xtra properties for the jvm (only in use in the multi protocol case)

# Protocol Interceptors initializer class (this class is nessesary for multi rmi)
multi.carol.jvm.org.objectweb.PortableInterceptor.JRMPInitializerClass.org.objectweb.carol.rmi.jrmp.interceptor.ProtocolInterceptorInitializer

# Protocol Interceptors initializer class (this class is nessesary for multi rmi)
multi.carol.jvm.org.omg.PortableInterceptor.ORBInitializerClass.org.objectweb.carol.rmi.iiop.interceptor.ProtocolInitializer
