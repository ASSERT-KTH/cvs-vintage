<?xml version="1.0"?>
<document url="./status.xml">
<properties>
<author>Craig R. McClanahan</author>
<author>Ted Husted</author>
<author>Steve Byrne</author>
<title>The Struts User's Guide - Development Roadmap</title>
</properties>
<body>
<chapter href="status" name="Development Roadmap">

<section href="status" name="Development Roadmap">
<p><font size="-2">$Id: status.xml,v 1.17 2002/11/24 05:28:54 jmitchell Exp $</font></p>
<p>
This document outlines some of changes we expect to
see in future releases of Struts.
</p>
<p>
This document is provided for discussion purposes only.
All releases and changes to the codebase are subject to
<a href="http://jakarta.apache.org/site/decisions.html">a vote</a> of the
<a href="volunteers.html#committers">Struts Committers</a>.
</p>
</section>

<section href="struts_1_1" name="Struts 1.1">
<p>
Struts 1.1 provides a number of functional enhancements, including
support for application modules. Other enhancements include
action-based authentication, use of Commons-Datasource and
Commons-Logging packages, declarative exception handling,
Dynabean support, Plug-In Actions, and a pluggable request processor.
Several extensions are now bundled with the Struts distribution,
including the Nested taglib, Tiles, and the Commons Validator.
An optional Struts-el taglib makes it easy to use Struts with JSTL.
Backward-compatiblity with Struts 1.0.x is a primary goal of this release.
</p>
<p>
Remaining tasks:
</p>
<ul>
<li>Finishing touches on Struts-el</li>
<li>Refactor Tiles to be module aware</li>
<li>Commons-Resource integration</li>
<li>Other routine changes per
<a href="http://issues.apache.org/bugzilla/buglist.cgi?bug_status=UNCONFIRMED&amp;amp;bug_status=NEW&amp;amp;bug_status=ASSIGNED&amp;amp;bug_status=REOPENED&amp;amp;email1=&amp;amp;emailtype1=substring&amp;amp;emailassigned_to1=1&amp;amp;email2=&amp;amp;emailtype2=substring&amp;amp;emailreporter2=1&amp;amp;bugidtype=include&amp;amp;bug_id=&amp;amp;changedin=&amp;amp;votes=&amp;amp;chfieldfrom=&amp;amp;chfieldto=Now&amp;amp;chfieldvalue=&amp;amp;product=Struts&amp;amp;version=Unknown&amp;amp;version=1.0.1+Final&amp;amp;version=1.0+Final&amp;amp;version=1.0+Beta+3&amp;amp;version=1.0+Beta+2&amp;amp;version=1.0+Beta+1&amp;amp;version=0.5+Final&amp;amp;version=1.0.2+Final&amp;amp;version=1.1+Beta+1&amp;amp;version=1.1+Beta+2&amp;amp;version=Nightly+Build&amp;amp;short_desc=&amp;amp;short_desc_type=allwordssubstr&amp;amp;long_desc=&amp;amp;long_desc_type=allwordssubstr&amp;amp;bug_file_loc=&amp;amp;bug_file_loc_type=allwordssubstr&amp;amp;keywords=&amp;amp;keywords_type=anywords&amp;amp;field0-0-0=noop&amp;amp;type0-0-0=noop&amp;amp;value0-0-0=&amp;amp;cmdtype=doit&amp;amp;order=Bug+Number">Bugzilla</a>
and <a href="http://nagoya.apache.org/eyebrowse/SummarizeList?listId=41">Dev list</a></li>
</ul>
</section>

<section href="struts_1_2" name="Struts 1.2.x">
<p>
Struts 1.2.x will include additional functional enhancements
along the same lines as Struts 1.1, such as the items marked
<a href="http://issues.apache.org/bugzilla/buglist.cgi?bug_status=RESOLVED&amp;resolution=LATER&amp;email1=&amp;emailtype1=substring&amp;emailassigned_to1=1&amp;email2=&amp;emailtype2=substring&amp;emailreporter2=1&amp;bugidtype=include&amp;bug_id=&amp;changedin=&amp;votes=&amp;chfieldfrom=&amp;chfieldto=Now&amp;chfieldvalue=&amp;product=Struts&amp;version=Unknown&amp;version=1.0+Beta+2&amp;version=1.0+Beta+1&amp;version=0.5+Final&amp;version=1.0.2+Final&amp;version=1.0.1+Final&amp;version=1.0+Final&amp;version=1.0+Beta+3&amp;version=1.1+Beta+2&amp;version=1.1+Beta+1&amp;version=Nightly+Build&amp;short_desc=&amp;short_desc_type=allwordssubstr&amp;long_desc=&amp;long_desc_type=allwordssubstr&amp;bug_file_loc=&amp;bug_file_loc_type=allwordssubstr&amp;keywords=&amp;keywords_type=anywords&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=&amp;cmdtype=doit&amp;order=Bug+Number">LATER in Bugzilla</a>.
The platform requirements will remain the same
(Servlet 2.2 / JSP 1.1). The release will focus on refactoring
of existing functionality, with a continued emphasis on backward
compatibility.
</p>
<p>
The Struts 1.2.x series is expected to incorporate several
incremental releases (in contrast to Struts 1.1).
</p>
<p>
Features under discussion include:
</p>
<ul>
<li>Proposing ActionError/ActionErrors as generic Commons "message" components</li>
<li>"Nested" or "hierarchical" and locale-sensitive modules</li>
<li>Extending one configuration element from another, as is done with Tiles Definitions</li>
<li>Enhanced interoperability with JSTL and JSF</li>
<li>Making Tiles JSTL-aware and available to other presentation systems (XLST, Velocity)</li>
<li>Better support for XLST technology (e.g. stxx)</li>
<li>Better support for unit testing within the framework (e.g.
<a href="http://sourceforge.net/projects/strutstestcase/">Struts TestCase</a>)
or perhaps even a distinct unit testing framework.</li>
<li>Encouraging the use of <a href="http://sourceforge.net/projects/xdoclet/">XDoclet</a> 
and other code generation technologies to streamline development.</li>
<li>Moving to <a href="http://jakarta.apache.org/turbine/maven/index.html">Maven</a> for project management</li>
</ul>
<p>
More detail on work-in-progress may be found in
<a href="http://issues.apache.org/bugzilla/buglist.cgi?bug_status=RESOLVED&amp;resolution=LATER&amp;email1=&amp;emailtype1=substring&amp;emailassigned_to1=1&amp;email2=&amp;emailtype2=substring&amp;emailreporter2=1&amp;bugidtype=include&amp;bug_id=&amp;changedin=&amp;votes=&amp;chfieldfrom=&amp;chfieldto=Now&amp;chfieldvalue=&amp;product=Struts&amp;version=Unknown&amp;version=1.0+Beta+2&amp;version=1.0+Beta+1&amp;version=0.5+Final&amp;version=1.0.2+Final&amp;version=1.0.1+Final&amp;version=1.0+Final&amp;version=1.0+Beta+3&amp;version=1.1+Beta+2&amp;version=1.1+Beta+1&amp;version=Nightly+Build&amp;short_desc=&amp;short_desc_type=allwordssubstr&amp;long_desc=&amp;long_desc_type=allwordssubstr&amp;bug_file_loc=&amp;bug_file_loc_type=allwordssubstr&amp;keywords=&amp;keywords_type=anywords&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=&amp;cmdtype=doit&amp;order=Bug+Number">Bugzilla</a>.
If any of these features are important to you, please don't hesitate to <a href="./faqs/helping.html">help with the development effort</a>.
</p>

</section>

<section href="struts_2_0" name="Struts 2.0.x">
<p>
Struts 2.0.x will include broader enhancements.
The implementation will expect a minimum platform of
Servlet 2.3 / JSP 1.2 and refactorings may include
the use of Filters. It is expected that Struts 2.0.x
will rely on JSTL and the JavaServer Faces API as 
supporting technologies. However, the focus of the Struts 
framework will remain on the Controller aspect of a 
Model 2/MVC architecture. The core framework will 
continue to be both Model and View independent.
</p>
<p>
Target features include:
</p>
<ul>
<li>Refactoring for Filters and other new technologies</li>
<li>Direct support for JSTL/JSF taglibs and the JSF API</li>
<li>Better support for other presentation layers, such as XLST (as in 1.2.x)</li>
<li>Comprehensive unit tests (as in 1.2.x)</li>
</ul>
<p>
Development of Struts 2.0 will include taking a completely fresh look at 
the architecture. The goal for 2.0 will be to incorporate everything we've 
learned in the past years of Struts usage, and create something even better. 
</p>
<p>
Of course, it is anticipated that the Struts team will continue to support 
1.x users for a long time with bugfixes and incremental enhancements.
</p>
</section>

<section href="proposals" name="Relevant Proposals">
<ul>
<li><a href="../proposals/struts-faces.html">struts-faces taglib</a></li>
<li><a href="proposals/release-plan-1.1b2.html">Release Plan 1.1-b2</a></li>
<li><a href="proposals/workflow.html">Workflow Proposal</a></li>
</ul>
</section>

<section href="guidelines" name="Coding Conventions and Guidelines">
<p>
Source code and documentation contributed to the Struts repositories 
should observe the:
</p>
<ul>
<li>
  <a href="http://jakarta.apache.org/site/source.html">Jakarta project guidelines</a>,
</li>
<li>
  <a href="http://www.ambysoft.com/elementsJavaStyle.html">Elements of Java Style</a>, and 
</li>
<li>
  <a href="http://java.sun.com/j2se/javadoc/writingdoccomments/">How to write Doc Comments</a>
</li>
</ul>
<p>
as core references regarding the formatting of code and documentation.
</p>
<p>
<strong>Clarifications</strong>
</p>
<ul>
<li>
  First, "Observe the style of the original". 
  Resist the temptation to make stylistic changes for their own sake. 
  But, if you must reformat code, commit style changes separately from code changes. 
  Either change the style, commit, and then change the code, or vice-versa. 
</li>
<li>
  Set editors to replace tabs with spaces, and do not trim trailing spaces. 
</li>
<li>
  Specify imported classes (do not use <code>.*</code>). 
</li>
<li>
  Write all if/else statements as full blocks with each clause within braces, 
  unless the entire statement fits on the same line. 
</li>
<li>
  Use <code>:FIXME:</code> and <code>:TODO:</code> tokens to mark follow up notes in code. 
  You may also include your Apache username and the date. 
  <code>:FIXME: we need to do this sometime (husted 2002-11-14)</code>
</li>
<li>
 Use <code>@since</code> to document changes between Struts versions, 
 as in <code>@since Struts 1.1</code>.
</li>
<li>
 Wrap lines of code and JavaDoc at column 78. 
 You can include a "comment rule" in the source to help with this.<br />
 <small> 
 // ------------------------------------------------------------------------ 78
 </small>
</li>
<li>
 Please do your best to provide high-quality JavaDocs for all source code elements.
 Package overviews (aka "Developer Guides") are also encouraged.
</li>
<li>
 When working on a bugfix, please first write a <a href="http://www.junit.org">JUnit</a> test 
 that proves the bug exists, and then use the test to prove the bug is fixed. =:0)
</li>
<li>
 When working on an enhancement, please feel free to use test-driven design and 
 write the test first &lt;head-slap/>.
 For more about TDD, see the <a href="http://sourceforge.net/projects/mockobjects">MockObjects project</a>.
</li>
<li>
 As files are updated from year to year, the copyright on each file should be 
 extended to include the current year. 
 You do not need to change the copyright year unless you change the file. 
 Every source file should include the current Apache License and copyright.
</li>
<li>
 Provide high-level API compatibility for any changes made within the same major 
 release series (#.x). 
 Changes which adversely affect compatibility should be slotted for the next major 
 release series (++#.x).
</li>
<li>
 Our favorite books about programming are 
 <a href="http://www.amazon.com/exec/obidos/ISBN=0201633612/hitchhikeguidetoA/">Design Patterns</a> and 
 <a href="http://www.amazon.com/exec/obidos/ISBN=0201485672/hitchhikeguidetoA/">Refactoring</a>. 
</li>
<li>
 Our favorite book about open source development is the 
 <a href="http://www.amazon.com/exec/obidos/ISBN=1565927249/hitchhikeguidetoA/">The Cathedral and the Bazaar</a>.
</li>
<li>
 Our favorite science fiction author is 
 <a href="http://www.nitrosyncretic.com/rah/">Robert Heinlein</a>. 
 <a href="http://www.tuxedo.org/~esr/jargon/html/entry/TANSTAAFL.html"><font size="-1">TANSTAAFL</font></a>.<br />
 (Except on Friday, when we favor 
 <a href="http://carbon.cudenver.edu/~mstilman/zaphod/">Douglas Adams</a>. 
 <a href="http://news.bbc.co.uk/1/hi/uk/1326657.stm"><font size="-1">SLATFATF</font></a>.)
</li>
</ul>
</section>

<section>
<p><font size="-2">Website and Javadocs updated from CVS: 2002 NOV 21 by husted.</font></p>
</section>

</chapter></body></document>
