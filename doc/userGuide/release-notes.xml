<?xml version="1.0"?>
<document url="release-notes.html">
  <properties>
    <author>Craig R. McClanahan</author>
    <author>Robert Leland</author>
    <author>Ted Husted</author>
    <author>Martin Cooper</author>
    <title>Struts Release Notes (Nightly Build)</title>
  </properties>
  <body>
    <section name="Introduction" href="Introduction">
      <p>This section contains release notes for
      <strong>nightly build</strong>of the Struts Framework, for changes that have taken place since
      <a href="release-notes-1.1.html">Version 1.1</a>was released.</p>
    </section>
    <section name="What's Included?" href="Included">
      <p>The binary distribution of this release includes the following files relevant to Struts:</p>
      <ul>
        <li>
        <code>INSTALL.txt</code>- Brief installation instructions. For more detail, see the
        <code>Struts User Guide</code>, either through the Struts Documentation application or online at
        <a href="http://jakarta.apache.org/struts/">http://jakarta.apache.org/struts/</a>.</li>
        <li>
        <code>LICENSE.txt</code>- The Apache Software Foundation license that defines the terms under which you can use Struts (and other software licensed by Apache).</li>
        <li>
        <code>README.txt</code>- A brief introduction to Struts.</li>
        <li>
        <code>contrib/</code>- Additional libraries developed by the Struts team which are not yet part of the core distribution.</li>
        <li>
        <code>lib/</code>- Directory containing files you will need in your own applications. The individual files of interest are:
        <ul>
          <li>
          <code>commons-*-#.#.jar</code>- Release packages from the
          <a href="http://jakarta.apache.org/commons/">Jakarta Commons Project</a>that Struts relies on. You are welcome to use these classes in your own applications. These JAR files should be copied into the
          <code>/WEB-INF/lib</code>directory of your web application.</li>
          <li>
          <code>jakarta-oro-#.#.jar</code>- JAR file containing the Jakarta ORO package, utilitied by the Struts Valdiator. You must place this file in the
          <code>/WEB-INF/lib</code>directory of your web application to use the Struts Validator package.</li>
          <li>
          <code>struts-#.#.jar</code>- JAR file that contains the compiled Java classes of Struts. You must place this file in the
          <code>/WEB-INF/lib</code>directory of your web application.</li>
          <li>
          <code>struts-*.tld</code>- The tag library descriptor files for the Struts tag libraries (bean, html, logic, and nested). When these taglibs are used, you must place these files in the
          <code>/WEB-INF</code>directory of your web application and reference them with appropriate
          <code>&lt;taglib&gt;</code>directives in your web.xml file.</li>
          <li>
          <code>struts-config_1_2.dtd</code>- The Document Type Definition (DTD) for the Struts 1.2 configuration file (which is typically named
          <code>/WEB-INF/struts-config.xml</code>. Your configuration file will be validated against an internal copy of this DTD -- this copy is available for reference purposes only.</li>
          <li>
          <code>struts-config_1_1.dtd</code>- The Document Type Definition (DTD) for the Struts 1.1 configuration file (which is typically named
          <code>/WEB-INF/struts-config.xml</code>. Your configuration file will be validated against an internal copy of this DTD -- this copy is available for reference purposes only.</li>
          <li>
          <code>struts-config_1_0.dtd</code>- The Document Type Definition (DTD) for the Struts 1.0 configuration file (which is typically named
          <code>/WEB-INF/struts-config.xml</code>. Your configuration file will be validated against an internal copy of this DTD -- this copy is available for reference purposes only.</li>
          <li>
          <code>web-app_2_2.dtd</code>- The Document Type Definition (DTD) for web.xml files conforming to the Servlet 2.2 specification. This copy is for reference purposes only.</li>
          <li>
          <code>web-app_2_3.dtd</code>- The Document Type Definition (DTD) for web.xml files conforming to the Servlet 2.3 specification. This copy is for reference purposes only.</li>
        </ul></li>
        <li>
        <code>webapps/</code>- Web Application Archive (WAR) files for the web applications that are included with Struts.</li>
      </ul>
      <p>The following Jakarta Commons libraries are included with this release of Struts:</p>
      <ul>
        <li>Commons BeanUtils 1.6.1</li>
        <li>Commons Collections 2.1</li>
        <li>Commons Digester 1.5</li>
        <li>Commons FileUpload 1.0</li>
        <li>Commons Lang 2.0</li>
        <li>Commons Logging 1.0.3</li>
        <li>Commons Validator 1.1.1-dev</li>
      </ul>
    </section>
    <section name="What's new?" href="New">
      <p>This section highlights new features added and critical changes made since the last release. Other interesting changes are listed in the
      <a href="#Changes">What Changed?</a>section. For a complete review of all changes, see the
      <a href="../reports/changelog-report.html">changelog reports</a>. Subscribers to the
      <a href="../using.html#Lists">struts-dev mailing list</a>, receive reports of all changes as they are made.</p>
      <p>
      <strong>Deprecations</strong>- Many constructs were deprecated for the Struts 1.1 release, most of which have now been removed. Before moving to this release, you should clean-compile your application with deprecation warnings enabled. Alternatives should be available for all decprecated constructs.
      <strong>You are strongly advised</strong> to resolve all Struts 1.1. deprecations before moving to this release. Removed constructs most likely to affect developers are:</p>
      <ul>
        <li>Using the statics from the
        <code>org.apache.struts.Action</code>class. Use
        <code>org.apache.struts.Global</code>statics instead.</li>
        <li>Calling
        <code>Action.perform</code>. Use
        <code>Action.execute</code> instead.</li>
      </ul>
      <p>
      <strong>TagUtils</strong>- Many utility methods previously found in
      <code>org.apache.struts.utils.RequestUtils</code> have been moved to
      <code>org.apache.struts.taglibs.TagUtils</code>. We are working toward creating a general "presentation utility" class that technologies like Custom Tags can use to access the framework API. If you have custom tags that called RequestUtil methods, they may need to call TagUtils instead.</p>
    </section>
    <section name="What Changed?" href="Changes">
      <p>This section highlights some of the changes that have taken place since the last release. For a complete review of all changes, see the
      <a href="../reports/changelog-report.html">changelog reports</a>. Subscribers to the
      <a href="../using.html#Lists">struts-dev mailing list</a>, receive reports of all changes as they are made.</p>
      <p>
      <strong>Configuration Changes</strong>&#160;[
      <code>/conf/shared</code>]</p>
      <ul>
        <li>
        <code>
          <a href="http://jakarta.apache.org/struts/dtds/struts-config_1_2.dtd">struts-config_1_2.dtd</a>
        </code>is preferred to the deprecated Struts Configuration 1.1 DTD. The new DTD adds two new elements &lt;display-name&gt; and &lt;description&gt; to the struts-config element. These elements are for use by struts config file tools and document generation. In the Struts 1.2.x series, existing Struts configuration files can be loaded using either DTD version.</li>
        <li>2003-07-04 struts-config_1_2.dtd: Added 1.2 struts-config.dtd. This is a copy of the 1.1 DTD except that the &lt;data-source&gt; "type" attribute is now required because Struts does not supply a default DataSource implementation.</li>
      </ul>
      <p>
      <strong>Default Package Changes</strong>&#160;[
      <code>org.apache.struts</code>]</p>
      <ul>
        <li>2003-07-04 - Globals: Removed deprecated APPLICATION_KEY.</li>
        <li>2003-07-03 - Globals,ActionServlet,RequestUtils: Moved initialization of module prefix list to the new ActionServlet.initModulePrefixes() method from RequestUtils.getModulePrefixes() because of a potential race condition documented in PR# 21091. This also required a move of the RequestUtils.PREFIXES constant to Globals.MODULE_PREFIXES_KEY.</li>
      </ul>
      <p>
      <strong>Action Package Changes</strong>&#160;[
      <code>org.apache.struts.action</code>]</p>
      <ul>
        <li>2003-07-26 - Action: getLocale() now calls RequestUtils.getUserLocale() to prevent session creation.</li>
        <li>2003-07-04 - Action,ActionException: Removed deprecated getResources() method.</li>
        <li>2003-07-04 - Action: Removed deprecated perform() methods.</li>
        <li>2003-07-03 - ActionServlet: Removed support for some of the deprecated servlet init parameters.</li>
        <li>2003-07-03 - Globals,ActionServlet,RequestUtils: Moved initialization of module prefix list to the new ActionServlet.initModulePrefixes() method from RequestUtils.getModulePrefixes() because of a potential race condition documented in PR# 21091. This also required a move of the RequestUtils.PREFIXES constant to Globals.MODULE_PREFIXES_KEY.</li>
        <li>2003-07-02 - RequestProcessor: Deprecated log() methods in favor of commons-logging.</li>
        <li>2003-07-02 - ActionSerlvet: Removed deprecated method.</li>
        <li>2003-07-02 - ActionServlet: Removed references to deprecated ApplicationConfig class.</li>
        <li>2003-07-02 - ActionServlet,NoOpAction: Removed deprecated ActionServlet debug level and logging methods.</li>
        <li>2003-07-02 - RequestProcessor: Changed processRoles() to send a 403 Forbidden response if the role check fails. Also removed deprecated methods.</li>
        <li>2003-07-01 - Action: Removed deprecated constants and toHex() method.</li>
      </ul>
      <p>
      <strong>Actions Package Changes</strong>&#160;[
      <code>org.apache.struts.actions</code>]</p>
      <ul>
        <li>2003-07-11 - DispatchAction,ForwardAction,IncludeAction,SwitchAction: Throw exceptions from execute() method instead of sending a failure response to the client. This allows the exception handling mechanism to respond to the error gracefully.</li>
        <li>2003-07-03 - LookupDispatchAction: Fixed synchronization problem (PR# 21224). Also refactored some code into a new initLookupMap() method.</li>
        <li>The DispatchAction now provides default cancel handler that can be overridden. It also also possible to specify the default handler name.</li>
        <li>The LookupDispatchAction now provides default cancel handler that can be overridden. It also also possible to specify the default handler name.</li>
      </ul>
      <p>
      <strong>Config Package</strong>&#160;[
      <code>org.apache.struts.config</code>]</p>
      <ul>
        <li>2003-07-27 - ConfigHelper: Deprecate methods() since they return objects that have been deprecated. The ModuleConfig object should be used to lookup these items.</li>
        <li>2003-07-16 - ModuleConfigFactory: Catch only relevant exceptions instead of Throwable and made LOG final.</li>
        <li>2003-07-04 - struts-config_1_2.dtd, ControllerConfig.java: Removed deprecated debug controller attribute.</li>
        <li>2003-07-04 - ActionConfig: Removed deprecated perform() methods.</li>
        <li>ApplicationConfig: removed in favor of ModuleConfig.</li>
      </ul>
      <p>
      <strong>Contrib Packages</strong>&#160;[
      <code>/contrib</code>]</p>
      <ul>
        <li>2003-07-26 - Updated Struts-EL tags to match recent attribute changes to tags in base library.</li>
      </ul>
      <p>
      <strong>Plugins Package</strong>&#160;[
      <code>org.apache.struts.plugins</code>]</p>
      <ul>
        <li>No signficant changes.</li>
      </ul>
      <p>
      <strong>Taglib Package Changes</strong>&#160;[
      <code>org.apache.struts.taglib</code>]</p>
      <ul>
        <li>2003-07-26 - TagUtils,RequestUtils: Added TagUtils class for taglibs to use instead of RequestUtils. We should migrate any method in RequestUtils that takes a PageContext parameter and/or throws JspException. A clean separation will help keep RequestUtils smaller and allow the taglibs to be easily split off of the core Struts distribution.</li>
      </ul>
      <p>
      <strong>Bean Taglib Package Changes</strong>&#160;[
      <code>org.apache.struts.taglib.bean</code>]</p>
      <ul>
        <li>2003-07-13 MessageTag: Simplified args[] creation, deprecated unused defaultLocale variable.</li>
      </ul>
      <p>
      <strong>HTML Taglib Package Changes</strong>&#160;[
      <code>org.apache.struts.taglib.html</code>]:</p>
      <ul>
        <li>2003-07-08 - struts-html.xml,FormTag,JavascriptValidatorTag: Added scriptLanguage property to the form and javascript tags for PR# 17234. This property is ignored in XHTML mode but allows developers to turn off the "language" attribute of &lt;script&gt; tags in HTML.</li>
        <li>2003-07-03 - FormTag: Added disabled check to focus JavaScript</li>
        <li>2003-07-02 - HtmlTag: Removed deprecated method.</li>
        <li>2003-07-02 - BaseHandlerTag: Use RequestUtils.isXhtml() instead of duplicating logic.</li>
        <li>2003-07-02 - ErrorsTag: Don't render new lines</li>
      </ul>
      <p>
      <strong>Logic Taglib Package Changes</strong>&#160;[
      <code>org.apache.struts.taglib.logic</code>]:</p>
      <ul>
        <li>2003-07-31 - PresentTag,RedirectTag: Replace depricated method calls with non-deprecated ones.</li>
      </ul>
      <p>
      <strong>Nested Taglib Package Changes</strong>&#160;[
      <code>org.apache.struts.taglib.nested</code>]:</p>
      <ul>
        <li>2003-07-03 - struts-nested.xml: Added styleId to nested:hidden</li>
      </ul>
      <p>
      <strong>Tiles Taglib Package Changes</strong>&#160;[
      <code>org.apache.struts.taglib.tiles</code>]:</p>
      <ul>
        <li>2003-07-27 - xmlDefinition/XmlParser: Remove deprecated/non functional digester logging method.</li>
        <li>2003-07-10 - TagUtils: Deprecated getProperty() because it provided no value over calling PropertyUtils.getProperty() directly.</li>
        <li>2003-07-08 - TilesServlet,ActionComponentServlet: Formatted code, removed deprecated constant.</li>
        <li>2003-07-04 - ActionController: Call Action.execute() instead of perform().</li>
      </ul>
      <p>
      <strong>Tiles Package Changes</strong>&#160;[
      <code>org.apache.struts.tiles</code>]:</p>
      <ul>
        <li>2003-07-31 - xmlDefinition/I18nFactorySet: Replace deprecated constant reference with it's base interface equal.</li>
        <li>2003-07-31 - actions/DefinitionDispatcherAction: Replace deprecated method with current one. Still one method DefinitionUtil.setActionDefinition that doesn't have a replacement. It's a simple method but I don't know where a good place to move it would be.</li>
        <li>2003-07-31 - actions/ReloadDefinitionsAction: Use TilesUtil.createDefinitionsFactory(request,context) instead of deprecated method().</li>
        <li>2003-07-21 - struts-*config.xml: Remove the use of the deprecated action NoOpAction. Replace by ForwardAction.</li>
        <li>2003-07-21 - *Action: Replace the deprecated perform(..) method by the new execute(...) method.</li>
        <li>2003-07-12 - DefinitionDispatcherAction: Use commons-logging to record error messages instead of printing them to the response.</li>
        <li>2003-07-10 - TilesAction: Removed deprecated perform() method.</li>
        <li>2003-07-09 - Removed deprecated TilesUtil.applicationClass() method.</li>
        <li>2003-07-08 - DefinitionsUtil.java: Deprecated debug level constants, removed some deprecated methods.</li>
        <li>2003-07-08 - ChannelFactorySet: Use commons-logging instead of printing to stdout.</li>
        <li>2003-07-07 - InsertTag: Fixed exception handling. Instead of swallowing exceptions or printing the stack trace on the page, the exceptions are logged and rethrown as JspException for the page error handling mechanism to deal with.</li>
        <li>2003-07-07 - InsertTag: More code cleanup, removed deprecated method, deprecated ROLE_DELIMITER because it is only used internally to this class</li>
        <li>2003-07-04 - ComponentContext: Removed deprecated constructor</li>
        <li>2003-07-02 - Changed UntyppedAttribute class name to UntypedAttribute (spelling error).</li>
      </ul>
      <p>
      <strong>Upload Package Changes</strong>&#160;[
      <code>org.apache.struts.upload</code>]:</p>
      <ul>
        <li>2003-07-31 - MultipartElement: Remove deprecated methods.</li>
      </ul>
      <p>
      <strong>Utility Package Changes</strong>&#160;[
      <code>org.apache.struts.util</code>]:</p>
      <ul>
        <li>2003-07-26 - TagUtils,RequestUtils: Added TagUtils class for taglibs to use instead of RequestUtils. We should migrate any method in RequestUtils that takes a PageContext parameter and/or throws JspException. A clean separation will help keep RequestUtils smaller and allow the taglibs to be easily split off of the core Struts distribution.</li>
        <li>2003-07-25 - RequestUtils: Backwards compatibility fix. Changed ModuleConfig lookups to use getModuleConfig so that default module config is returned if one is not already present in the request</li>
        <li>2003-07-16 - RequestUtils: Make retrieveMessageResources() module-aware by adding the module prefix to the bundle name when retrieving from application context.</li>
        <li>2003-07-03 - LabelValueBean: Added equals and hashCode() methods.</li>
        <li>2003-07-03 - Globals,ActionServlet,RequestUtils: Moved initialization of module prefix list to the new ActionServlet.initModulePrefixes() method from RequestUtils.getModulePrefixes() because of a potential race condition documented in PR# 21091. This also required a move of the RequestUtils.PREFIXES constant to Globals.MODULE_PREFIXES_KEY.</li>
        <li>2003-07-02 - RequestUtils,TestRequestUtils: Removed deprecated "application" methods in favor of "module" methods.</li>
        <li>2003-07-02 - LabelValueBean: Added default constructor.</li>
      </ul>
      <p>
      <strong>Validator Package Changes</strong>&#160;[
      <code>org.apache.struts.validator</code>]</p>
      <ul>
        <li>2003-07-30 validator-rules.xml: Remove deprecated range() method.</li>
        <li>2003-07-30 - validator-rules.xml: Allow intRange validation of select-one and radio fields. In some form combo boxes you might have the combo boxes populated with valid choices plus one additional choice with a caption something like "Choose one" and a value 0f "-1". Then when the user attempts to submit the form, you can look for the value of "-1" and yell at them if they failed to pick something.</li>
        <li>2003-07-28 - JavascriptValidatorTag.java,ValidatorPlugIn.java: Enhancement to allow checking of all constraints instead of aborting. The default is same as struts 1.1.</li>
        <li>2003-07-26 - Resources: Deprecated Resources.getLocale() because it created sessions. Use RequestUtils.getUserLocale() instead.</li>
        <li>2003-07-02 - Resources: Rewrote getArgs() method to use arrays and loops, which removes limitation of 4 args.</li>
        <li>2003-07-02 - Resources: Remove deprecated methods</li>
        <li>2003-07-02 - Validator,ValdiatorUtils: Changed processRoles() to send a 403 Forbidden response if the role check fails. Also removed deprecated methods.</li>
        <li>2003-07-01 - Add validwhen validation to package.</li>
        <li>initModuleConfigFactory()</li>
        <li>methods created for backward-compatiblity only</li>
        <li>isStopOnFirstError</li>
        <li>setStopOnFirstError</li>
        <li>validator-rules.xml, range() is deprecated - use intRange() instead.</li>
      </ul>
      <ul>
        <li>The ValidatorPlugin: It is now possible to force the client side Javascript validation to check all constraints, instead of stopping at the first error. By setting a new property, stopOnFirstError, on the validator plug in tag to false. This is in the struts-config.xml as follow:
        <pre>
<code>
  <![CDATA[
<plug-in className="org.apache.struts.validator.ValidatorPlugIn">
<set-property property="pathnames"
 value="/WEB-INF/validation.xml,/WEB-INF/validator-rules.xml"/>
<set-property property="stopOnFirstError" value="true"/>
</plug-in>
]]>
</code>
</pre></li>
        <li>validator-rules.xml[intRange]: IntRange now checks select-one and radio fields. Example: This allows populating combo boxes with valid choices plus one additional choice with a caption something like "Choose one" and a value 0f "-1". Then when the user attempts to submit the form, you can look for the value of "-1" and yell at them if they failed to pick something.</li>
      </ul>
      <p>
      <strong>Documentation Application Changes</strong>&#160;[
      <code>struts-documentation.war</code>]:</p>
      <ul>
        <li>No signficant changes.</li>
      </ul>
      <p>
      <strong>MailReader Example Application Changes</strong>&#160;[
      <code>struts-example.war</code>]:</p>
      <ul>
        <li>No signficant changes.</li>
      </ul>
      <p>
      <strong>Exercise Taglib Example Application Changes</strong>&#160;[
      <code>struts-taglib-exercise.war</code>]:</p>
      <ul>
        <li>2003-07-23 - html-messages.jsp: Updated to reference Globals constants.</li>
      </ul>
    </section>
    <section>
      <p class="right">Next:
      <a href="installation.html">Installation</a></p>
    </section>
  </body>
</document>
