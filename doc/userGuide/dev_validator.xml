<?xml version="1.0" encoding="ISO-8859-1"?>
<document url="./resources.xml">
<properties>
  <author>David Winterfeldt</author> 
  <author>James Turner</author> 
  <author>Rob Leland</author> 
<title>The Struts User's Guide - Validator Guide</title>
</properties>
<body> 
<chapter name="Struts Validator Guide"> 

<section href="validator" name="Struts Validator">

<p>
[:TODO:]
</p>

<p>
Cover basic functionality as documented on David's web site.
<a href="http://home.earthlink.net/~dwinterfeldt/">Validation Framework for Struts </a> 
</p>

<p>
Changes in the validator behavior and deprecation of functionality from original validator
</p>
<ul>
<li>
  The validator xml files now <strong>validates against the DTD stored in the commons-validator.jar </strong>!
</li>
<li>
  The default validator-rules.xml now ignores blank fields for all the basic validation types.
  If you require a field to be present then to your applications validator.xml 
  field definition add "required" to the depends attribute.
</li>
<li>
  The Javascript Tag has new attributes defined.
</li>
<li>
  Deprecation of range() methods in both JavaScript and Java
</li>
<li>
  Deprecation of StrutsValidator &amp; StrutsValidatorUtil
</li>
</ul>
<p>
Struts 1.1 has also added additional functionality over the original validator
contributed by David Winterfeldt.
</p>

<ul>
<li>
  Conditionally required fields
</li>
<li>
  intRange() &amp; floatRange() methods in both JavaScript and Java
</li>
</ul>
</section>
<section href="validator-bugs" name="Known Bugs">
<p> The Struts Validator relies on the commons-validator. As of November 15 there
is a bug for non default LOCALE's that prevents validation from working.
Stated another way, if the browser and server locales do not match, validation will fail.
See 
<a href="http://nagoya.apache.org/bugzilla/show_bug.cgi?id=14384">Bugzilla bug 14384 </a>.
Until the commons validator is fixed, you must rebuild the validator with this patch applied.
</p>
</section>
<section href="validator-changes" name="Changes and deprecations">

<p> <strong>Validating against the DTD in the commons-validator.jar. </strong></p>
<p> Struts no longer maintains a seperate dtd for validator-rules.xml and validator.xml.
    Additionally, commons-validator now maintains a unified validator.dtd.
    Change all validator.xml DTD references to: 
<ol><pre>
   &lt;!DOCTYPE form-validation PUBLIC
          "-//Apache Software Foundation//DTD Commons Validator Rules Configuration 1.0//EN"
          "http://jakarta.apache.org/commons/dtds/validator_1_0.dtd"&gt;
</pre></ol>

</p>
</section>
<section href="validator-new" name="New features">
<p> <strong>Conditionally required fields. </strong></p>
<p>
The most fundamental change is the ability to conditionally
require validator fields based on the value of other fields.
It allows you to define logic like "only validate this field if field X is non-
null and field Y equals "male".
</p>

<p>
The syntax looks like this:
</p>

<p>
If you have this in your struts-config.xml
</p>

<ol>
<pre><![CDATA[
<form-bean name="dependentlistForm"
           type="org.apache.struts.webapp.validator.forms.ValidatorForm">
    <form-property name="dependents" 
                   type="org.apache.struts.webapp.validator.Dependent[]"
                   initial="{'','','','','','','','','','',''}"/>
    <form-property name="insureDependents"
                   type="java.lang.Boolean" 
                   initial="false"/>
</form-bean>
]]></pre>
</ol>

<p>
Where dependent is a bean that has properties lastName, firstName, dob, 
coverageType
</p>

<p>
You can define a validation:
</p>

<pre><![CDATA[
  <form name="dependentlistForm">
    <field property="firstName" indexedListProperty="dependents"
           depends="requiredif">
      <arg0 key="dependentlistForm.firstName.label"/>
      <var>
        <var-name>field[0]</var-name>
        <var-value>lastName</var-value>
      </var>
      <var>
        <var-name>field-indexed[0]</var-name>
        <var-value>true</var-value>
      </var>
      <var>
        <var-name>field-test[0]</var-name>
        <var-value>NOTNULL</var-value>
      </var>
    </field>
    <field property="dob" indexedListProperty="dependents" 
           depends="requiredif,date">
      <arg0 key="dependentlistForm.dob.label"/>
      <var>
        <var-name>field[0]</var-name>
        <var-value>lastName</var-value>
      </var>
      <var>
        <var-name>field-indexed[0]</var-name> 
        <var-value>true</var-value>
      </var>
      <var>
        <var-name>field-test[0]</var-name>    
        <var-value>NOTNULL</var-value>
      </var>
    </field>

    <field property="coverageType" indexedListProperty="dependents"
           depends="requiredif">
      <arg0 key="dependentlistForm.coverageType.label"/>
      <var>
        <var-name>field[0]</var-name>  
        <var-value>lastName</var-value>
      </var>
      <var>
        <var-name>field-indexed[0]</var-name>
        <var-value>true</var-value>
      </var>
      <var>
        <var-name>field-test[0]</var-name>
        <var-value>NOTNULL</var-value>
      </var>
      <var>
        <var-name>field[1]</var-name>  
        <var-value>insureDependents</var-value>
      </var>
      <var>
        <var-name>field-test[1]</var-name>
        <var-value>EQUAL</var-value>
      </var>
      <var>
        <var-name>field-value[1]</var-name>
        <var-value>true</var-value>
      </var>
      <var>
        <var-name>field-join</var-name>
        <var-value>AND</var-value>
      </var>
     </field>
  </form>
]]></pre>

<p>
Which is read as follows:
The firstName field is only required if the lastName field is non-null.  Since 
field-indexed is true, it means that lastName must be a property of the same 
indexed field as firstName.  Same thing for dob, except that we validate for 
date if not blank.
</p>

<p>
The coverageType is only required if the lastName for the same indexed bean is 
not null, and also if the non-indexed field insureDependents is true.
</p>

<p>
You can have an arbitrary number of fields by using the [n] syntax, the only 
restriction is that they must all be AND or OR, you can't mix.
</p>
</section>

<section href="tiles" name="Validator API Guide">

<p>
A concise 
<a href="http://jakarta.apache.org/struts/api/org/apache/struts/validator/package-summary.html#package_description">Struts Validator API Guide</a> is available to help you get started. 
</p>

</section>

<section href="resources" name="Validator Resources">
<p>
<a href="http://www.strutskickstart.com/">
<b>DynaForms and the Validator</b></a> by by James Turner and Kevin Bedell.
Sample chapter from 
<a href="http://www.strutskickstart.com/">Struts Kickstart</a>; 
available as a free download (PDF).
</p>
<p>
<a href="http://www.manning.com/getpage.html?project=husted&amp;filename=chapters.html">
<b>Validating user input</b></a> by David Winterfeldt and Ted Husted.
Sample chapter from 
<a href="http://www.amazon.com/exec/obidos/ISBN=1930110502/hitchhikeguidetoA/">Struts in Action</a>; 
available as a free download (PDF).
</p>
</section>
</chapter></body></document>
