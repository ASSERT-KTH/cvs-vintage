# -----------------------------------------------------------------------------
# build.properties.sample.lib
#
# This is a simplified build.properties file that assumes you are using the
# "lib" directory distributed with Struts, rather than building against
# the development versions of each of the Jakarta Commons projects.
#
# If you are not active in Jakarta Commons development, this is the
# preferred template for your build.properties file.
#
# First, you will need to install Ant 1.5.4 per the instructions on the
# Ant website <ant.apache.org>.
#
# Then, to build Struts using this file,
#   * copy it as "build.properties",  and
#   * extract the Stuts Library distribution to a folder named "lib" under 
#     your Struts distribution
#   * place a copy of the servlet.jar for your container in the same folder.
#
# If you prefer to keep the JARs at another location, the properties
# at the very top of the file may changed. If you require more versatility
# in specifiying JAR locations, see the original "build.properties.sample" file.
#
# Only the "shared" properties are required for a typical build. 
#
# Running the Catcus unit tests is tricky. See the DEV list if you need help 
# with those.
#
# Although experimental, new developers may want to try the Maven build.
# After installing Maven (maven.apache.org), you can change to your
# jakarta-struts directory and execute:
#
# > maven
#
# All the dependencies will be automatically downloaded and installed for
# you.
#
# $Id: build.properties.sample.lib,v 1.1 2004/07/08 13:19:57 husted Exp $
# -----------------------------------------------------------------------------

compile.deprecation=true

# Properties related to local files
# -----------------------------------------

# TODO: List of packages needed to be installed to run all these tasks

# -- required for "shared" ------------------

# struts-lib.home - Where the Struts library is kept
struts-lib.home=./lib

# servlet.home - Where JAR file containing the Servlet API classes is kept
servlet.home=/opt/JavaSoft/lib
# Compile against either version 2.2 or 2.3
servlet.jar=${servlet.home}/servletapi.jar


# -- required for "contrib" -----------------

# jstl.home - Where the JSTL distribution is kept
jstl.home = /opt/Taglibs/jakarta-taglibs-standard-1.0.5

# struts.home
struts.home = ../../


# -- required for testing -----------------

junit.home = /opt/JUnit
# JUnit jar file, version 3.81 required
junit.jar = ${junit.home}/junit3.8.1/junit.jar

# apache.home - Where other precompiled jar files from Apache are kept
# This may (optionally) include Ant, Cactus,Tomcat, and Xerces
apache.home=/opt/Apache


# -- used by other optional tasks-----------

# The JAR file containing the Checkstyle package version 2.4, if available. If
# you do not have Checkstyle installed, do not set this property.
# checkstyle.jar = /opt/CheckStyle/checkstyle-2.4/checkstyle-all-2.4.jar

# The Directory containing the PMD package distribution, 1.2.1, if available. If
# you do not have PMD installed, do not set this property.
# pmd.home = /opt/pmd/pmd-1.2.1


# Properties related to Struts "shared"
# -----------------------------------------

# For more about these dependencies, see the installation page in the UserGuide
antlr.jar=${struts-lib.home}/antlr.jar
commons-beanutils.jar=${struts-lib.home}/commons-beanutils.jar
commons-collections.jar=${struts-lib.home}/commons-collections.jar
commons-digester.jar=${struts-lib.home}/commons-digester.jar
commons-fileupload.jar=${struts-lib.home}/commons-fileupload.jar
commons-lang.jar=${struts-lib.home}/commons-lang.jar
commons-logging.jar=${struts-lib.home}/commons-logging.jar
commons-validator.jar=${struts-lib.home}/commons-validator.jar
jakarta-oro.jar=${struts-lib.home}/jakarta-oro.jar


# Properties related to Struts "contrib"
# -----------------------------------------

# These links to the JSTL jar files are only required for building the
# Struts-EL contrib library.  If they are not present, it will not build that
# contrib library (although it doesn't prevent you from building it directly in
# "contrib/struts-el".

jstl.jar		 =${jstl.home}/lib/jstl.jar
jstl-standard.jar=${jstl.home}/lib/standard.jar
jstl.tld.dir     =${jstl.home}/tld


# Properties related to Struts unit testing
# -----------------------------------------

# Choose your Cactus!
# (Uncomment only one set of properties)
#
# In order for the Cactus tests to work, you must have a copy of
# junit.jar in ANT_HOME/lib (See Ant docs on JUnit task)
#
# -- Cactus 12-1.3 home ------------------
#cactus.home=${apache.home}/jakarta-cactus-12-1.3
#cactus.lib=${cactus.home}/lib

# Cactus jar for the Servlet API corresponding to the servlet.jar file
# selected above (either 2.2 or 2.3)
#cactus.jar = ${cactus.lib}/cactus.jar

# Cactus Ant custom tasks jar
#cactus.ant.jar = ${cactus.lib}/cactus-ant.jar

# AspectJ from Cactus distribution
#aspectjrt.jar = ${cactus.lib}/aspectjrt.jar

# The httpunit runtime jar
#httpunit.jar = ${cactus.lib}/httpunit.jar

# Log4J from Jakarta-Commons
#log4j.jar = ${cactus.lib}/log4j-1.2rc1.jar

# Httpclient from Jakarta-Commons
#commons-httpclient.jar = ${cactus.lib}/commons-httpclient-20020421.jar

# -- Cactus 12-1.4 home --------------------
#cactus.home=${apache.home}/jakarta-cactus-12-1.4
#cactus.lib=${cactus.home}/lib

# Cactus jar for the Servlet API corresponding to the servlet.jar file
# selected above (either 2.2 or 2.3)
#cactus.jar = ${cactus.lib}/cactus-1.4.jar

# Cactus Ant custom tasks jar
#cactus.ant.jar = ${cactus.lib}/cactus-ant-1.4.jar

# AspectJ from Cactus distribution
#aspectjrt.jar = ${cactus.lib}/aspectjrt-1.0.5.jar

# The httpunit runtime jar
#httpunit.jar = ${cactus.lib}/httpunit-1.4.1.jar

# Log4J from Jakarta-Commons
#log4j.jar = ${cactus.lib}/log4j-1.2.5.jar

# Httpclient from Jakarta-Commons
#commons-httpclient.jar = ${cactus.lib}/commons-httpclient-2.0alpha1-20020606.jar

# -- Cactus 12-1.4.1 home  ----------------
#cactus.home=${apache.home}/jakarta-cactus-12-1.4.1
#cactus.lib=${cactus.home}/lib

# Cactus jar for the Servlet API corresponding to the servlet.jar file
# selected above (either 2.2 or 2.3)
#cactus.jar = ${cactus.lib}/cactus-1.4.1.jar

# Cactus Ant custom tasks jar
#cactus.ant.jar = ${cactus.lib}/cactus-ant-1.4.1.jar

# AspectJ from Cactus distribution
#aspectjrt.jar = ${cactus.lib}/aspectjrt-1.0.5.jar

# The httpunit runtime jar
#httpunit.jar = ${cactus.lib}/httpunit-1.4.1.jar

# Log4J from Jakarta-Commons
#log4j.jar = ${cactus.lib}/log4j-1.2.5.jar

# Httpclient from Jakarta-Commons
#commons-httpclient.jar = ${cactus.lib}/commons-httpclient-2.0alpha1-20020606.jar

# -- Cactus 13-1.3 home -------------------
#cactus.home=${apache.home}/jakarta-cactus-13-1.3
#cactus.lib=${cactus.home}/lib

# Cactus jar for the Servlet API corresponding to the servlet.jar file
# selected above (either 2.2 or 2.3)
#cactus.jar = ${cactus.lib}/cactus.jar

# Cactus Ant custom tasks jar
#cactus.ant.jar = ${cactus.lib}/cactus-ant.jar

# AspectJ from Cactus distribution
#aspectjrt.jar = ${cactus.lib}/aspectjrt.jar

# The httpunit runtime jar
#httpunit.jar = ${cactus.lib}/httpunit.jar

# Log4J from Jakarta-Commons
#log4j.jar = ${cactus.lib}/log4j-1.2rc1.jar

# JUnit jar file, version 3.81 or newer required.
# if you uncomment this, comment the one above
#junit.jar = ${cactus.lib}/junit.jar

# Httpclient from Jakarta-Commons
#commons-httpclient.jar = ${cactus.lib}/commons-httpclient.jar

# -- Cactus 13-1.4 home -------------------
#cactus.home=${apache.home}/jakarta-cactus-13-1.4
#cactus.lib=${cactus.home}/lib

# Cactus jar for the Servlet API corresponding to the servlet.jar file
# selected above (either 2.2 or 2.3)
#cactus.jar = ${cactus.lib}/cactus-1.4.jar

# Cactus Ant custom tasks jar
#cactus.ant.jar = ${cactus.lib}/cactus-ant-1.4.jar

# AspectJ from Cactus distribution
#aspectjrt.jar = ${cactus.lib}/aspectjrt-1.0.5.jar

# The httpunit runtime jar
#httpunit.jar = ${cactus.lib}/httpunit-1.4.1.jar

# Log4J from Jakarta-Commons
#log4j.jar = ${cactus.lib}/log4j-1.2.5.jar

# Httpclient from Jakarta-Commons
#commons-httpclient.jar = ${cactus.lib}/commons-httpclient-2.0alpha1-20020606.jar

# -- Cactus 13-1.4.1 home  ----------------
cactus.home=${apache.home}/jakarta-cactus-13-1.4.1
cactus.lib=${cactus.home}/lib

# Cactus jar for the Servlet API corresponding to the servlet.jar file
# selected above (either 2.2 or 2.3)
cactus.jar = ${cactus.lib}/cactus-1.4.1.jar

# Cactus Ant custom tasks jar
cactus.ant.jar = ${cactus.lib}/cactus-ant-1.4.1.jar

# AspectJ from Cactus distribution
aspectjrt.jar = ${cactus.lib}/aspectjrt-1.0.5.jar

# The httpunit runtime jar
httpunit.jar = ${cactus.lib}/httpunit-1.4.1.jar

# Log4J from Jakarta-Commons
log4j.jar = ${cactus.lib}/log4j-1.2.5.jar

# Httpclient from Jakarta-Commons
commons-httpclient.jar = ${cactus.lib}/commons-httpclient-2.0alpha1-20020606.jar

# -- Shared catus settings ----------------
# Scheme used to run tests for cactus, http, https.
cactus.contextScheme = http
# Host used to run tests for cactus, localhost.
cactus.contextHost = localhost
# Port used to run tests for cactus, change to non standard port
# if container is already running on that port.
cactus.contextPort = 8080
# Application(context) used to run tests for cactus.
cactus.contextApp = test

# Ant Optional Jars for Junit task
ant.optional.jar = ${apache.home}/apache-ant-1.5.3-1/lib/optional.jar

# Ant Jar for optional taglib documentation task
ant.jar=${apache.home}/apache-ant-1.5.3-1/lib/ant.jar

# Servlet engine locations for the tests

# Note: If you don't want to run the test on a given servlet engine, just
#       comment it's home property. For example, if you don't want to run the
#       tests on Tomcat 4.0, comment the "tomcat.home.40" property.

tomcat.home.33 = ${apache.home}/jakarta-tomcat-3.3.1
tomcat.home.40 = ${apache.home}/jakarta-tomcat-4.0.6
tomcat.home.41 = ${apache.home}/jakarta-tomcat-4.1.30
# use value of tomcat.home.41 to set equivalent property for Maven-Cactus plug-in
cactus.home.tomcat4x=${tomcat.home.41}


# Properties related to optional Tomcat tasks
# ------------------------------------

# The directory containing your binary distribution of Tomcat 4.0 ("Catalina"
# is the servlet container part of this distribution), from CVS module
# "jakarta-tomcat-4.0" at jakarta.apache.org).  This is only required
# if you are going to execute the "deploy.catalina" target.
catalina.home=${apache.home}/jakarta-tomcat-4.0.6

# The JAR file containing the JSP API classes to compile against if you are
# using JSP 2.0 or later (where these classes are separated from servlet.jar).
# If you are using JSP 1.1 or 1.2, leave this property unset
#jsp.jar=${apache.home}/jakarta-servletapi/lib/jsp.jar

# The directory containing your binary distribution of Tomcat 3.3, from CVS
# module "jakarta-tomcat" (and branch "TOMCAT_32") at jakarta.apache.org.
# This is only required if you are going to execute the "deploy.tomcat" target.
tomcat.home=${apache.home}/jakarta-tomcat-3.3.1

# The JAR file containing the Xerces parser.  This is only required if you are
# going to execute the "deploy.catalina" target.
xerces.jar=${apache.home}/xerces-1_4_4/xerces.jar


### end
