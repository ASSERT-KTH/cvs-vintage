###############################################################################
# Copyright (c) 2000, 2004 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials 
# are made available under the terms of the Common Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/cpl-v10.html
# 
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################

### JavaModel messages.

### hierarchy
hierarchy.nullProject = Project argument cannot be null
hierarchy.nullRegion = Region cannot be null
hierarchy.nullFocusType = Type focus cannot be null
hierarchy.creating = Creating type hierarchy...
hierarchy.creatingOnType = Creating type hierarchy on {0}...

### java element
element.doesNotExist = {0} does not exist
element.notOnClasspath = {0} is not on its project''s build path
element.invalidClassFileName = Class file name must end with .class
element.reconciling = Reconciling...
element.attachingSource = Attaching source...
element.invalidType = Type is not one of the defined constants
element.invalidResourceForProject = Illegal argument - must be one of IProject, IFolder, or IFile
element.nullName = Name cannot be null
element.nullType = Type cannot be null
element.illegalParent = Illegal parent argument
sourcetype.invalidName = The source type has an invalid name: {0}

### java model operations
operation.needElements = Operation requires one or more elements
operation.needName = Operation requires a name
operation.needPath = Operation requires a path
operation.needAbsolutePath = Operation requires an absolute path. Relative path specified was: ''{0}''
operation.needString = Operation requires a String.
operation.notSupported = Operation not supported for specified element type(s):
operation.cancelled = Operation cancelled
operation.nullContainer = Container cannot be null
operation.nullName = Name cannot be null
operation.copyElementProgress = Copying elements...
operation.moveElementProgress = Moving elements...
operation.renameElementProgress = Renaming elements...
operation.copyResourceProgress = Copying resources...
operation.moveResourceProgress = Moving resources...
operation.renameResourceProgress = Renaming resources...
operation.createUnitProgress = Creating a compilation unit...
operation.createFieldProgress = Creating a field...
operation.createImportsProgress = Creating imports...
operation.createInitializerProgress = Creating an initializer...
operation.createMethodProgress = Creating a method...
operation.createPackageProgress = Creating a package declaration...
operation.createPackageFragmentProgress = Creating package fragment(s)...
operation.createTypeProgress = Creating a type...
operation.deleteElementProgress = Deleting elements...
operation.deleteResourceProgress = Deleting resources...
operation.cannotRenameDefaultPackage = Default package cannot be renamed
operation.pathOutsideProject = Path ''{0}'' must denote location inside project {1}
operation.sortelements = Sorting elements...

### working copy
workingCopy.commit = Committing working copy...

### build status messages
build.preparingBuild = Preparing for build
build.readStateProgress = Reading saved built state for project {0}
build.saveStateProgress = Saving built state for project {0}
build.saveStateComplete = Saved in {0} ms
build.readingDelta = Reading resource change information for {0}
build.analyzingDeltas = Analyzing deltas
build.analyzingSources = Analyzing sources
build.cleaningOutput = Cleaning output folder
build.copyingResources = Copying resources to the output folder
build.compiling = Compiling {0}
build.foundHeader = Found
build.fixedHeader = Fixed
build.oneError = 1 error
build.oneWarning = 1 warning
build.multipleErrors = {0} errors
build.multipleWarnings = {0} warnings
build.done = Build done

### build errors
build.wrongFileFormat = Wrong file format
build.cannotSaveState = Error saving last build state for project {0}
build.cannotSaveStates = Error saving build states
build.initializationError = Builder initialization error
build.serializationError = Builder serialization error

### build inconsistencies
build.classFileCollision = Class file collision: {0}
build.duplicateClassFile = The type {0} is already defined
build.duplicateResource = The resource is a duplicate of {0} and was not copied to the output folder
build.inconsistentClassFile = A class file was not written. The project may be inconsistent, if so try refreshing this project and building it
build.inconsistentProject = The project was not built due to "{0}". Fix the problem, then try refreshing this project and building it since it may be inconsistent
build.incompleteClassPath = The project was not built since its build path is incomplete. Cannot find the class file for {0}. Fix the build path then try building this project
build.missingSourceFile = The project was not built since the source file {0} could not be read
build.prereqProjectHasClasspathProblems = The project was not built since it depends on {0}, which has build path errors
build.prereqProjectMustBeRebuilt = The project cannot be built until its prerequisite {0} is built. Cleaning and building all projects is recommended
build.abortDueToClasspathProblems = The project cannot be built until build path errors are resolved

### status
status.cannotUseDeviceOnPath = Operation requires a path with no device. Path specified was: {0}
status.coreException = Core exception
status.defaultPackageReadOnly = Default package is read-only
status.evaluationError = Evaluation error: {0}
status.JDOMError = JDOM error
status.IOException = I/O exception
status.indexOutOfBounds = Index out of bounds
status.invalidContents = Invalid contents specified
status.invalidDestination = Invalid destination: ''{0}''
status.invalidName = Invalid name specified: {0}
status.invalidPackage = Invalid package: {0}
status.invalidPath = Invalid path: ''{0}''
status.invalidProject = Invalid project: {0}
status.invalidResource = Invalid resource: {0}
status.invalidResourceType = Invalid resource type for {0}
status.invalidSibling = Invalid sibling: {0}
status.nameCollision = {0} already exists in target
status.noLocalContents = Cannot find local contents for resource: {0}
status.OK = OK
status.readOnly = {0} is read-only
status.targetException = Target exception
status.updateConflict = Update conflict

### classpath
classpath.buildPath = Build path
classpath.cannotNestEntryInEntry = Cannot nest ''{0}'' inside ''{1}''. To enable the nesting exclude ''{2}'' from ''{1}''
classpath.cannotNestEntryInLibrary = Cannot nest ''{0}'' inside library ''{1}''
classpath.cannotNestEntryInOutput = Cannot nest ''{0}'' inside output folder ''{1}''
classpath.cannotNestOutputInEntry = Cannot nest output folder ''{0}'' inside ''{1}''
classpath.cannotNestOutputInOutput = Cannot nest output folder ''{0}'' inside output folder ''{1}''
classpath.cannotReadClasspathFile = Unable to read ''.classpath'' file of project {0}
classpath.cannotReferToItself = Project cannot reference itself: {0}
classpath.cannotUseDistinctSourceFolderAsOutput = Source folder ''{0}'' in project {2} cannot output to distinct source folder ''{1}''
classpath.cannotUseLibraryAsOutput = Source folder ''{0}'' in project {2} cannot output to library ''{1}''
classpath.closedProject = Required project: {0} needs to be open
classpath.couldNotWriteClasspathFile = Could not write ''.classpath'' file of project {0}: {1}
classpath.cycle = A cycle was detected in the build path of project: {0}
classpath.duplicateEntryPath = Build path contains duplicate entry: ''{0}'' for project {1}
classpath.illegalContainerPath = Illegal classpath container path: ''{0}'' in project {1}, must have at least one segment (containerID+hints)
classpath.illegalEntryInClasspathFile = Illegal entry in ''.classpath'' of project {0} file: {1}
classpath.illegalLibraryPath = Illegal path for required library: ''{0}'' in project {1}
classpath.illegalLibraryArchive = Illegal type of archive for required library: ''{0}'' in project {1}
classpath.illegalExternalFolder = Required library cannot denote external folder: ''{0}'' for project {1}
classpath.illegalProjectPath = Illegal path for required project: ''{0}'' in project {1}
classpath.illegalSourceFolderPath = Illegal path for required source folder: ''{0}'' in project {1}
classpath.illegalVariablePath = Illegal classpath variable path: ''{0}'' in project {1}, must have at least one segment
classpath.invalidClasspathInClasspathFile = Invalid build path in ''.classpath'' file of project {0}: {1}
classpath.invalidContainer = Invalid classpath container: ''{0}'' in project {1}
classpath.mustEndWithSlash = End exclusion filter ''{0}'' with / to fully exclude ''{1}''
classpath.unboundContainerPath = Unbound classpath container: ''{0}'' in project {1}
classpath.unboundLibrary = Project {1} is missing required library: ''{0}''
classpath.unboundProject = Project {1} is missing required Java project: ''{0}''
classpath.settingOutputLocationProgress = Setting output location for: ''{0}''
classpath.settingProgress = Setting classpath for: {0}
classpath.unboundSourceAttachment = Invalid source attachment: ''{0}'' for required library ''{1}'' in project {1}
classpath.unboundSourceFolder = Project {1} is missing required source folder: ''{0}''
classpath.unboundVariablePath = Unbound classpath variable: ''{0}'' in project {1}
classpath.unknownKind = Unknown kind: ''{0}''
classpath.xmlFormatError = XML format error in ''.classpath'' file of project {0}: {1}
classpath.disabledInclusionExclusionPatterns = Inclusion or exclusion patterns are disabled in project {1}, cannot selectively include or exclude from entry: ''{0}''
classpath.disabledMultipleOutputLocations = Multiple output locations are disabled in project {1}, cannot associate entry: ''{0}'' with a specific output
classpath.incompatibleLibraryJDKLevel = Incompatible .class files version in required binaries. Project ''{0}'' is targeting a {1} runtime, but is compiled against ''{2}'' which requires a {3} runtime

### miscellaneous
file.notFound = File not found: ''{0}''
file.badFormat = Bad format
path.nullPath = Path cannot be null
path.mustBeAbsolute = Path must be absolute
cache.invalidLoadFactor = Incorrect load factor
savedState.jobName = Processing Java changes since last activation

### access restrictions
restrictedAccess.project = The type {0} is not imported from required project {1}  
restrictedAccess.library = The type {0} is not imported from required library {1}

### java conventions
convention.unit.nullName = Compilation unit name must not be null
convention.unit.notJavaName = Compilation unit name must end with .java
convention.classFile.nullName = .class file name must not be null
convention.classFile.notClassFileName = .class file name must end with .class
convention.illegalIdentifier = ''{0}'' is not a valid Java identifier
convention.import.nullImport = An import declaration must not be null
convention.import.unqualifiedImport = An import declaration must not end with an unqualified *
convention.type.nullName = A Java type name must not be null
convention.type.nameWithBlanks = A Java type name must not start or end with a blank
convention.type.dollarName = By convention, Java type names usually don't contain the $ character
convention.type.lowercaseName = By convention, Java type names usually start with an uppercase letter
convention.type.invalidName = The type name ''{0}'' is not a valid identifier
convention.package.nullName = A package name must not be null
convention.package.emptyName = A package name must not be empty
convention.package.dotName = A package name cannot start or end with a dot
convention.package.nameWithBlanks = A package name must not start or end with a blank
convention.package.consecutiveDotsName = A package name must not contain two consecutive dots
convention.package.uppercaseName = By convention, package names usually start with a lowercase letter
convention.compiler.invalidCompilerOption = ''{0}'' is not valid value for ''{1}'' compiler option.
convention.compiler.incompatibleTargetForSource = Target level ''{0}'' is incompatible with source level ''{1}''. A target level ''{1}'' or better is required
convention.compiler.incompatibleComplianceForSource = Compliance level ''{0}'' is incompatible with source level ''{1}''. A compliance level ''{1}'' or better is required
convention.compiler.incompatibleComplianceForTarget = Compliance level ''{0}'' is incompatible with target level ''{1}''. A compliance level ''{1}'' or better is required

### DOM
dom.cannotDetail = Unable to generate detailed source indexes
dom.nullTypeParameter = Cannot add parameter with null type
dom.nullNameParameter = Cannot add parameter with null name
dom.nullReturnType = Return type cannot be null
dom.nullExceptionType = Cannot add null exception
dom.mismatchArgNamesAndTypes = Types and names must have identical length
dom.addNullChild = Attempt to add null child
dom.addIncompatibleChild = Attempt to add child of incompatible type
dom.addChildWithParent = Attempt to add child that is already parented
dom.unableAddChild = Attempt to add child to node that cannot have children
dom.addAncestorAsChild = Attempt to add ancestor as child
dom.addNullSibling = Attempt to insert null sibling
dom.addSiblingBeforeRoot = Attempt to insert sibling before root node
dom.addIncompatibleSibling = Attempt to insert sibling of incompatible type
dom.addSiblingWithParent = Attempt to insert sibling that is already parented
dom.addAncestorAsSibling = Attempt to insert ancestor as sibling
dom.addNullInterface = Cannot add null interface
dom.nullInterfaces = Illegal to set super interfaces to null

### correction
correction.nullRequestor = Requestor cannot be null
correction.nullUnit = Compilation unit cannot be null

### Eclipse Java Core Search messages.

engine.searching = Searching...
engine.searching.indexing = {0}: lookup indexes...
engine.searching.matching = {0}: locate matches...
exception.wrongFormat = Wrong format
process.name = Java indexing
manager.filesToIndex = {0} files to index
manager.indexingInProgress = Java indexing in progress

### Disassembler messages

### disassembler
disassembler.description = Default classfile disassembler
disassembler.opentypedeclaration =\ '{'
disassembler.closetypedeclaration = }
disassembler.parametername = arg
disassembler.localvariablename = local_{0}
disassembler.endofmethodheader = ;
disassembler.begincommentline = //\ 
disassembler.fieldhasconstant =\ =\ 
disassembler.endoffieldheader = ;
disassembler.sourceattributeheader = Compiled from 
disassembler.enclosingmethodheader = Enclosing Method:
disassembler.exceptiontableheader = Exception Table:
disassembler.linenumberattributeheader = Line numbers:
disassembler.localvariabletableattributeheader = Local variable table:
disassembler.localvariabletypetableattributeheader = Local variable type table:
disassembler.arraydimensions = []
disassembler.innerattributesheader = Inner classes:
disassembler.inner_class_info_name = inner class info:
disassembler.outer_class_info_name = outer class info:
disassembler.inner_name = inner name:
disassembler.inner_accessflags = accessflags: 
disassembler.genericattributeheader = Attribute: Name: {0} Length: {1}
disassembler.signatureattributeheader = Signature:\ 
disassembler.indentation = \  
disassembler.constantpoolindex =\ #
disassembler.space = \ 
disassembler.comma = ,
disassembler.openinnerclassentry = [
disassembler.closeinnerclassentry = ]
disassembler.deprecated =\ (deprecated)
disassembler.constantpoolheader = Constant pool:
disassembler.constantpool.class = constant #{0} class: #{1} {2}
disassembler.constantpool.double = constant #{0} double: {1}
disassembler.constantpool.float = constant #{0} float: {1}
disassembler.constantpool.integer = constant #{0} integer: {1}
disassembler.constantpool.long = constant #{0} long: {1}
disassembler.constantpool.string = constant #{0} string: #{1} {2}
disassembler.constantpool.fieldref = constant #{0} field_ref: #{1}.#{2} {3}.{4}
disassembler.constantpool.interfacemethodref = constant #{0} interface_method_ref: #{1}.#{2} {3}.{4}
disassembler.constantpool.methodref = constant #{0} method_ref: #{1}.#{2} {3}.{4}
disassembler.constantpool.name_and_type = constant #{0} name_and_type: #{1}.#{2} {3} {4}
disassembler.constantpool.utf8 = constant #{0} utf8: {1}
disassembler.annotationdefaultheader = Annotation Default:\ 
disassembler.annotationdefaultvalue= {0} (constant type)
disassembler.annotationenumvalue = {2}.{3}(enum type #{0}.#{1})
disassembler.annotationclassvalue = {1} (#{0} class type)
disassembler.annotationannotationvalue = annotation value = 
disassembler.annotationarrayvaluestart = [
disassembler.annotationarrayvalueend = ]
disassembler.annotationentrystart = #{0} @{1}(
disassembler.annotationentryend = )
disassembler.annotationcomponent = #{0} {1}=
disassembler.runtimevisibleannotationsattributeheader= RuntimeVisibleAnnotations:\ 
disassembler.runtimeinvisibleannotationsattributeheader= RuntimeInvisibleAnnotations:\ 
disassembler.runtimevisibleparameterannotationsattributeheader= RuntimeVisibleParameterAnnotations:\ 
disassembler.runtimeinvisibleparameterannotationsattributeheader= RuntimeInvisibleParameterAnnotations:\ 
disassembler.parameterannotationentrystart=Number of annotations for parameter {0}: {1}

### classfileformat decoding
classfileformat.versiondetails =\ (version {0} : {1}.{2}, {3})
classfileformat.methoddescriptor =Method descriptor 
classfileformat.fieldddescriptor =Field descriptor 
classfileformat.maxStack = Stack: 
classfileformat.maxLocals = Locals: 
classfileformat.superflagisnotset = no super bit
classfileformat.superflagisset = super bit
classfileformat.clinitname = '{'}
classformat.classformatexception = Class Format Exception

### string displayed for each opcode
classformat.anewarray = {0} {2} [{1}]
classformat.checkcast = {0} {2} [{1}]
classformat.instanceof = {0} {2} [{1}]
classformat.ldc_w_class = {0} <Class {2}> [{1}]
classformat.ldc_w_float = {0} <Float {2}> [{1}]
classformat.ldc_w_integer = {0} <Integer {2}> [{1}]
classformat.ldc_w_string = {0} <String "{2}"> [{1}]
classformat.ldc_class = {0} <Class {2}> [{1}]
classformat.ldc_float = {0} <Float {2}> [{1}]
classformat.ldc_integer = {0} <Integer {2}> [{1}]
classformat.ldc_string = {0} <String "{2}"> [{1}]
classformat.ldc2_w_long = {0} <Long {2}> [{1}]
classformat.ldc2_w_double = {0} <Double {2}> [{1}]
classformat.multianewarray = {0} {2}{3} [{1}]
classformat.new = {0} {2} [{1}]
classformat.iinc = {0} {1} {2} [{3}]
classformat.invokespecial = {0} {2}.{3}{4} [{1}]
classformat.invokeinterface ={0} {3}.{4}{5} [{1}] [nargs: {2}]
classformat.invokestatic ={0} {2}.{3}{4} [{1}]
classformat.invokevirtual ={0} {2}.{3}{4} [{1}]
classformat.getfield ={0} {2}.{3} {4} [{1}]
classformat.getstatic ={0} {2}.{3} {4} [{1}]
classformat.putstatic ={0} {2}.{3} {4} [{1}]
classformat.putfield ={0} {2}.{3} {4} [{1}]
classformat.newarray_boolean = {0} boolean [{1}]
classformat.newarray_char = {0} char [{1}]
classformat.newarray_float = {0} float [{1}]
classformat.newarray_double = {0} double [{1}]
classformat.newarray_byte = {0} byte [{1}]
classformat.newarray_short = {0} short [{1}]
classformat.newarray_int = {0} int [{1}]
classformat.newarray_long = {0} long [{1}]
classformat.store = {0} [{1}]
classformat.load = {0} [{1}]
classfileformat.anyexceptionhandler=any
classfileformat.fielddescriptorindex=#
classfileformat.exceptiontableentry = [pc: {0}, pc: {1}] -> {2} when : {3}
classfileformat.linenumbertableentry = [pc: {0}, line: {1}]
classfileformat.localvariabletableentry = [pc: {0}, pc: {1}] local: {2} index: {3} type: {4}