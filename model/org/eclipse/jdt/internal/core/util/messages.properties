###############################################################################
# Copyright (c) 2000, 2003 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials 
# are made available under the terms of the Common Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/cpl-v10.html
# 
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
### Disassembler messages

### disassembler
classfileformat.targetoption = Version (target {0}) 
disassembler.description = Default classfile disassembler
disassembler.opentypedeclaration =\ {
disassembler.closetypedeclaration = }
disassembler.parametername = arg
disassembler.endofmethodheader = ;
disassembler.commentstart = /* 
disassembler.commentend = \ */
disassembler.begincommentline = \ *\ 
disassembler.fieldhasconstant =\ =\ 
disassembler.endoffieldheader = ;
disassembler.methodtitle = Method 
disassembler.exceptiontableheader = Exception Table:
disassembler.linenumberattributeheader = Line number attribute:
disassembler.localvariabletableattributeheader = Local variable table attribute:
disassembler.arraydimensions = []
disassembler.constructor_method_name =
disassembler.parameternameinmethodinvocation =
disassembler.innerattributesheader = Inner classes attributes:
disassembler.inner_class_info_name = inner class info name:
disassembler.outer_class_info_name = outer class info name:
disassembler.inner_name = inner name:
disassembler.inner_accessflags = accessflags: 
disassembler.genericattributeheader = Attribute:
disassembler.genericattributename = Name: 
disassembler.genericattributelength =\ Length: 
disassembler.codeattributeheader = Code attribute:
disassembler.tab = \t
disassembler.constantpoolindex =\ #
disassembler.classmemberseparator = #
disassembler.space = \ 
disassembler.comma = , 
disassembler.openinnerclassentry = [
disassembler.closeinnerclassentry = ]

### classfileformat decoding
classfileformat.sourcename = // Compiled from 
classfileformat.magicnumber = - magic:\ 
classfileformat.minorversion = - minor:\ 
classfileformat.majorversion =  - major:\ 
classfileformat.methoddescriptor =\ Method descriptor 
classfileformat.fieldddescriptor =\ Field descriptor 
classfileformat.maxStack = Stack: 
classfileformat.maxLocals = Locals: 
classfileformat.superflagnotset = The ACC_SUPER bit is not set
classfileformat.clinitname = {}
### string displayed for each opcode
classformat.invokeinterfacemethod =\ <Interface method 
classformat.invokeinterfacemethodclose = >
classformat.invokespecialconstructor =\ <Constructor 
classformat.invokespecialconstructorclose = >
classformat.invokespecialmethod =\ <Method 
classformat.invokespecialmethodclose = >
classformat.invokestaticmethod =\ <Method 
classformat.invokestaticmethodclose = >
classformat.invokevirtualmethod =\ <Method 
classformat.invokevirtualmethodclose = >
classformat.getfield = \ <Field 
classformat.getfieldclose = >
classformat.getstatic = \ <Field 
classformat.getstaticclose = >
classformat.putstatic =\ <Field 
classformat.putstaticclose = >
classformat.putfield =\ <Field 
classformat.putfieldclose = >
classformat.nargs =\ [nargs : 
classformat.interfacemethodrefindex = ] #
classfileformat.anyexceptionhandler=any
classfileformat.fielddescriptorindex=#
classfileformat.exceptiontablefrom=[pc: 
classfileformat.exceptiontableto=, pc: 
classfileformat.exceptiontablegoto=] -> 
classfileformat.exceptiontablewhen =\ when : 
classfileformat.linenumbertablefrom=[pc: 
classfileformat.linenumbertableto=, line: 
classfileformat.linenumbertableclose=]
classfileformat.localvariabletablefrom=[pc: 
classfileformat.localvariabletableto=, pc: 
classfileformat.localvariabletablelocalname=] local: 
classfileformat.localvariabletablelocalindex=\ index: 
classfileformat.localvariabletablelocaltype=\ type: 