### JavaBatchCompiler messages.

### compiler version id
compiler.version = 0.218
### scanning
scanning.start = Collecting source files inside {0}

### progress
progress.compiling = Compiling

### compile
compile.repetition = Repetition {0}/{1}
compile.instantTime = Compiled {0} lines in {1} ms ({2} lines/s)
compile.totalTime = Total compilation time: {0}
compile.oneProblem = 1 problem
compile.severalProblems = {0} problems
compile.oneError = 1 error
compile.severalErrors = {0} errors
compile.oneWarning = 1 warning
compile.severalWarnings = {0} warnings
compile.oneClassFileGenerated = 1 .class file generated
compile.severalClassFilesGenerated = {0} .class files generated

### configure
configure.noSourceFile = no source file specified
configure.duplicateLog = duplicate log specification: {0}
configure.duplicateRepeat = duplicate repeat specification: {0}
configure.source = invalid source option, source is either ''1.3'' or ''1.4'': {0}
configure.jck = invalid jck option, jck compliance level is either ''1.3'' or ''1.4'': {0}
configure.duplicateOutputPath = duplicate output path specification: {0}
configure.duplicateClasspath = duplicate classpath specification: {0}
configure.invalidDebugOption = invalid debug option: {0}
configure.duplicateWarningConfiguration = duplicate usage of warning configuration
configure.invalidWarningConfiguration = invalid warning configuration: {0}
configure.invalidWarning = invalid warning: {0}
configure.invalidWarningOption = invalid warning option: {0}
configure.targetJDK = target JDK is either ''1.1'' or ''1.2'': {0}
configure.repetition = repetition must be a positive integer: {0}
configure.directoryNotExist = directory does not exist: {0}
configure.IOError = i/o error : unable to retrieve .JAVA files in directory: {0}
configure.version = Eclipse Java Compiler {0}, Copyright IBM Corp 2000
configure.noClasspath = no classpath defined, using default directory instead
configure.incorrectClasspath = incorrect classpath: {0}
configure.noSource = no source file specified
configure.cannotOpenLog = cannot open .log file

### requestor
requestor.error = ERROR
requestor.warning = WARNING
requestor.in = in {0}
requestor.notRetrieveErrorMessage = Cannot retrieve the error message for {0}

### unit
unit.more = File {0} is specified more than once
unit.missing = File {0} is missing

### output
output.noClassFileCreated = No .class file created for file named {0} because of an IOException.

### miscellaneous
misc.usage = Eclipse Java Compiler {0}, Copyright IBM Corp 2000, 2001\n\n\
		Usage: <options> <source files | directories>\n\n\
		where options include:\n\
		-help\t\t\t\tdisplay this help message\n\
		-version\t\t\tcompiler version number\n\
		-classpath \t\t\t<dir 1>;<dir 2>;...;<dir P>\n\
		-d <dir>\t\t\tdestination directory (''-d none'' for no classfile)\n\
		-source 1.3 | 1.4\tassertions toggle (default is 1.3, i.e. disabled)\n\
		-target 1.1 | 1.2\tclassfile target setting (default is 1.1)\n\
		-jck 1.3 | 1.4\t\tJCK compliance level (default is 1.3)\n\
		-nowarn\t\t\t\tno warning (equivalent to ''-warn:none'')\n\
		-warn: <level>\t\twarning level (e.g. ''-warn:unusedLocals,deprecation'')\n\
		\tconstructorName\t\t\twarn method with constructor name\n\
		\tpackageDefaultMethod\twarn attempt to override package-default method\n\
		\tdeprecation\t\t\t\twarn usage of deprecated type or member\n\
		\tmaskedCatchBlocks\t\twarn hidden catch block\n\
		\tunusedLocals\t\t\twarn unused local variable\n\
		\tunusedArguments\t\t\twarn unused method argument\n\
		\tsyntheticAccess\t\t\twarn when performing synthetic access for innerclass\n\
		\tassertIdentifier\t\twarn occurrence of ''assert'' used as identifier\n\
		-g[:<level>]\t\tdebug attributes level\n\
			\t-g\t\t\t\t\t\tall debug info (''-g:lines,vars,source'')\n\
			\t-g:none\t\t\t\t\tno debug info\n\
			\t-g:[lines,vars,source]\tselective debug info\n\
		-preserveAllLocals\tcode gen preserve all local variables (for debug purpose)\n\
		-noImportError\t\tno errors for unresolved imports\n\
		-log <filename>\t\tspecify a log file for recording problems\n\
		-proceedOnError\t\tkeep compiling when error, dumping class files with problem methods\n\
		-verbose\t\t\tprint accessed/processed compilation units \n\
		-referenceInfo\t\tcompute reference info\n\
		-progress\t\t\tshow progress (only in -log mode)\n\
		-time\t\t\t\tdisplay speed information\n\
		-noExit\t\t\t\tdo not call System.exit(n) at end of compilation (n=0 if no error)\n\
		-repeat <n>\t\t\trepeat compilation process for performance analysis\n
