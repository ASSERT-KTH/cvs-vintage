<project name="Tiles" default="compile.library" basedir=".">

<!--
        Struts main build.xml file for building everything related to Struts :
        - core Struts library
        - documentation
        - Struts web apps
        - run unit tests
        - ...

        This script will delegate some of it's tasks to the other build*.xml
        scripts (build-webapps.xml, build-tests.xml, ...)
-->


<!-- ========== Prerequisite Properties =================================== -->

<!--
        These properties MUST be set on the "ant" command line, a
        "build.properties" file in the base directory, or a
        "build.properties" file in your user home directory.
      
        servlet.jar                   (required).  The path to the Servlet API
                                      classes to compile against (currently,
                                      either version 2.2 or 2.3 supported).

        commons-beanutils.jar         (required).  The path to the JAR file
                                      of the Jakarta Commons Beanutils
                                      package (version 1.0 or later).

        commons-collections.jar       (required).  The path to the JAR file
                                      of the Jakarta Commons Collections
                                      package (version 1.0 or later).

        commons-digester.jar          (required).  The path to the JAR file
                                      of the Jakarta Commons Digester
                                      package (version 1.0 or later).

        struts.libs                   (required). The path to the Struts
                                      library installation. .

        xerces.jar                    (optional) The path to the Xerces classes
                                      to copy.  This is required only when
                                      executing the "deploy.catalina" target.

-->

    <!-- Load local and user build preferences -->
    <property file="build.properties"/>
    <property file="${user.home}/build.properties"/>

    <!-- Default values for unspecified properties -->
    <property name="catalina.home"   value="../jakarta-tomcat-4.0/build"/>
    <property name="jdbc20ext.jar"   value="../jdbc2_0-stdext.jar"/>
    <property name="servlet.jar"     value="../jakarta-servletapi/lib/servlet.jar"/>
    <property name="struts.libs"     value="${struts.home}/lib"/>
    <property name="xerces.jar"      value="../xml-xerces/xerces.jar"/>


<!-- ========== Initialization Properties ================================= -->


<!--
        These property values may optionally be overridden with property
        settings from an "ant" command line, the "build.properties" file
        in this directory, the "build.properties" file in your home
        directory, or from settings in a superior build.xml script.
-->

    <!-- Output directory name for all files generated by the build process -->
    <property name="build.home" value="target"/>

    <!-- Should Java compilations set the debug compiler option? -->
    <property name="compile.debug" value="true" />

    <!-- Should Java compilations set the deprecation compiler option? -->
    <property name="compile.deprecation" value="false" />

    <!-- Should Java compilations set the optimize compiler option? -->
    <property name="compile.optimize" value="true" />

    <!-- Name of the core struts library -->
    <property name="app.name" value="tiles"/>

    <!-- Name of the project -->
    <property name="project.name" value="Tiles"/>

    <!-- Version of the project -->
    <property name="project.version" value="1.1-dev"/>


<!-- ========== Derived Properties ======================================== -->


<!--
        These property values are derived from values defined above, and
        generally should NOT be overridden by command line settings
-->

    <!-- The base directory for distribution targets -->
    <property name="dist.home" value="dist" />

    <!-- Source directory -->
    <property name="src.dir" value="src"/>

    <!-- Source directory for core struts library -->
    <property name="src.share.dir" value="${src.dir}/share"/>

    <!-- Directory where core tiles library configurations files are stored -->
    <property name="conf.share.dir" value="conf/share"/>

    <!-- Directory where test configurations files are stored -->
    <property name="conf.test.dir" value="conf/test"/>
    
    <!-- Doc directory -->
    <property name="doc.dir" value="doc"/>

    <!-- Web directory -->
    <property name="web.dir" value="web"/>

    <!-- Compilation Classpath -->
    <path id="compile.classpath">
      <pathelement location="${servlet.jar}"/>
      <pathelement location="${struts.libs}/struts.jar"/>
      <pathelement location="${commons-beanutils.jar}"/>
      <pathelement location="${commons-collections.jar}"/>
      <pathelement location="${commons-digester.jar}"/>
    </path>



<!-- ========== Executable Targets ======================================== -->


<!--
        The "init" target evaluates "available" expressions as necessary
        to modify the behavior of this script and print some information on
        screen
-->
    <target name="init">

        <echo message="--------- ${project.name} ${project.version} ---------"/>
        <echo message=""/>

        <echo message="java.class.path = ${java.class.path}"/>
        <echo message="java.home = ${java.home}"/>
        <echo message="user.home = ${user.home}"/>
        <echo message="struts.home     = ${struts.home}"/>
        <echo message="struts.libs     = ${struts.libs}"/>
        <echo message="dist.home       = ${dist.home}"/>
        <echo message="build.home      = ${build.home}"/>
        <echo message="basedir         = ${basedir}"/>

    </target>

<!-- 
        Create directories and copy files for the core component library
-->
    <target name="prepare.library" depends="init">
        <mkdir dir="${build.home}/library/classes/META-INF/tlds"/>
        <mkdir dir="${build.home}/library/classes/org/apache/struts/tiles/resources"/>
        <copy todir="${build.home}/library/classes/org/apache/struts/tiles/resources">
            <fileset dir="${conf.share.dir}" includes="**/*.dtd"/>
        </copy>
    </target>

<!-- 
        Prepare static directories for web applications
-->
    <target name="static.webapps">
        <ant antfile="build-webapps.xml" target="static"/>
    </target>

<!-- 
        Compile core struts library directory tiles
-->
    <target name="compile.library" depends="prepare.library"
     description="Compile Tiles library files">
        <javac srcdir="${src.share.dir}"
            destdir="${build.home}/library/classes"
            debug="${compile.debug}"
            optimize="${compile.optimize}"
            deprecation="${compile.deprecation}">
          <classpath refid="compile.classpath"/>
        </javac>
        <copy todir="${build.home}/library/classes">
            <fileset dir="${src.share.dir}" includes="**/*.properties"/>
        </copy>
        <copy todir="${build.home}/library/classes">
            <fileset dir="${src.share.dir}" includes="**/*.dtd"/>
        </copy>
        <copy todir="${build.home}/library">
            <fileset dir="${conf.share.dir}" includes="*.dtd"/>
            <fileset dir="${conf.share.dir}" includes="*.tld"/>
        </copy>
        <style basedir="${doc.dir}"
            destdir="${build.home}/library"
            extension=".tld"
            style="stylesheets/tld.xsl"
            includes="*.xml"/>
        <copy todir="${build.home}/library/classes/META-INF/tlds">
            <fileset dir="${build.home}/library" includes="*.tld"/>
        </copy>
        <jar jarfile="${build.home}/library/${app.name}.jar"
            manifest="${conf.share.dir}/MANIFEST.MF"
            basedir="${build.home}/library/classes"
            includes="**"/>
    </target>

<!--
        Compile code for web applications
-->
    <target name="compile.webapps" depends="compile.library,static.webapps"
     description="Compile Tiles web applications">
        <ant antfile="build-webapps.xml" target="compile"/>
    </target>

<!--
        Create Javadoc documentation
-->
    <target name="compile.javadoc"
     description="Generate JavaDoc API docs">
        <delete dir="${build.home}/documentation/api"/>
        <mkdir dir="${build.home}/documentation/api"/>
        <javadoc sourcepath="${src.share.dir}"
            destdir="${build.home}/documentation/api"
            classpath="${servlet.jar}"
            packagenames="org.apache.struts.*"
            author="true"
            private="true"
            version="true"
            windowtitle="Tiles API Documentation"
            doctitle="&lt;h1&gt;Tiles Framework (Version ${project.version})&lt;/h1&gt;"
            bottom="Copyright &#169; 2000-2001 - Cedric Dumoulin and Apache Software Foundation">
			<classpath refid="compile.classpath"/>
			</javadoc>
    </target>

<!--
        Create directories and copy files for distribution
-->
    <target name="prepare.dist" depends="init">
        <mkdir dir="${dist.home}"/>
        <mkdir dir="${dist.home}/lib"/>
        <mkdir dir="${dist.home}/webapps"/>
    </target>

<!--
        Construct library distributables
-->
    <target name="dist.library" depends="prepare.dist,compile.library">
        <copy todir="${dist.home}/lib">
            <fileset dir="${build.home}/library" includes="*.dtd"/>
            <fileset dir="${build.home}/library" includes="*.jar"/>
            <fileset dir="${build.home}/library" includes="*.tld"/>
        </copy>
    </target>

<!--
        Construct distributable web applications
-->
    <target name="dist.webapps" depends="compile.webapps,compile.javadoc">
        <ant antfile="build-webapps.xml" target="dist"/>
    </target>

<!--
        Copy sources for distribution
-->
    <target name="dist.source" depends="prepare.dist">
        <copy file="INSTALL" tofile="${dist.home}/INSTALL"/>
        <copy file="LICENSE" tofile="${dist.home}/LICENSE"/>
        <copy file="README" tofile="${dist.home}/README"/>
    </target>

<!--
        Construct complete release distribution
-->
    <target name="dist" depends="dist.library,dist.webapps,dist.source"
     description="Construct binary distribution"/>


<!--
        Clean up build and distribution directories
-->
    <target name="clean"
     description="Clean build and distribution directories">
        <delete dir="${build.home}"/>
        <delete dir="${dist.home}"/>
    </target>

<!--
        All-in-one build target
-->
    <target name="all" depends="clean,compile.library,compile.webapps"
     description="Clean and build library and web applications"/>

<!--
        Dist target called by struts script
-->
    <target name="compile.for.struts" depends="compile.library,compile.webapps"/>

<!--
        Dist target called by struts script
-->
    <target name="dist.for.struts" depends="dist.library,dist.webapps">
	  <!-- Remove extra webapps from struts -->
	  <delete dir="${dist.home}/webapps/tiles-channel.war" />
	  <delete dir="${dist.home}/webapps/tiles-template.war" />
	  <move file="${dist.home}/webapps/tiles-doc.war" 
	      tofile="${dist.home}/webapps/struts-${app.name}.war"/>
	</target>


</project>
