<project name="jakarta-struts-faces" default="compile" basedir=".">


  <!-- ===================== Initialize Property Values =================== -->


  <!-- Initialize property values -->
  <property file="build.properties"/>
  <property file="../../build.properties"/>
  <property file="../../../build.properties"/>
  <property file="${user.home}/build.properties"/>


  <!-- Dependency home directory defaults -->
  <property name="jwsdp.home"       value="/usr/local/jwsdp-1.2"/>
  <property name="jsf-ri.home"      value="${jwsdp.home}/jsf"/>
  <property name="struts.home"      value="../../dist"/>


  <!-- Dependency library defaults -->
  <property name="commons-beanutils.jar"
                                    value="${jwsdp.home}/jwsdp-shared/lib/commons-beanutils.jar"/>
  <property name="commons-collections.jar"
                                    value="${jwsdp.home}/jwsdp-shared/lib/commons-collections.jar"/>
  <property name="commons-dbcp.jar"
                                    value="${jwsdp.home}/common/lib/commons-dbcp.jar"/>
  <property name="commons-digester.jar"
                                    value="${jwsdp.home}/jwsdp-shared/lib/commons-digester.jar"/>
  <property name="commons-fileupload.jar"
                                    value="${struts.home}/lib/commons-fileupload.jar"/>
  <property name="commons-lang.jar"
                                    value="${struts.home}/lib/commons-lang.jar"/>
  <property name="commons-logging.jar"
                                    value="${jwsdp.home}/jwsdp-shared/lib/commons-logging.jar"/>
  <property name="commons-pool.jar"
                                    value="${jwsdp.home}/common/lib/commons-pool.jar"/>
  <property name="commons-validator.jar"
                                    value="${struts.home}/lib/commons-validator.jar"/>
  <property name="jsf-api.jar"      value="${jsf-ri.home}/lib/jsf-api.jar"/>
  <property name="jsf-ri.jar"       value="${jsf-ri.home}/lib/jsf-ri.jar"/>
  <property name="jsp.jar"          value="${jwsdp.home}/common/lib/jsp-api.jar"/>
  <property name="jstl.jar"         value="${jsf-ri.home}/lib/jstl.jar"/>
  <property name="servlet.jar"      value="${jwsdp.home}/common/lib/servlet-api.jar"/>
  <property name="standard.jar"     value="${jsf-ri.home}/lib/standard.jar"/>
  <property name="struts.jar"       value="${struts.home}/lib/struts.jar"/>


  <!-- Build Defaults -->
  <property name="build.home"      value="${basedir}/build"/>
  <property name="dist.home"       value="${basedir}/dist"/>
  <property name="project.name"    value="Struts-Faces Integration Library"/>
  <property name="project.package" value="org.apache.struts.faces"/>
  <property name="project.version" value="0.4"/>


  <!-- Compile Defaults -->
  <property name="compile.debug"           value="true"/>
  <property name="compile.deprecation"     value="false"/>
  <property name="compile.optimize"        value="true"/>


  <!-- Construct Classpath -->
  <path id="classpath">
    <pathelement location="${commons-beanutils.jar}"/>
    <pathelement location="${commons-collections.jar}"/>
    <pathelement location="${commons-dbcp.jar}"/>
    <pathelement location="${commons-digester.jar}"/>
    <pathelement location="${commons-logging.jar}"/>
    <pathelement location="${commons-pool.jar}"/>
    <pathelement location="${jsf-api.jar}"/>
    <pathelement location="${jsp.jar}"/>
    <pathelement location="${jstl.jar}"/>
    <pathelement location="${servlet.jar}"/>
    <pathelement location="${struts.jar}"/>
    <pathelement location="${build.home}/classes"/>
  </path>


  <!-- Custom Tomcat Integration -->
  <taskdef  name="deploy"   classname="org.apache.catalina.ant.DeployTask"/>
  <taskdef  name="install"  classname="org.apache.catalina.ant.InstallTask"/>
  <taskdef  name="list"     classname="org.apache.catalina.ant.ListTask"/>
  <taskdef  name="reload"   classname="org.apache.catalina.ant.ReloadTask"/>
  <taskdef  name="remove"   classname="org.apache.catalina.ant.RemoveTask"/>
  <taskdef  name="undeploy" classname="org.apache.catalina.ant.UndeployTask"/>
  <property name="password" value="tomcat"/>
  <property name="url"      value="http://localhost:8080/manager"/>
  <property name="username" value="tomcat"/>

  <property name="example.path"     value="/struts-faces"/>
  <property name="stf.path"         value="/struts-tiles-faces"/>


  <!-- ===================== LIBRARY: Maintenance ========================= -->


  <target name="clean"
   description="Clean all build directories">
    <delete dir="${build.home}"/>
    <delete dir="${dist.home}"/>
  </target>


  <target name="init">
    <echo message="---------- ${project.name} ${project.version} ----------"/>
    <filter token="name"     value="${project.name}"/>
    <filter token="package"  value="${project.package}"/>
    <filter token="version"  value="${project.version}"/>
  </target>


  <target name="list" description="List installed webapps on Tomcat">
    <list url="${url}" username="${username}" password="${password}"/>
  </target>


  <target name="prepare" depends="init">
    <mkdir dir="${build.home}"/>
    <mkdir dir="${build.home}/classes"/>
    <mkdir dir="${build.home}/classes/META-INF"/>
    <mkdir dir="${build.home}/conf"/>
    <mkdir dir="${build.home}/lib"/>
    <mkdir dir="${dist.home}"/>
    <mkdir dir="${dist.home}/docs"/>
    <mkdir dir="${dist.home}/docs/api"/>
  </target>


  <target name="static" depends="prepare">
    <tstamp/>
    <copy todir="${build.home}/conf" filtering="on">
      <fileset dir="src/conf" includes="*.MF"/>
    </copy>
    <copy todir="${build.home}/classes/META-INF"
           file="src/conf/faces-config.xml"/>
  </target>


  <!-- ============== LIBRARY: Compile Library Components ================= -->


  <target name="compile" depends="static"
   description="Compile integration library">

    <!-- Compile Java Sources -->
    <javac      srcdir="src/java"
               destdir="${build.home}/classes"
                 debug="${compile.debug}"
           deprecation="${compile.deprecation}"
              optimize="${compile.optimize}">
      <classpath refid="classpath" />
    </javac>

    <!-- Copy non-Java Sources -->
    <copy        todir="${build.home}/classes">
      <fileset     dir="src/java">
        <exclude  name="**/*.java"/>
      </fileset>
    </copy>

    <!-- Create Tag Library Descriptor -->
    <style     basedir="src/conf"
               destdir="${build.home}/conf"
             extension=".tld"
                 style="src/conf/struts-tld.xsl"
              includes="struts-faces.xml"/>
    <copy       tofile="${build.home}/classes/META-INF/struts-faces.tld"
                  file="${build.home}/conf/struts-faces.tld"/>

    <!-- Copy license file -->
    <copy       tofile="${build.home}/classes/META-INF/LICENSE.txt"
                  file="LICENSE.txt"/>

  </target>


  <target name="library" depends="compile"
   description="Package integration library">

    <jar       jarfile="${build.home}/lib/struts-faces.jar"
               basedir="${build.home}/classes"
              manifest="${build.home}/conf/MANIFEST.MF"/>

  </target>


  <!-- ==================== LIBRARY:  Documentation ======================= -->


  <target name="docs" depends="prepare"
   description="Create generated documentation and JavaDocs">

    <style     basedir="src/conf"
               destdir="${dist.home}/docs"
             extension=".html"
                 style="src/conf/struts-doc.xsl"
              includes="struts-faces.xml"/>

    <javadoc
            sourcepath="src/java"
               destdir="${dist.home}/docs/api"
                author="true"
               private="true"
               version="true"
          packagenames="org.apache.struts.*"
           windowtitle="${project.name} (Version ${project.version})"
              doctitle="${project.name} (Version ${project.version})"
                bottom="Copyright &#169; 2003 - Apache Software Foundation">
      <classpath refid="classpath"/>
    </javadoc>

  </target>


  <!-- ===================== EXAMPLE: Create Webapp ======================= -->


  <target name="example.prepare" depends="library">

    <echo message="------------ ${project.name} Example Webapp -------------"/>
    <mkdir         dir="${build.home}/webapps"/>
    <mkdir         dir="${build.home}/webapps/example"/>

  </target>


  <target name="example.static" depends="example.prepare">

    <!-- Copy static web resources -->
    <copy        todir="${build.home}/webapps/example">
      <fileset     dir="web/example"/>
    </copy>

    <!-- Copy required configuration files -->
    <copy        todir="${build.home}/webapps/example/WEB-INF">
      <fileset     dir="${build.home}/conf">
        <include  name="*.tld"/>
      </fileset>
    </copy>
    <copy        todir="${build.home}/webapps/example/WEB-INF">
      <fileset     dir="${struts.home}/lib">
        <include  name="*.tld"/>
        <include  name="valid*.xml"/>
      </fileset>
    </copy>

    <!-- Copy required library JAR files -->
    <mkdir         dir="${build.home}/webapps/example/WEB-INF/lib"/>
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${build.home}/lib/struts-faces.jar"/>
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${commons-beanutils.jar}"/>
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${commons-collections.jar}"/>
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${commons-digester.jar}"/>
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${commons-fileupload.jar}"/>
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${commons-lang.jar}"/>
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${commons-logging.jar}"/>
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${commons-validator.jar}"/>
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${struts.jar}"/>

  </target>


  <target name="example.libraries" depends="example.static"
            if="build.standalone">

    <!-- Copy libraries required for standalone use only -->
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${commons-dbcp.jar}"/>
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${commons-pool.jar}"/>
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${jsf-api.jar}"/>
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${jsf-ri.jar}"/>
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${jstl.jar}"/>
    <copy        todir="${build.home}/webapps/example/WEB-INF/lib"
                  file="${standard.jar}"/>

  </target>


  <target name="example.compile" depends="example.libraries">

    <!-- Compile Java Sources -->
    <mkdir         dir="${build.home}/webapps/example/WEB-INF/classes"/>
    <javac      srcdir="src/example"
               destdir="${build.home}/webapps/example/WEB-INF/classes"
                 debug="${compile.debug}"
           deprecation="${compile.deprecation}"
              optimize="${compile.optimize}">
      <classpath refid="classpath" />
    </javac>

    <!-- Copy non-Java Sources -->
    <copy    todir="${build.home}/webapps/example/WEB-INF/classes">
      <fileset dir="src/example">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>

  </target>


  <!-- ===================== EXAMPLE:  Tomcat Integration ================= -->


  <target name="example.install" depends="example.compile"
   description="Install example webapp on Tomcat">
    <install url="${url}" username="${username}" password="${password}"
            path="${example.path}"
             war="file://${build.home}/webapps/example"/>
  </target>


  <target name="example.reload" depends="example.compile"
   description="Reload example webapp on Tomcat">
    <reload url="${url}" username="${username}" password="${password}"
            path="${example.path}"/>
  </target>


  <target name="example.remove"
   description="Remove example webapp from Tomcat">
    <remove url="${url}" username="${username}" password="${password}"
            path="${example.path}"/>
  </target>


  <!-- ===================== STF: Create Webapp ============================ -->


  <target name="stf.prepare" depends="library">

    <echo message="------------ ${project.name} STF Webapp -------------"/>
    <mkdir         dir="${build.home}/webapps"/>
    <mkdir         dir="${build.home}/webapps/stf"/>

  </target>


  <target name="stf.static" depends="stf.prepare">

    <!-- Copy static web resources -->
    <copy        todir="${build.home}/webapps/stf">
      <fileset     dir="web/stf"/>
    </copy>

    <!-- Copy required configuration files -->
    <copy        todir="${build.home}/webapps/stf/WEB-INF">
      <fileset     dir="${struts.home}/lib">
        <include  name="*.tld"/>
        <include  name="valid*.xml"/>
      </fileset>
    </copy>

    <!-- Copy required library JAR files -->
    <mkdir         dir="${build.home}/webapps/stf/WEB-INF/lib"/>
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${build.home}/lib/struts-faces.jar"/>
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${commons-beanutils.jar}"/>
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${commons-collections.jar}"/>
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${commons-digester.jar}"/>
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${commons-fileupload.jar}"/>
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${commons-lang.jar}"/>
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${commons-logging.jar}"/>
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${commons-validator.jar}"/>
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${struts.jar}"/>

  </target>


  <target name="stf.libraries" depends="stf.static"
            if="build.standalone">

    <!-- Copy libraries required for standalone use only -->
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${commons-dbcp.jar}"/>
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${commons-pool.jar}"/>
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${jsf-api.jar}"/>
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${jsf-ri.jar}"/>
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${jstl.jar}"/>
    <copy        todir="${build.home}/webapps/stf/WEB-INF/lib"
                  file="${standard.jar}"/>

  </target>


  <target name="stf.compile" depends="stf.libraries">

    <!-- Compile Java Sources -->
    <mkdir         dir="${build.home}/webapps/stf/WEB-INF/classes"/>
    <javac      srcdir="src/stf"
               destdir="${build.home}/webapps/stf/WEB-INF/classes"
                 debug="${compile.debug}"
           deprecation="${compile.deprecation}"
              optimize="${compile.optimize}">
      <classpath refid="classpath" />
    </javac>

    <!-- Copy non-Java Sources -->
    <copy    todir="${build.home}/webapps/stf/WEB-INF/classes">
      <fileset dir="src/stf">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>

  </target>


  <!-- ===================== STF:  Tomcat Integration ===================== -->


  <target name="stf.install" depends="stf.compile"
   description="Install STF webapp on Tomcat">
    <install url="${url}" username="${username}" password="${password}"
            path="${stf.path}"
             war="file://${build.home}/webapps/stf"/>
  </target>


  <target name="stf.reload" depends="stf.compile"
   description="Reload STF webapp on Tomcat">
    <reload url="${url}" username="${username}" password="${password}"
            path="${stf.path}"/>
  </target>


  <target name="stf.remove"
   description="Remove STF webapp from Tomcat">
    <remove url="${url}" username="${username}" password="${password}"
            path="${stf.path}"/>
  </target>


  <!-- ==================== Create Binary Distribution ==================== -->


  <target name="dist" depends="example.compile, stf.compile, docs"
   description="Create binary distribution">

    <mkdir     dir="${dist.home}"/>
    <copy    todir="${dist.home}">
      <fileset dir="${basedir}" includes="*.txt build.*"
                                excludes="build.properties"/>
    </copy>

    <mkdir     dir="${dist.home}/conf"/>
    <copy    todir="${dist.home}/conf">
      <fileset dir="${build.home}/conf" includes="*.tld"/>
    </copy>

    <mkdir     dir="${dist.home}/lib"/>
    <copy    todir="${dist.home}/lib">
      <fileset dir="${build.home}/lib" includes="*.jar"/>
    </copy>

    <mkdir     dir="${dist.home}/src"/>
    <copy    todir="${dist.home}/src">
      <fileset dir="src" excludes="**/CVS/**"/>
    </copy>

    <mkdir     dir="${dist.home}/web"/>
    <copy    todir="${dist.home}/web">
      <fileset dir="web" excludes="**/CVS/**"/>
    </copy>

    <mkdir     dir="${dist.home}/webapps"/>
    <jar  destfile="${dist.home}/webapps/struts-faces.war">
      <fileset dir="${build.home}/classes">
        <include name="META-INF/LICENSE.txt"/>
      </fileset>
      <fileset dir="${build.home}/webapps/example">
        <exclude name="**/jsf-*.jar"/>   <!-- EA license so no redistrib -->
      </fileset>
    </jar>
    <jar  destfile="${dist.home}/webapps/struts-tiles-faces.war">
      <fileset dir="${build.home}/classes">
        <include name="META-INF/LICENSE.txt"/>
      </fileset>
      <fileset dir="${build.home}/webapps/stf">
        <exclude name="**/jsf-*.jar"/>   <!-- EA license so no redistrib -->
      </fileset>
    </jar>

  </target>


</project>
