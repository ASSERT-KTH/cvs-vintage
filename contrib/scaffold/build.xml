<!--
@author Ted Husted
@version $Revision: 1.7 $ $Date: 2002/09/12 12:40:27 $
-->

<project name="scaffold" default="compile.lib">

    <!-- Change this to compile against a different version  -->
    <property name="compile.classpath" value="compile.classpath_1_0"/>

    <!-- Local system paths -->
    <property name="distpath.project" value="/projects/lib"/>
    <property name="distpath.javasoft" value="/javasoft/lib"/>
    <property name="distpath.jakarta" value="/jakarta/lib"/>

    <!-- Project settings -->
    <property name="project.title" value="scaffold"/>
    <property name="project.version" value="0.6"/>
    <property name="project.distname" value="struts-scaffold_1_0"/>

    <!-- Standard Javasoft jars -->
    <property name="servlet.jar"   value="${distpath.javasoft}/servlet.jar"/>
    <property name="jdbc20ext.jar" value="${distpath.javasoft}/jdbc2_0-stdext.jar"/>

    <!-- Path settings -->
    <property name="doc.path" value="./doc/api"/>
    <property name="doc.src" value="./src/java"/>

    <!-- Build working classpath -->
    <path id="compile.classpath_1_0">
        <pathelement path ="lib/commons-beanutils.jar"/>
        <pathelement path ="lib/commons-digester.jar"/>
        <pathelement path ="lib/commons-scaffold_1_0.jar"/>
        <pathelement path ="lib/struts_1_0_2.jar"/>
        <pathelement path ="lib/struts-validator_1_0.jar"/>
        <pathelement path ="classes"/>
        <pathelement path ="${classpath}"/>
    </path>

    <!-- Build working classpath -->
    <path id="compile.classpath_1_1">
        <pathelement path ="lib/lucene_1_2.jar"/>
        <pathelement path ="lib/poolman_2_0_4.jar"/>
        <pathelement path ="lib/commons-beanutils.jar"/>
        <pathelement path ="lib/commons-digester.jar"/>
        <pathelement path ="lib/struts_1_1_b1.jar"/>
        <pathelement path ="classes"/>
        <pathelement path ="${classpath}"/>
    </path>

    <!-- Check timestamp on files -->
    <target name="prepare">
        <tstamp/>
    </target>

   <!-- Copy any resource or configuration files -->
    <target name="resources">
        <copy todir="classes" includeEmptyDirs="no">
            <fileset dir="src/java">
            <patternset>
                <include name="**/*.conf"/>
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </patternset>
            </fileset>
        </copy>
    </target>

    <!-- Normal build of application -->
    <target name="compile" depends="prepare,resources">
      <copy
        file="./LICENSE"
        todir="classes"/>
        <!-- Remove "jikes" value if you must use javac instead -->
        <!-- property name="build.compiler" value="jikes"/ -->
        <javac srcdir="src" destdir="classes">
            <classpath refid="${compile.classpath}"/>
        </javac>
    </target>

    <!-- Remove classes directory for clean build -->
    <target name="clean"
      description="Prepare for clean build">
      <delete dir="classes"/>
      <mkdir  dir="classes"/>
    </target>

    <!-- Build Javadoc documentation -->
    <target name="javadoc"
     description="Generate JavaDoc API docs">
        <delete dir="./doc/api"/>
        <mkdir dir="./doc/api"/>
        <javadoc sourcepath="./src/java"
            destdir="./doc/api"
            classpath="${servlet.jar}:${jdbc20ext.jar}"
            packagenames="org.*"
            author="true"
            private="true"
            version="true"
            windowtitle="${project.title} API Documentation"
            doctitle="&lt;h1&gt;${project.title} API Documentation (Version ${project.version})&lt;/h1&gt;"
            bottom="Copyright &#169; 2001-2002 - Apache Software Foundation">
            <classpath refid="${compile.classpath}"/>
        </javadoc>
    </target>

    <!-- Build binary distribution -->
    <target name="compile.lib"
        depends="compile"
        description="Create binary distribution">

      <mkdir
        dir="${distpath.project}"/>

      <jar
        jarfile="${distpath.project}/${project.distname}.jar"
        basedir="./classes"/>

    </target>

    <!-- Build distribution -->
    <target name="dist"
        description="Create distribution">

      <mkdir
        dir="${distpath.project}"/>

      <zip zipfile="${distpath.project}/${project.distname}.zip">
        <zipfileset dir="." prefix="struts-scaffold"/>
      </zip>

      <jar
        jarfile="${distpath.project}/${project.distname}.jar"
        basedir="./classes"/>

    </target>


    <!-- Build entire project -->
    <target name="project" depends="clean,prepare,compile,javadoc,dist"/>

</project>
